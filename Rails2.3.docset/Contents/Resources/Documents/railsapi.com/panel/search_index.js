var search_data = {"index":{"searchIndex":["assertions","domassertions","modelassertions","responseassertions","routingassertions","selectorassertions","tagassertions","base","classmethods","cgihandler","properstream","caching","actions","actioncachepath","classmethods","fragments","pages","classmethods","sweeping","cgiext","stdinput","cookies","dispatcher","failsafe","classmethods","flash","flashhash","classmethods","http","headers","httpauthentication","basic","controllermethods","digest","controllermethods","runner","session","multipartneededexception","integrationtest","classmethods","middlewarestack","middleware","instancemethods","paramsparser","performancetest","polymorphicroutes","recordidentifier","reloader","bodywrapper","request","requestforgeryprotection","classmethods","rescue","classmethods","resources","response","routing","helpers","optimisation","optimiser","positionalarguments","positionalargumentswithadditionalparams","optionalformatsegment","mapper","session","abstractstore","sessionhash","cookiestore","cookieoverflow","memcachestore","classmethods","streaming","stringcoercion","uglybody","testcase","assertions","raiseactionexceptions","testprocess","testresponse","testuploadedfile","translation","uploadedfile","uploadedstringio","uploadedtempfile","urlwriter","classmethods","base","base","proxymodule","activerecordhelper","assettaghelper","atomfeedhelper","atombuilder","atomfeedbuilder","benchmarkhelper","cachehelper","capturehelper","classmethods","datehelper","debughelper","formhelper","formoptionshelper","formtaghelper","javascripthelper","numberhelper","prototypehelper","generatormethods","rawoutputhelper","recordidentificationhelper","recordtaghelper","sanitizehelper","scriptaculoushelper","taghelper","texthelper","translationhelper","urlhelper","partials","reloadabletemplate","reloadablepath","templatedeleted","unfreezable","template","eagerpath","path","templatehandler","builder","compilable","classmethods","erb","rjs","testcase","testcontroller","activerecorderror","adapternotfound","adapternotspecified","classmethods","classmethods","associationtypemismatch","classmethods","innerjoinassociation","hasonethroughassociation","attributeassignmenterror","classmethods","autosaveassociation","classmethods","base","classmethods","classmethods","callbacks","configurationerror","abstractadapter","column","format","connectionhandler","connectionmanagement","connectionpool","databaselimits","databasestatements","mysqladapter","postgresqladapter","querycache","quoting","sqliteadapter","version","schemastatements","table","tabledefinition","connectionnotestablished","connectiontimeouterror","dangerousattributeerror","dirty","classmethods","dynamicfindermatch","dynamicscopematch","error","errors","locking","optimistic","classmethods","pessimistic","migration","migrationproxy","missingattributeerror","multiparameterassignmenterrors","namedscope","classmethods","scope","classmethods","toomanyrecords","observer","classmethods","preparedstatementinvalid","querycache","classmethods","readonlyrecord","recordinvalid","recordnotfound","recordnotsaved","classmethods","macroreflection","rollback","schema","serialization","serializationtypemismatch","sessionstore","session","sqlbypass","staleobjecterror","statementinvalid","testfixtures","classmethods","timestamp","transactions","classmethods","unknownattributeerror","validations","classmethods","activeresource","badrequest","base","clienterror","connection","custommethods","classmethods","instancemethods","errors","forbiddenaccess","formats","jsonformat","xmlformat","httpmock","invalidrequesterror","request","resourceconflict","resourcegone","resourcenotfound","response","sslerror","servererror","timeouterror","unauthorizedaccess","validations","backtracecleaner","base64","basicobject","bufferedlogger","severity","cache","compressedmemcachestore","filestore","memcachestore","memorystore","store","strategy","localcache","synchronizedmemorystore","callbacks","callback","callbackchain","classmethods","access","conversions","extractoptions","grouping","randomaccess","wrapper","encoding","conversions","behavior","calculations","classmethods","conversions","calculations","classmethods","conversions","atomic","rounding","time","classmethods","conversions","deepmerge","diff","except","keys","reversemerge","slice","evenodd","inflections","time","module","bytes","conversions","time","cleanwithin","blocklessstep","conversions","includerange","overlaps","behavior","conversions","filters","inflections","iterators","multibyte","startsendswith","behavior","calculations","classmethods","conversions","zones","classmethods","deprecatedobjectproxy","duration","gzip","stream","inflector","inflections","json","backends","jsongem","yajl","yaml","circularreferenceerror","variable","memoizable","instancemethods","messageencryptor","invalidmessage","messageverifier","invalidsignature","modelname","chars","codepoint","encodingerror","unicodedatabase","rescuable","classmethods","safebuffer","securerandom","stringinquirer","testcase","testing","assertions","declarative","performance","benchmarker","metrics","base","cputime","gcruns","gctime","memory","objects","processtime","time","walltime","performer","profiler","setupandteardown","forclassictestunit","forminitest","timewithzone","timezone","xmlmini","xmlmini_libxmlsax","hashbuilder","conversions","document","node","xmlmini_nokogirisax","hashbuilder","cookie","queryextension","commands","discover","info","install","list","plugin","remove","source","sources","unsource","update","datetime","dir","dispatchservlet","erb","util","enumerable","fixnum","fixtures","gem","hashwithindifferentaccess","i18n","kernel","libxml","conversions","document","node","logger","formatter","simpleformatter","mime","type","module","object","pgresult","plugin","process","rexml","document","entity","racklintpatch","allowstringsubclass","rails","backtracecleaner","configuration","gembuilder","gemdependency","gemplugin","generator","abstractgemsource","base","commands","base","create","destroy","list","rewindbase","update","gemgeneratorsource","gempathsource","generatedattribute","generatorerror","lookup","classmethods","manifest","namedbase","options","classmethods","pathsource","scripts","base","source","spec","usageerror","initializer","plugin","rack","secretkeygenerator","vendorgemsourceindex","railsenvironment","railsfcgihandler","recursivehttpfetcher","repositories","repository","sourceannotationextractor","annotation","test","unit","+()","+()","+()","+()","-()","-()","<<()","<<()","<=>()","<=>()","<=>()","<=>()","<=>()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","===()","===()","===()","===()","=~()","=~()","=~()","get()","post()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]=()","[]=()","[]=()","[]=()","[]=()","_call()","about()","abstract_class?()","accepts()","accepts_nested_attributes_for()","accessible_paths()","active()","active?()","active?()","active?()","active?()","acts_like?()","acts_like_date?()","acts_like_string?()","acts_like_string?()","acts_like_time?()","acts_like_time?()","adapter_name()","adapter_name()","add()","add()","add()","add()","add_column()","add_column()","add_column()","add_column_position!()","add_filter()","add_frozen_gem_path()","add_gem_load_paths()","add_general_options!()","add_index()","add_limit!()","add_limit_offset!()","add_load_paths()","add_lock!()","add_observer!()","add_on_blank()","add_on_empty()","add_options!()","add_order_by_for_association_limiting!()","add_plugin_load_paths()","add_silencer()","add_spec()","add_support_load_paths()","add_timestamps()","add_to_base()","add_to_base()","advance()","advance()","advance()","advance()","after_create()","after_destroy()","after_filter()","after_generate()","after_initialize()","after_initialize()","after_initialize_blocks()","after_save()","after_update()","after_validation()","after_validation_on_create()","after_validation_on_update()","aggregate_mapping()","ago()","ago()","ago()","ago()","ago()","ago()","alert()","alias_attribute()","alias_attribute_with_dirty()","alias_method_chain()","all()","all()","all()","allow_concurrency()","allow_concurrency=()","announce()","any?()","app()","append_after_filter()","append_around_filter()","append_before_filter()","append_features()","append_features()","append_sources()","append_view_path()","append_view_path()","applicable?()","applicable?()","around_filter()","array_or_string_for_javascript()","as_json()","as_json()","as_json()","as_json()","as_load_path()","assert_blank()","assert_difference()","assert_dom_equal()","assert_dom_not_equal()","assert_generates()","assert_no_difference()","assert_no_tag()","assert_present()","assert_recognizes()","assert_redirected_to()","assert_response()","assert_routing()","assert_select()","assert_select_email()","assert_select_encoded()","assert_select_rjs()","assert_tag()","assert_template()","assert_valid()","assert_valid_keys()","assign()","assign_default_content_type_and_charset!()","assigns()","assume_migrated_upto_version()","at()","at_beginning_of_day()","at_beginning_of_day()","at_beginning_of_day()","at_beginning_of_month()","at_beginning_of_month()","at_beginning_of_quarter()","at_beginning_of_quarter()","at_beginning_of_week()","at_beginning_of_week()","at_beginning_of_year()","at_beginning_of_year()","at_end_of_month()","at_end_of_month()","at_end_of_quarter()","at_end_of_quarter()","at_end_of_week()","at_end_of_week()","at_end_of_year()","at_end_of_year()","at_midnight()","at_midnight()","at_midnight()","atom_feed()","atomic_write()","attr_accessible()","attr_accessor_with_default()","attr_internal()","attr_internal_accessor()","attr_internal_reader()","attr_internal_writer()","attr_protected()","attr_readonly()","attribute_for_inspect()","attribute_method_suffix()","attribute_names()","attribute_present?()","attributes()","attributes()","attributes=()","attributes_before_type_cast()","authenticate()","authenticate()","authenticate_or_request_with_http_basic()","authenticate_or_request_with_http_digest()","authenticate_with_http_basic()","authenticate_with_http_digest()","authentication_header()","authentication_request()","authentication_request()","authorization()","authorization()","auto_discovery_link_tag()","auto_flush()","auto_flushing=()","auto_link()","average()","backend()","backend=()","backend=()","backtrace_cleaner()","bang?()","banner()","banner()","banner()","banner()","base64()","base_class()","becomes()","before_create()","before_destroy()","before_filter()","before_save()","before_update()","before_validation()","before_validation_on_create()","before_validation_on_update()","begin_db_transaction()","begin_db_transaction()","beginning_of_day()","beginning_of_day()","beginning_of_day()","beginning_of_month()","beginning_of_month()","beginning_of_quarter()","beginning_of_quarter()","beginning_of_week()","beginning_of_week()","beginning_of_year()","beginning_of_year()","belongs_to()","belongs_to()","belongs_to()","belongs_to?()","benchmark()","benchmark()","benchmark()","benchmark()","best_install_method()","between?()","binary_to_string()","blank?()","body()","breakpoint()","breakpoint_server()","breakpoint_server=()","browser_generated?()","buffer()","build()","build()","build()","build()","build_callbacks()","build_mem_cache()","build_observer()","build_request_uri()","built?()","builtin_directories()","button_to()","button_to_function()","button_to_remote()","byte()","bytes()","cache()","cache()","cache()","cache()","cache()","cache_asset_timestamps()","cache_asset_timestamps=()","cache_attribute?()","cache_attributes()","cache_configured?()","cache_fixtures()","cache_for_connection()","cache_format()","cache_key()","cache_page()","cache_page()","cache_store=()","cache_template_loading?()","cached_attributes()","cached_fixtures()","caches_action()","caches_page()","calculate()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","camelcase()","camelize()","camelize()","capitalize()","capture()","case_sensitive_equality_operator()","case_sensitive_equality_operator()","catch_schema_changes()","cdata_block()","cdata_section()","center()","change()","change()","change()","change()","change_column()","change_column()","change_column_default()","change_column_default()","change_column_null()","change_column_null()","change_column_null()","change_default()","change_table()","changed()","changed?()","changed_for_autosave?()","changes()","characters()","chars()","charset()","charset()","charset=()","check_box()","check_box_tag()","check_for_unbuilt_gems()","check_gem_dependencies()","check_ruby_version()","checkin()","checkout()","class_collisions()","class_collisions()","class_collisions()","class_eval()","class_file()","class_name()","class_name()","class_of_active_record_descendant()","classify()","classify()","clean()","clean_backtrace()","clean_within()","cleanup_application()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear_active_connections!()","clear_all_connections!()","clear_buffer()","clear_query_cache()","clear_reloadable_connections!()","clear_reloadable_connections!()","clear_stale_cached_connections!()","client_min_messages()","client_min_messages=()","clone()","clone()","close()","close()","close()","close_connection()","collation()","collection_path()","collection_path()","collection_select()","colorize_logging()","column()","column()","column_for_attribute()","column_name_length()","column_names()","columns()","columns()","columns()","columns_hash()","columns_per_multicolumn_index()","columns_per_table()","columns_with_query_cache()","commit_db_transaction()","commit_db_transaction()","comparable_time()","compare_with_coercion()","compare_with_coercion()","compile()","compile()","compile()","compile()","complex_template()","complex_template()","complex_template()","complex_template()","compose()","compose_codepoints()","composed_of()","compress()","compute_type()","concat()","concat()","configuration()","configuration=()","configurations()","connect()","connected?()","connected?()","connected?()","connection()","connection()","connection()","connection()","connection()","connection()","connection()","connection()","connection_handler()","connection_pool()","connection_pools()","constantize()","constantize()","construct_count_options_from_args()","consumes?()","content_columns()","content_for()","content_length()","content_tag()","content_tag_for()","content_type()","content_type()","content_type()","content_type=()","controller_class()","controller_class=()","controller_class_name()","controller_class_name()","controller_name()","controller_name()","controller_name()","controller_path()","controller_path()","controller_path()","controller_path()","controller_path()","controller_relative_to()","convert_key()","convert_value()","cookies()","cookies()","count()","count()","count()","count_by_sql()","create()","create()","create()","create()","create!()","create_database()","create_database()","create_fixtures()","create_fixtures()","create_reflection()","create_savepoint()","create_savepoint()","create_savepoint()","create_table()","create_table!()","create_table!()","css_select()","current()","current()","current()","current_cycle()","current_database()","current_database()","current_hash()","current_hash()","current_migration_number()","current_page?()","current_savepoint_name()","custom_method_collection_url()","cycle()","daemon()","daemonize()","dasherize()","dasherize()","data()","data()","data()","data_column()","data_column_name()","data_column_size_limit()","database_configuration()","date_select()","datetime_format()","datetime_format=()","datetime_select()","day()","days()","days_in_month()","debug()","debug_rjs()","debugger()","decode()","decode()","decode()","decode()","decode()","decode64()","decode_credentials()","decode_credentials()","decode_credentials_header()","decompose()","decompose_codepoints()","decompress()","decrement()","decrement()","decrement()","decrement()","decrement!()","decrement_counter()","decrement_open_transactions()","decrypt()","decrypt_and_verify()","deep_merge()","deep_merge!()","default()","default()","default()","default=()","default_error_messages()","default_options()","default_options()","default_options()","default_primary_key_type()","default_scope()","default_sequence_name()","default_timezone()","default_url_options()","defaults()","define()","define_around_helper()","define_attribute_methods()","define_callbacks()","define_dispatcher_callbacks()","define_read_methods()","delay()","delegate()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete?()","delete_all()","delete_existing_fixtures()","delete_matched()","delete_matched()","delete_matched()","delete_matched()","delete_sql()","delete_via_redirect()","deliver()","deliver!()","demodulize()","demodulize()","dependencies()","dependency()","dependency()","descends_from_active_record?()","destination_path()","destroy()","destroy()","destroy()","destroy()","destroy_all()","destroyed?()","determine_default_controller_class()","determine_default_helper_class()","determine_install_method()","diff()","directory()","directory()","directory()","directory()","dirname()","dirties_query_cache()","disable_dependency_loading()","disable_referential_integrity()","discard()","disconnect!()","disconnect!()","disconnect!()","disconnect!()","disconnect!()","dispatch()","dispatch()","dispatch()","dispatch_cgi()","dispatch_cgi()","dispatcher_error()","dispatcher_log()","display()","distance_of_time_in_words()","distance_of_time_in_words_to_now()","distinct()","div_for()","dom_class()","dom_class()","dom_id()","dom_id()","domain()","downcase()","download()","draggable()","draggable_element()","drop_receiving()","drop_receiving_element()","drop_table()","drop_table()","drop_table!()","drop_table!()","dst?()","dup()","dup()","dup()","duplicable?()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each_char()","each_error()","each_full()","each_full()","each_with_hack()","each_with_object()","element_path()","element_path()","empty?()","empty?()","empty_insert_statement()","empty_insert_statement()","emulate_booleans()","enable_warnings()","encode()","encode()","encode()","encode64()","encode64s()","encode_credentials()","encode_credentials()","encoding()","encrypt()","encrypt_and_sign()","end_document()","end_element()","end_of_day()","end_of_day()","end_of_day()","end_of_month()","end_of_month()","end_of_quarter()","end_of_quarter()","end_of_week()","end_of_week()","end_of_year()","end_of_year()","ends_with?()","engine?()","entity_expansion_limit=()","entry()","enumerate()","env()","environment()","environment()","environment=()","environment_path()","eql?()","eql?()","eql?()","eql?()","eql?()","erase()","erb_trim_mode()","error()","error_message_on()","error_messages_for()","errors()","errors()","escape_bytea()","escape_javascript()","escape_once()","establish_connection()","establish_connection()","etag()","etag=()","etag?()","etag_matches?()","evaluate_remote_response()","even?()","exabyte()","exabytes()","except()","except!()","excerpt()","exclude?()","execute()","execute()","exempt_from_layout()","exempt_from_layout?()","exist()","exist?()","exist?()","exist?()","exist?()","exist?()","existing_migrations()","exists?()","exists?()","exists?()","exit_handler()","exit_now_handler()","expand_cache_key()","expand_hash_conditions_for_aggregates()","expected_response()","expire_action()","expire_fragment()","expire_page()","expire_page()","expires_in()","expires_now()","extended()","extended()","extended()","extension()","extension()","externals()","externals=()","extract_annotations_from()","extract_default()","extract_options!()","extract_repository_uri()","extract_value()","fallback_string_to_date()","fallback_string_to_time()","fast_string_to_date()","fast_string_to_time()","fetch()","fetch()","fetch()","fetch()","fetch_dir()","field_set_tag()","field_type()","fields_for()","fifth()","file()","file()","file()","file()","file_field()","file_field_tag()","filename()","filename()","filter_chain()","filter_parameter_logging()","find()","find()","find()","find()","find()","find()","find_all_tag()","find_by_session_id()","find_by_session_id()","find_by_sql()","find_cmd()","find_each()","find_home()","find_in()","find_in_batches()","find_name()","find_plugin()","find_tag()","find_tzinfo()","finder?()","first()","first()","fixture_file_upload()","fixture_is_cached?()","fixtures()","flash()","flush()","flush_cache()","flush_logger()","follow_redirect!()","foreign_key()","foreign_key()","form()","form_authenticity_param()","form_authenticity_token()","form_data?()","form_for()","form_remote_for()","form_remote_tag()","form_tag()","format()","format()","format()","format()","format()","format()","format()","format=()","format=()","format_and_extension()","format_log_entry()","formatted_offset()","formatted_offset()","formatted_offset()","formatted_offset()","formatted_polymorphic_path()","formatted_polymorphic_url()","formatter()","fortnight()","fortnights()","forty_two()","fourth()","fragment_cache_key()","fragment_exist?()","framework_gem?()","framework_paths()","freeze()","freeze()","freeze()","freeze_with_memoizable()","fresh?()","fresh_when()","from()","from_array()","from_directory_name()","from_json()","from_json()","from_now()","from_now()","from_xml()","from_xml()","from_xml()","frozen?()","frozen?()","full_message()","full_messages()","full_messages()","full_options()","full_options()","full_test_name()","future?()","future?()","future?()","future?()","g_length()","g_pack()","g_unpack()","gc_countdown()","gem()","generate()","generate_full_message()","generate_message()","generate_message()","generate_optimisation_block()","generate_secret()","generated_methods?()","generation_code()","generation_code()","generation_code()","get()","get()","get()","get()","get()","get?()","get_via_redirect()","getgm()","getlocal()","getutc()","getutc()","gigabyte()","gigabytes()","git_url?()","gmt?()","gmt_offset()","gmtime()","gmtoff()","group_by()","grouped_collection_select()","grouped_options_for_select()","gsub_file()","guard_conditions()","guard_conditions()","guard_conditions()","h()","ha1()","handler_for_rescue()","has_and_belongs_to_many()","has_attribute?()","has_default?()","has_many()","has_one()","hash()","hash()","hash()","hash()","head()","head()","head()","head()","head?()","headers()","headers()","helper()","helper()","helper_attr()","helper_class()","helper_method()","helper_method()","helpers()","hex()","hidden_actions()","hidden_field()","hidden_field_tag()","hide()","hide_action()","highlight()","host()","host!()","host_with_port()","hour()","hours()","html?()","html_document()","html_escape()","html_safe()","html_safe?()","html_safe?()","html_safe?()","http_only=()","httpdate()","https!()","https?()","human()","human_attribute_name()","human_name()","human_name()","humanize()","humanize()","id()","id()","id=()","id=()","id_from_response()","identical?()","identify()","if_modified_since()","if_none_match()","image_path()","image_submit_tag()","image_tag()","in()","in()","in()","in_char_class?()","in_clause_length()","in_groups()","in_groups_of()","in_time_zone()","in_time_zone()","include()","include?()","include_with_range?()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included_in_classes()","increment()","increment()","increment()","increment()","increment!()","increment_counter()","increment_open_transactions()","index()","index()","index_by()","index_exists?()","index_name_length()","index_name_length()","indexes()","indexes_per_table()","inflections()","inflections_with_route_reloading()","info()","inheritance_column()","inherited()","inherited_with_options()","init_path()","initialize_cache()","initialize_database()","initialize_database_middleware()","initialize_dependency_mechanism()","initialize_encoding()","initialize_framework_caches()","initialize_framework_logging()","initialize_framework_settings()","initialize_framework_views()","initialize_i18n()","initialize_logger()","initialize_metal()","initialize_query()","initialize_routing()","initialize_schema_migrations_table()","initialize_time_zone()","initialize_whiny_nils()","initialize_with_stdinput()","initialize_without_template_tracking()","initialized=()","initialized?()","input()","insert()","insert()","insert()","insert()","insert_after()","insert_before()","insert_fixture()","insert_fixtures()","insert_html()","insert_sql()","inspect()","inspect()","inspect()","inspect()","inspect()","install()","install()","install()","install_gem_spec_stubs()","install_signal_handler()","install_signal_handlers()","installed?()","installed?()","instance()","instance()","instance()","instance()","instance_exec()","instance_method_already_implemented?()","instance_variable_defined?()","instance_variable_names()","instantiate_all_loaded_fixtures()","instantiate_fixtures()","instantiate_observers()","instantiator?()","interpolation_chunk()","invalid?()","invalid?()","invalid?()","invoke!()","invoke!()","irregular()","is_a?()","is_utf8?()","is_utf8?()","isdst()","iso8601()","j()","javascript_include_tag()","javascript_path()","javascript_tag()","joins_per_query()","json_escape()","keep()","key?()","key?()","kilobyte()","kilobytes()","kind_of?()","klass()","klass()","klass()","klass()","l()","l()","label()","label_tag()","last()","last()","last_modified()","last_modified=()","last_modified?()","layout()","length()","length()","length()","limited_update_conditions()","limited_update_conditions()","link_to()","link_to_function()","link_to_if()","link_to_remote()","link_to_unless()","link_to_unless_current()","links()","literal()","ljust()","load()","load()","load()","load()","load!()","load!()","load!()","load!()","load!()","load_application_classes()","load_application_initializers()","load_attributes_from_response()","load_environment()","load_gems()","load_observers()","load_paths()","load_paths_added?()","load_plugins()","load_specification()","load_view_paths()","loaded?()","loaded?()","loaded?()","loaded?()","local()","local_constant_names()","local_constants()","local_offset()","local_request?()","local_time()","local_to_utc()","locale_files()","locale_path()","localize()","localize()","localized?()","localtime()","location()","location=()","lock!()","locking_column()","locking_enabled?()","log()","log_error()","log_info()","logger()","logger()","logger()","lookup()","lookup()","lookup_by_extension()","lookup_missing_generator()","lookup_store()","ls()","lstrip()","macro()","mail_to()","mailer_name()","mailer_name()","mailer_name=()","mandatory_options()","mandatory_options()","manifest()","many?()","mark_features!()","mark_for_destruction()","markdown()","marked_for_destruction?()","marshal()","marshal()","marshal_dump()","marshal_load()","match()","match()","match_attribute_method?()","match_extraction()","mattr_accessor()","mattr_reader()","mattr_writer()","maximum()","mb_chars()","mb_chars()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure_mode()","media_type()","megabyte()","megabytes()","memoize()","memoize_all()","memoized_ivar_for()","merge()","merge_conditions()","message()","metaclass()","metal_path()","method()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_option_to_s()","method_segment()","microseconds()","middleware()","middleware()","midnight()","midnight()","midnight()","migrate()","migration_directory()","migration_exists?()","migration_template()","migration_template()","migration_template()","migrations_path()","mime_type()","mime_type()","mime_type()","minimum()","minus_with_coercion()","minute()","minutes()","model_name()","monday()","monday()","month()","month()","months()","months()","months_ago()","months_ago()","months_since()","months_since()","months_without_deprecation()","mtime()","multipart?()","multiple_of?()","mute()","name()","name()","named_scope()","names()","namespace()","native_database_types()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new?()","new_and_loaded()","new_date()","new_record?()","new_record?()","new_record?()","new_request!()","new_session()","new_time()","next_migration_number()","next_migration_string()","next_month()","next_month()","next_week()","next_week()","next_year()","next_year()","nonce()","none?()","normalize()","normalize_paths()","normalize_translation_keys()","not_modified?()","now()","now()","number?()","number_to_currency()","number_to_human_size()","number_to_percentage()","number_to_phone()","number_with_delimiter()","number_with_precision()","observe()","observe_field()","observe_form()","observed_class()","observed_classes()","observed_subclasses()","observers()","observers=()","odd?()","old_datetime_format()","old_datetime_format=()","old_formatter()","on()","on()","on_base()","on_base()","on_cdata_block()","on_characters()","on_end_document()","on_end_element()","on_start_document()","on_start_element()","opaque()","open_session()","open_transactions()","option_groups_from_collection_for_select()","options()","options()","options()","options()","options()","options()","options()","options()","options()","options()","options()","options()","options_for_ajax()","options_for_javascript()","options_for_select()","options_from_collection_for_select()","options_include_default?()","ord()","ord()","ordinalize()","ordinalize()","orig_delete()","original_filename()","output_filename()","output_filename()","output_filename()","outside_transaction?()","outside_transaction?()","overlaps?()","parameterize()","parameterize()","parameters()","params()","parent()","parent_name()","parents()","parse()","parse()","parse()","parse()","parse()","parse!()","parse!()","parse!()","parse!()","parse!()","parse!()","parse!()","parse!()","parse!()","parse!()","parse!()","parse!()","partial_path()","partial_path()","password()","password=()","password=()","password_field()","password_field_tag()","past?()","past?()","past?()","past?()","path()","path()","path_for()","path_parameters()","path_to_image()","path_to_javascript()","path_to_stylesheet()","path_without_extension()","path_without_format_and_extension()","period()","period_for_local()","period_for_utc()","periodically_call_remote()","petabyte()","petabytes()","plugin_loader()","plugins()","plugins=()","plural()","plural_class_name()","pluralize()","pluralize()","pluralize()","pluralize_table_names()","polymorphic_path()","polymorphic_url()","pop_d()","port()","port_string()","possible_controllers()","post()","post()","post()","post()","post()","post?()","post_via_redirect()","postgresql_version()","prefetch_primary_key?()","prefix()","prefix=()","prefix_source()","preload_associations()","preload_frameworks()","prepare!()","prepare_controller_class()","prepare_dispatcher()","prepend_after_filter()","prepend_around_filter()","prepend_before_filter()","prepend_sources()","prepend_view_path()","prepend_view_path()","presence()","present?()","prev_month()","prev_month()","prev_year()","prev_year()","primary_key()","primary_key()","primary_key()","primary_key()","primary_key_prefix_type()","prime_cache()","process()","process()","process!()","process!()","process_each_request()","process_request()","process_view_paths()","profile()","protect_against_forgery?()","protect_against_forgery?()","protect_from_forgery()","protocol()","proxy()","proxy=()","proxy=()","proxy_found()","public_path()","public_path=()","push_d()","put()","put()","put()","put()","put()","put?()","put_via_redirect()","query_parameters()","query_string()","quote()","quote()","quote_column_name()","quote_string()","quote_table_name()","quote_table_name()","quote_table_name()","quoted_columns_for_index()","quoted_columns_for_index()","quoted_date()","quoted_false()","quoted_false()","quoted_locking_column()","quoted_true()","quoted_true()","radio_button()","radio_button_tag()","raise()","random_bytes()","random_element()","random_number()","raw()","raw_connection()","raw_host_with_port()","raw_post()","read()","read()","read()","read()","read()","read()","read()","read_fragment()","read_multi()","read_multi()","readable_inspect()","readable_inspect()","readme()","readme()","readme()","readonly!()","readonly?()","readonly_attributes()","receive()","reconnect!()","reconnect!()","reconnect!()","record()","record()","record()","record_entity_expansion!()","recycle!()","redirect()","redirect?()","redirect_to()","redirect_to()","redirect_to_full_url()","redirect_to_url()","reference?()","references()","references()","reflect_on_aggregation()","reflect_on_all_aggregations()","reflect_on_all_associations()","reflect_on_all_autosave_associations()","reflect_on_association()","reflections()","refresh()","refresh!()","regexp_chunk()","register()","register_alias()","register_javascript_expansion()","register_javascript_include_default()","register_stylesheet_expansion()","regular_writer()","relative_path()","release_connection()","release_savepoint()","release_savepoint()","release_savepoint()","reload()","reload()","reload()","reload()","reload!()","reload!()","reload_application()","reload_handler()","reload_plugins?()","reload_with_autosave_associations()","remote_form_for()","remote_function()","remote_ip()","remove()","remove()","remove()","remove_belongs_to()","remove_column()","remove_columns()","remove_connection()","remove_connection()","remove_index()","remove_index()","remove_references()","remove_silencers!()","remove_spec()","remove_timestamps()","remove_timestamps()","rename()","rename_column()","rename_column()","rename_index()","rename_table()","rename_table()","rename_table()","rename_table()","render()","render()","render()","render_optional_error_file()","render_template()","render_to_string()","reorder_characters()","replace()","replace_html()","replace_or_append!()","replay()","report()","report()","request_http_basic_authentication()","request_http_digest_authentication()","request_method()","request_parameters()","request_uri()","request_via_redirect()","requests()","requests()","require_fixture_classes()","require_frameworks()","require_library_or_gem()","requirement()","requirement()","requires_reloading?()","requires_reloading?()","rescue_action()","rescue_action_in_public()","rescue_action_in_public!()","rescue_action_locally()","rescue_action_without_handler()","rescue_action_without_handler()","rescue_from()","rescue_with_handler()","reset!()","reset!()","reset!()","reset!()","reset!()","reset_cache()","reset_cache_if_stale!()","reset_column_information()","reset_counters()","reset_cycle()","reset_locking_column()","reset_sequence!()","reset_session()","reset_session()","reset_sources()","resource()","resources()","respond_to()","respond_to()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to_without_attributes?()","response_from_page_or_rjs()","responses()","restart!()","restart_handler()","restore!()","retrieve_connection()","retrieve_connection_pool()","returning()","reverse()","reverse_merge()","reverse_merge()","reverse_merge!()","reverse_update()","rewind()","rfc2822()","rfc822()","rindex()","rjust()","rollback_active_record_state!()","rollback_db_transaction()","rollback_db_transaction()","rollback_to_savepoint()","rollback_to_savepoint()","rollback_to_savepoint()","root()","root()","round_with_precision()","route_resources()","route_resources()","route_resources()","routed?()","routing_file()","rstrip()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run_callbacks()","run_gc!()","run_in_transaction?()","run_prepare_callbacks()","run_profile()","run_test()","run_warmup()","safe_concat()","sanitize()","sanitize_css()","sanitize_limit()","sanitize_sql_array()","sanitize_sql_for_assignment()","sanitize_sql_for_conditions()","sanitize_sql_hash_for_assignment()","sanitize_sql_hash_for_conditions()","save()","save()","save()","save()","save!()","save_with_validation()","save_with_validation()","save_with_validation!()","say()","say()","say_with_time()","schema_format()","schema_search_path()","schema_search_path=()","scope?()","scopes()","scrape()","search()","second()","second()","seconds()","seconds_since_midnight()","seconds_since_midnight()","secret_key()","secure=()","select()","select()","select()","select_all()","select_all_with_query_cache()","select_date()","select_datetime()","select_day()","select_hour()","select_minute()","select_month()","select_one()","select_rows()","select_rows()","select_rows()","select_rows()","select_second()","select_tag()","select_time()","select_value()","select_values()","select_year()","send_data()","send_file()","send_response()","sending_file?()","serialize()","serialized_attributes()","server_port()","server_software()","session()","session()","session()","session=()","session_enabled?()","session_id()","session_id_column()","session_options()","session_options()","session_options=()","session_store()","session_store=()","set_autoload_paths()","set_cookie()","set_default_backend()","set_fixture_class()","set_inheritance_column()","set_load_path()","set_locking_column()","set_primary_key()","set_root_path!()","set_sequence_name()","set_standard_conforming_strings()","set_table_name()","setup_controller_request_and_response()","setup_fixture_accessors()","setup_fixtures()","setup_with_controller()","show()","show_variable()","silence()","silence()","silence()","silence()","silence!()","silence_spec_warnings()","silence_spec_warnings=()","silence_stream()","silence_warnings()","silencer()","silencer()","simple_format()","since()","since()","since()","since()","since()","since()","singleton_class()","singular()","singular_class_name()","singularize()","singularize()","site()","site=()","site=()","size()","size()","size()","size()","size()","skip_after_filter()","skip_before_filter()","skip_filter()","slice()","slice()","slice!()","slice!()","sortable()","sortable_element()","source()","source_code()","source_index=()","source_path()","sources()","specification()","specification=()","split()","split()","split_args()","sql_query_length()","sqlite_version()","squish()","squish!()","ssl?()","ssl_options()","ssl_options=()","ssl_options=()","stale?()","stale?()","standard_port()","start_document()","start_element()","starts_with?()","stats()","step_with_blockless()","step_with_blockless()","sti_name()","store()","strftime()","string_to_binary()","string_to_date()","string_to_dummy_time()","string_to_time()","stringify_keys()","stringify_keys!()","stringify_keys!()","strip()","strip_links()","strip_tags()","strip_whitespace!()","structure_dump()","stylesheet_link_tag()","stylesheet_path()","subdomains()","submit_tag()","submit_to_remote()","success?()","sum()","sum()","supports_add_column?()","supports_count_distinct?()","supports_ddl_transactions?()","supports_ddl_transactions?()","supports_ddl_transactions?()","supports_insert_with_returning?()","supports_migrations?()","supports_migrations?()","supports_primary_key?()","supports_savepoints?()","supports_savepoints?()","suppress()","suppress_messages()","svn_url?()","swap()","symbolize_keys()","symbolize_keys!()","symbolize_keys!()","symbolized_path_parameters()","synchronize()","t()","t()","table_alias_for()","table_alias_length()","table_alias_length()","table_exists?()","table_exists?()","table_name()","table_name()","table_name_length()","table_name_prefix()","table_name_suffix()","table_structure()","tableize()","tableize()","tables()","tag()","tap()","teardown_fixtures()","template()","template()","template()","template()","template()","template_format()","template_format()","template_root()","template_root=()","terabyte()","terabytes()","test()","tests()","tests()","text?()","text_area()","text_area_tag()","text_field()","text_field_tag()","textilize()","textilize_without_paragraph()","third()","threadsafe!()","tidy_bytes()","tidy_bytes()","time()","time_ago_in_words()","time_select()","time_with_datetime_fallback()","time_zone_options_for_select()","time_zone_select()","timeout()","timeout=()","timeout=()","timestamped_migrations()","timestamps()","timestamps()","titlecase()","titleize()","titleize()","to()","to_a()","to_date()","to_date()","to_date()","to_date()","to_datetime()","to_datetime()","to_datetime()","to_datetime()","to_datetime()","to_f()","to_f()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_i()","to_i()","to_json()","to_json()","to_json()","to_options()","to_options!()","to_options!()","to_param()","to_param()","to_param()","to_param()","to_param()","to_prepare()","to_prepare()","to_query()","to_query()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_sentence()","to_sql()","to_str()","to_str()","to_sym()","to_time()","to_time()","to_time()","to_time()","to_time()","to_utc_offset_s()","to_xml()","to_xml()","to_xml()","to_xml()","to_yaml()","to_yaml()","to_yaml()","today()","today?()","today?()","today?()","toggle()","toggle()","toggle!()","tomorrow()","tomorrow()","tomorrow()","touch()","transaction()","transaction()","transaction()","transaction_joinable=()","translate()","translate()","transliterate()","transliterate()","transliterate()","truncate()","try()","try_to_load_dependency()","tv_sec()","type_cast()","type_cast_code()","type_to_sql()","type_to_sql()","u_unpack()","uncached()","uncached()","uncountable()","undef_my_compiled_methods!()","underscore()","underscore()","unescape()","unescape_bytea()","unescape_rjs()","uninstall()","unmarshal()","unmarshal()","unmemoize_all()","unnormalized()","unpack()","unpacked_path()","until()","until()","unverifiable_types()","upcase()","update()","update()","update()","update()","update_all()","update_attribute()","update_attributes()","update_attributes!()","update_counters()","update_counters_with_lock()","update_page()","update_page_tag()","update_sql()","update_sql()","updated()","url()","url_for()","url_for()","url_for()","url_for()","us_zones()","usage()","usage_message()","usage_message()","usage_message()","use()","use_application_sources!()","use_checkout?()","use_component_sources!()","use_controllers!()","use_externals?()","use_svn?()","use_zone()","usec()","user()","user=()","user=()","user_home()","user_name_and_password()","uses_transaction()","uses_transaction?()","utc()","utc()","utc?()","utc?()","utc_offset()","utc_offset()","utc_offset()","utc_time()","utc_to_local()","valid?()","valid?()","valid?()","valid_alter_table_options()","validate()","validate_digest_response()","validate_nonce()","validate_on_create()","validate_on_update()","validates_acceptance_of()","validates_associated()","validates_confirmation_of()","validates_each()","validates_exclusion_of()","validates_format_of()","validates_inclusion_of()","validates_length_of()","validates_numericality_of()","validates_presence_of()","validates_size_of()","validates_uniqueness_of()","value()","value_to_boolean()","value_to_decimal()","values_at()","vendor_gem?()","vendor_rails?()","verifiable_request_format?()","verification_timeout()","verification_timeout=()","verified_request?()","verify()","verify()","verify!()","verify_authenticity_token()","verify_request?()","version()","version_for_dir()","view_path()","view_paths()","view_paths()","view_paths=()","view_paths=()","view_paths=()","visual_effect()","visual_effect()","wants?()","week()","weeks()","with_backend()","with_backend()","with_connection()","with_controllers()","with_exclusive_scope()","with_gc_stats()","with_gc_stats()","with_gc_stats()","with_local_cache()","with_options()","with_output_file()","with_routing()","with_scope()","with_signal_handler()","with_template()","with_transaction_returning_status()","word_wrap()","wrap()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write_fragment()","write_specification()","xhr()","xhr()","xhr?()","xml()","xml_column_fallback()","xml_http_request()","xml_http_request()","xml_http_request?()","xmlschema()","xmlschema()","xmlschema()","xss_safe?()","year()","year()","years()","years()","years_ago()","years_ago()","years_since()","years_since()","years_without_deprecation()","yesterday()","yesterday()","yesterday()","zone()","zone()","zone=()","zones_map()","readme","changelog","readme","base.rb","changelog","readme","dom_assertions.rb","model_assertions.rb","response_assertions.rb","routing_assertions.rb","selector_assertions.rb","tag_assertions.rb","base.rb","benchmarking.rb","caching.rb","actions.rb","fragments.rb","pages.rb","sweeper.rb","sweeping.rb","cgi_ext.rb","cookie.rb","query_extension.rb","stdinput.rb","cgi_process.rb","cookies.rb","dispatcher.rb","failsafe.rb","filters.rb","flash.rb","headers.rb","helpers.rb","http_authentication.rb","integration.rb","layout.rb","middleware_stack.rb","middlewares.rb","mime_responds.rb","mime_type.rb","mime_types.rb","params_parser.rb","performance_test.rb","polymorphic_routes.rb","rack_lint_patch.rb","record_identifier.rb","reloader.rb","request.rb","request_forgery_protection.rb","rescue.rb","resources.rb","response.rb","routing.rb","builder.rb","optimisations.rb","recognition_optimisation.rb","route.rb","route_set.rb","routing_ext.rb","segments.rb","abstract_store.rb","cookie_store.rb","mem_cache_store.rb","session_management.rb","status_codes.rb","streaming.rb","string_coercion.rb","test_case.rb","test_process.rb","translation.rb","uploaded_file.rb","url_rewriter.rb","verification.rb","base.rb","helpers.rb","active_record_helper.rb","asset_tag_helper.rb","atom_feed_helper.rb","benchmark_helper.rb","cache_helper.rb","capture_helper.rb","date_helper.rb","debug_helper.rb","form_helper.rb","form_options_helper.rb","form_tag_helper.rb","javascript_helper.rb","number_helper.rb","prototype_helper.rb","raw_output_helper.rb","record_identification_helper.rb","record_tag_helper.rb","sanitize_helper.rb","scriptaculous_helper.rb","tag_helper.rb","text_helper.rb","translation_helper.rb","url_helper.rb","inline_template.rb","partials.rb","paths.rb","reloadable_template.rb","renderable.rb","renderable_partial.rb","template.rb","template_error.rb","template_handler.rb","template_handlers.rb","builder.rb","erb.rb","rjs.rb","test_case.rb","changelog","readme","aggregations.rb","association_preload.rb","associations.rb","association_collection.rb","association_proxy.rb","belongs_to_association.rb","belongs_to_polymorphic_association.rb","has_and_belongs_to_many_association.rb","has_many_association.rb","has_many_through_association.rb","has_one_association.rb","has_one_through_association.rb","attribute_methods.rb","autosave_association.rb","base.rb","batches.rb","calculations.rb","callbacks.rb","connection_pool.rb","connection_specification.rb","database_limits.rb","database_statements.rb","query_cache.rb","quoting.rb","schema_definitions.rb","schema_statements.rb","abstract_adapter.rb","mysql_adapter.rb","postgresql_adapter.rb","sqlite3_adapter.rb","sqlite_adapter.rb","dirty.rb","dynamic_finder_match.rb","dynamic_scope_match.rb","fixtures.rb","optimistic.rb","pessimistic.rb","migration.rb","named_scope.rb","nested_attributes.rb","observer.rb","query_cache.rb","reflection.rb","schema.rb","schema_dumper.rb","serialization.rb","json_serializer.rb","xml_serializer.rb","session_store.rb","test_case.rb","timestamp.rb","transactions.rb","validations.rb","version.rb","changelog","readme","active_resource.rb","base.rb","connection.rb","custom_methods.rb","exceptions.rb","formats.rb","json_format.rb","xml_format.rb","http_mock.rb","validations.rb","version.rb","changelog","readme","all.rb","backtrace_cleaner.rb","base64.rb","basic_object.rb","buffered_logger.rb","cache.rb","compressed_mem_cache_store.rb","drb_store.rb","file_store.rb","mem_cache_store.rb","memory_store.rb","local_cache.rb","synchronized_memory_store.rb","callbacks.rb","core_ext.rb","array.rb","access.rb","conversions.rb","extract_options.rb","grouping.rb","random_access.rb","wrapper.rb","base64.rb","encoding.rb","benchmark.rb","bigdecimal.rb","conversions.rb","blank.rb","cgi.rb","escape_skipping_slashes.rb","class.rb","attribute_accessors.rb","delegating_attributes.rb","inheritable_attributes.rb","removal.rb","date.rb","behavior.rb","calculations.rb","conversions.rb","date_time.rb","calculations.rb","conversions.rb","duplicable.rb","enumerable.rb","exception.rb","file.rb","atomic.rb","float.rb","rounding.rb","time.rb","hash.rb","conversions.rb","deep_merge.rb","diff.rb","except.rb","indifferent_access.rb","keys.rb","reverse_merge.rb","slice.rb","integer.rb","even_odd.rb","inflections.rb","time.rb","kernel.rb","agnostics.rb","daemonizing.rb","debugger.rb","reporting.rb","requires.rb","load_error.rb","logger.rb","module.rb","aliasing.rb","attr_accessor_with_default.rb","attr_internal.rb","attribute_accessors.rb","delegation.rb","inclusion.rb","introspection.rb","loading.rb","model_naming.rb","synchronization.rb","name_error.rb","numeric.rb","bytes.rb","conversions.rb","time.rb","object.rb","blank.rb","conversions.rb","extending.rb","instance_variables.rb","metaclass.rb","misc.rb","singleton_class.rb","pathname.rb","clean_within.rb","proc.rb","process.rb","daemon.rb","range.rb","blockless_step.rb","conversions.rb","include_range.rb","overlaps.rb","rexml.rb","string.rb","access.rb","behavior.rb","bytesize.rb","conversions.rb","filters.rb","inflections.rb","iterators.rb","multibyte.rb","output_safety.rb","starts_ends_with.rb","xchar.rb","symbol.rb","time.rb","behavior.rb","calculations.rb","conversions.rb","zones.rb","try.rb","uri.rb","dependencies.rb","deprecation.rb","duration.rb","gzip.rb","inflections.rb","inflector.rb","json.rb","jsongem.rb","yajl.rb","yaml.rb","decoding.rb","date.rb","date_time.rb","enumerable.rb","false_class.rb","hash.rb","nil_class.rb","numeric.rb","object.rb","regexp.rb","string.rb","symbol.rb","time.rb","true_class.rb","encoding.rb","variable.rb","memoizable.rb","message_encryptor.rb","message_verifier.rb","multibyte.rb","chars.rb","exceptions.rb","unicode_database.rb","utils.rb","option_merger.rb","ordered_hash.rb","ordered_options.rb","rescuable.rb","secure_random.rb","string_inquirer.rb","test_case.rb","assertions.rb","declarative.rb","default.rb","deprecation.rb","performance.rb","setup_and_teardown.rb","time_with_zone.rb","time_zone.rb","vendor.rb","version.rb","whiny_nil.rb","xml_mini.rb","jdom.rb","libxml.rb","libxmlsax.rb","nokogiri.rb","nokogirisax.rb","rexml.rb","changelog","mit-license","readme","code_statistics.rb","commands.rb","about.rb","console.rb","dbconsole.rb","destroy.rb","generate.rb","plugin.rb","runner.rb","server.rb","update.rb","console_app.rb","console_sandbox.rb","console_with_helpers.rb","dispatcher.rb","fcgi_handler.rb","initializer.rb","performance_test_help.rb","backtrace_cleaner.rb","gem_builder.rb","gem_dependency.rb","plugin.rb","rack.rb","vendor_gem_source_index.rb","version.rb","rails_generator.rb","base.rb","commands.rb","generated_attribute.rb","lookup.rb","manifest.rb","options.rb","scripts.rb","secret_key_generator.rb","simple_logger.rb","spec.rb","railties_path.rb","ruby_version_check.rb","rubyprof_ext.rb","source_annotation_extractor.rb","test_help.rb","webrick_server.rb"],"longSearchIndex":["actioncontroller","actioncontroller::assertions","actioncontroller::assertions","actioncontroller::assertions","actioncontroller::assertions","actioncontroller::assertions","actioncontroller::assertions","actioncontroller","actioncontroller::benchmarking","actioncontroller","actioncontroller::cgihandler","actioncontroller","actioncontroller::caching","actioncontroller::caching::actions","actioncontroller::caching::actions","actioncontroller::caching","actioncontroller::caching","actioncontroller::caching::pages","actioncontroller::caching","actioncontroller","actioncontroller::cgiext","actioncontroller","actioncontroller","actioncontroller","actioncontroller::filters","actioncontroller","actioncontroller::flash","actioncontroller::helpers","actioncontroller","actioncontroller::http","actioncontroller","actioncontroller::httpauthentication","actioncontroller::httpauthentication::basic","actioncontroller::httpauthentication","actioncontroller::httpauthentication::digest","actioncontroller::integration","actioncontroller::integration","actioncontroller::integration::session","actioncontroller","actioncontroller::layout","actioncontroller","actioncontroller::middlewarestack","actioncontroller::mimeresponds","actioncontroller","actioncontroller","actioncontroller","actioncontroller","actioncontroller","actioncontroller::reloader","actioncontroller","actioncontroller","actioncontroller::requestforgeryprotection","actioncontroller","actioncontroller::rescue","actioncontroller","actioncontroller","actioncontroller","actioncontroller::routing","actioncontroller::routing","actioncontroller::routing::optimisation","actioncontroller::routing::optimisation","actioncontroller::routing::optimisation","actioncontroller::routing","actioncontroller::routing::routeset","actioncontroller","actioncontroller::session","actioncontroller::session::abstractstore","actioncontroller::session","actioncontroller::session::cookiestore","actioncontroller::session","actioncontroller::sessionmanagement","actioncontroller","actioncontroller","actioncontroller::stringcoercion","actioncontroller","actioncontroller::testcase","actioncontroller::testcase","actioncontroller","actioncontroller","actioncontroller","actioncontroller","actioncontroller","actioncontroller","actioncontroller","actioncontroller","actioncontroller::verification","actionmailer","actionview","actionview::base","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers::atomfeedhelper","actionview::helpers::atomfeedhelper","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers::prototypehelper::javascriptgenerator","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview","actionview","actionview::reloadabletemplate","actionview::reloadabletemplate","actionview::reloadabletemplate","actionview","actionview::template","actionview::template","actionview","actionview::templatehandlers","actionview::templatehandlers","actionview::templatehandlers::compilable","actionview::templatehandlers","actionview::templatehandlers","actionview","actionview::testcase","activerecord","activerecord","activerecord","activerecord::aggregations","activerecord::associationpreload","activerecord","activerecord::associations","activerecord::associations::classmethods::innerjoindependency","activerecord::associations","activerecord","activerecord::attributemethods","activerecord","activerecord::autosaveassociation","activerecord","activerecord::batches","activerecord::calculations","activerecord","activerecord","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters::column","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord","activerecord","activerecord","activerecord","activerecord::dirty","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord::locking","activerecord::locking::optimistic","activerecord::locking","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord::namedscope","activerecord::namedscope","activerecord::nestedattributes","activerecord::nestedattributes","activerecord","activerecord::observing","activerecord","activerecord","activerecord::querycache","activerecord","activerecord","activerecord","activerecord","activerecord::reflection","activerecord::reflection","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord::sessionstore","activerecord::sessionstore","activerecord","activerecord","activerecord","activerecord::testfixtures","activerecord","activerecord","activerecord::transactions","activerecord","activerecord","activerecord::validations","activeresource\/lib\/active_resource\/http_mock.rb","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource::custommethods","activeresource::custommethods","activeresource","activeresource","activeresource","activeresource::formats","activeresource::formats","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activesupport","activesupport","activesupport","activesupport","activesupport::bufferedlogger","activesupport","activesupport::cache","activesupport::cache","activesupport::cache","activesupport::cache","activesupport::cache","activesupport::cache","activesupport::cache::strategy","activesupport::cache","activesupport","activesupport::callbacks","activesupport::callbacks","activesupport::callbacks","activesupport::coreextensions::array","activesupport::coreextensions::array","activesupport::coreextensions::array","activesupport::coreextensions::array","activesupport::coreextensions::array","activesupport::coreextensions::array","activesupport::coreextensions::base64","activesupport::coreextensions::bigdecimal","activesupport::coreextensions::date","activesupport::coreextensions::date","activesupport::coreextensions::date::calculations","activesupport::coreextensions::date","activesupport::coreextensions::datetime","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::datetime","activesupport::coreextensions::file","activesupport::coreextensions::float","activesupport::coreextensions::float","activesupport::coreextensions::hash","activesupport::coreextensions::hash","activesupport::coreextensions::hash","activesupport::coreextensions::hash","activesupport::coreextensions::hash","activesupport::coreextensions::hash","activesupport::coreextensions::hash","activesupport::coreextensions::hash","activesupport::coreextensions::integer","activesupport::coreextensions::integer","activesupport::coreextensions::integer","activesupport::coreextensions","activesupport::coreextensions::numeric","activesupport::coreextensions::numeric","activesupport::coreextensions::numeric","activesupport::coreextensions::pathname","activesupport::coreextensions::range","activesupport::coreextensions::range","activesupport::coreextensions::range","activesupport::coreextensions::range","activesupport::coreextensions::string","activesupport::coreextensions::string","activesupport::coreextensions::string","activesupport::coreextensions::string","activesupport::coreextensions::string","activesupport::coreextensions::string","activesupport::coreextensions::string","activesupport::coreextensions::time","activesupport::coreextensions::time","activesupport::coreextensions::time::calculations","activesupport::coreextensions::time","activesupport::coreextensions::time","activesupport::coreextensions::time::zones","activesupport::deprecation","activesupport","activesupport","activesupport::gzip","activesupport","activesupport::inflector","activesupport","activesupport::json","activesupport::json::backends","activesupport::json::backends","activesupport::json::backends","activesupport::json::encoding","activesupport::json","activesupport","activesupport::memoizable","activesupport","activesupport::messageencryptor","activesupport","activesupport::messageverifier","activesupport","activesupport::multibyte","activesupport::multibyte","activesupport::multibyte","activesupport::multibyte","activesupport","activesupport::rescuable","activesupport","activesupport","activesupport","activesupport","activesupport","activesupport::testing","activesupport::testing","activesupport::testing","activesupport::testing::performance","activesupport::testing::performance","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance","activesupport::testing::performance","activesupport::testing","activesupport::testing::setupandteardown","activesupport::testing::setupandteardown","activesupport","activesupport","activesupport","activesupport","activesupport::xmlmini_libxmlsax","activesupport::xmlmini_nokogiri","activesupport::xmlmini_nokogiri::conversions","activesupport::xmlmini_nokogiri::conversions","activesupport","activesupport::xmlmini_nokogirisax","cgi","cgi","railties\/lib\/commands\/plugin.rb","commands","commands","commands","commands","commands","commands","commands","commands","commands","commands","activesupport\/lib\/active_support\/core_ext\/date_time.rb","railties\/lib\/rails_generator\/lookup.rb","railties\/lib\/webrick_server.rb","activesupport\/lib\/active_support\/core_ext\/string\/output_safety.rb","erb","activesupport\/lib\/active_support\/core_ext\/enumerable.rb","activesupport\/lib\/active_support\/core_ext\/string\/output_safety.rb","activerecord\/lib\/active_record\/fixtures.rb","railties\/lib\/rails\/gem_dependency.rb","activesupport\/lib\/active_support\/core_ext\/hash\/indifferent_access.rb","activesupport\/lib\/active_support\/vendor.rb","activesupport\/lib\/active_support\/core_ext\/kernel\/debugger.rb","activesupport\/lib\/active_support\/xml_mini\/libxml.rb","libxml","libxml::conversions","libxml::conversions","activesupport\/lib\/active_support\/core_ext\/logger.rb","logger","logger","actionpack\/lib\/action_controller\/mime_type.rb","mime","activesupport\/lib\/active_support\/deprecation.rb","activesupport\/lib\/active_support\/core_ext\/duplicable.rb","activerecord\/lib\/active_record\/connection_adapters\/postgresql_adapter.rb","railties\/lib\/commands\/plugin.rb","activesupport\/lib\/active_support\/core_ext\/process\/daemon.rb","activesupport\/lib\/active_support\/core_ext\/rexml.rb","rexml","rexml","actionpack\/lib\/action_controller\/rack_lint_patch.rb","racklintpatch","railties\/lib\/rails_generator\/lookup.rb","rails","rails","rails","rails","rails","rails","rails::generator","rails::generator","rails::generator","rails::generator::commands","rails::generator::commands","rails::generator::commands","rails::generator::commands","rails::generator::commands","rails::generator::commands","rails::generator","rails::generator","rails::generator","rails::generator","rails::generator","rails::generator::lookup","rails::generator","rails::generator","rails::generator","rails::generator::options","rails::generator","rails::generator","rails::generator::scripts","rails::generator","rails::generator","rails::generator","rails","rails","rails","rails","rails","railties\/lib\/commands\/plugin.rb","railties\/lib\/fcgi_handler.rb","railties\/lib\/commands\/plugin.rb","railties\/lib\/commands\/plugin.rb","railties\/lib\/commands\/plugin.rb","railties\/lib\/source_annotation_extractor.rb","sourceannotationextractor","activesupport\/lib\/active_support\/testing\/deprecation.rb","test","activesupport::duration","activesupport::multibyte::chars","activesupport::safebuffer","activesupport::timewithzone","activesupport::duration","activesupport::timewithzone","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activesupport::safebuffer","activerecord::connectionadapters::sqliteadapter::version","activesupport::multibyte::chars","activesupport::timewithzone","activesupport::timezone","rails::plugin","actioncontroller::middlewarestack::middleware","actionview::template::path","activerecord::base","activerecord::reflection::macroreflection","activeresource::base","activeresource::request","activeresource::response","activesupport::callbacks::callback","activesupport::duration","mime::type","rails::gemdependency","activerecord::base","activesupport::coreextensions::time::calculations::classmethods","activesupport::multibyte::unicodedatabase","mime::type","activesupport::multibyte::chars","activesupport::timezone","mime::type","actioncontroller::request","actioncontroller::request","actioncontroller::http::headers","actioncontroller::session::abstractstore::sessionhash","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actionview::reloadabletemplate::reloadablepath","actionview::template::eagerpath","actionview::template::path","activerecord::base","activerecord::connectionadapters::tabledefinition","activerecord::errors","activeresource::errors","activeresource::formats","activeresource::response","activesupport::multibyte::chars","activesupport::testing::performance::metrics","activesupport::timezone","actioncontroller::session::abstractstore::sessionhash","activerecord::base","activeresource::response","activesupport::multibyte::chars","hashwithindifferentaccess","actioncontroller::dispatcher","rails::plugin","activerecord::base","actioncontroller::request","activerecord::nestedattributes::classmethods","actionview::template","actioncontroller::middlewarestack","actioncontroller::middlewarestack::middleware","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","object","activesupport::coreextensions::date::behavior","activesupport::coreextensions::string::behavior","activesupport::multibyte::chars","activesupport::coreextensions::time::behavior","activesupport::timewithzone","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::postgresqladapter","activerecord::errors","activeresource::errors","activesupport::bufferedlogger","repositories","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::mysqladapter","activesupport::backtracecleaner","rails::gemdependency","rails::initializer","rails::generator::options","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::databasestatements","rails::gemdependency","activerecord::connectionadapters::databasestatements","activerecord::observer","activerecord::errors","activerecord::errors","rails::generator::options","activerecord::connectionadapters::schemastatements","rails::initializer","activesupport::backtracecleaner","rails::vendorgemsourceindex","rails::initializer","activerecord::connectionadapters::schemastatements","activerecord::errors","activeresource::errors","activesupport::coreextensions::date::calculations","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::time::calculations","activesupport::timewithzone","activerecord::callbacks","activerecord::callbacks","actioncontroller::filters::classmethods","rails::generator::base","rails::configuration","rails::initializer","rails::configuration","activerecord::callbacks","activerecord::callbacks","activerecord::callbacks","activerecord::callbacks","activerecord::callbacks","activerecord::base","activesupport::coreextensions::date::calculations","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::numeric::time","activesupport::coreextensions::time::calculations","activesupport::duration","activesupport::timewithzone","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activesupport::coreextensions::module","activerecord::dirty::classmethods","activesupport::coreextensions::module","activerecord::base","activesupport::timezone","repositories","activerecord::base","activerecord::base","activerecord::migration","activerecord::namedscope::scope","object","actioncontroller::filters::classmethods","actioncontroller::filters::classmethods","actioncontroller::filters::classmethods","activesupport::coreextensions::string::iterators","activesupport::coreextensions::string::startsendswith","rails::generator::lookup::classmethods","actioncontroller::base","actioncontroller::base","actioncontroller::routing::optimisation::optimiser","actioncontroller::routing::optimisation::positionalargumentswithadditionalparams","actioncontroller::filters::classmethods","actionview::helpers::javascripthelper","activeresource::base","activesupport::timewithzone","datetime","object","module","activesupport::testing::assertions","activesupport::testing::assertions","actioncontroller::assertions::domassertions","actioncontroller::assertions::domassertions","actioncontroller::assertions::routingassertions","activesupport::testing::assertions","actioncontroller::assertions::tagassertions","activesupport::testing::assertions","actioncontroller::assertions::routingassertions","actioncontroller::assertions::responseassertions","actioncontroller::assertions::responseassertions","actioncontroller::assertions::routingassertions","actioncontroller::assertions::selectorassertions","actioncontroller::assertions::selectorassertions","actioncontroller::assertions::selectorassertions","actioncontroller::assertions::selectorassertions","actioncontroller::assertions::tagassertions","actioncontroller::assertions::responseassertions","actioncontroller::assertions::modelassertions","activesupport::coreextensions::hash::keys","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actioncontroller::response","actioncontroller::testprocess","activerecord::connectionadapters::schemastatements","activesupport::timezone","activesupport::coreextensions::date::calculations","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::time::calculations","actionview::helpers::atomfeedhelper","activesupport::coreextensions::file::atomic","activerecord::base","module","module","module","module","module","activerecord::base","activerecord::base","activerecord::base","activerecord::attributemethods::classmethods","activerecord::base","activerecord::base","activerecord::base","rails::generator::namedbase","activerecord::base","activerecord::base","actioncontroller::httpauthentication::basic","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication::basic::controllermethods","actioncontroller::httpauthentication::digest::controllermethods","actioncontroller::httpauthentication::basic::controllermethods","actioncontroller::httpauthentication::digest::controllermethods","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication::basic","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication::basic","actioncontroller::httpauthentication::digest","actionview::helpers::assettaghelper","activesupport::bufferedlogger","activesupport::bufferedlogger","actionview::helpers::texthelper","activerecord::calculations::classmethods","activesupport::json","activesupport::json","activesupport::xmlmini","rails","activerecord::dynamicfindermatch","rails::generator::base","rails::generator::namedbase","rails::generator::options","rails::generator::scripts::base","activesupport::securerandom","activerecord::base","activerecord::base","activerecord::callbacks","activerecord::callbacks","actioncontroller::filters::classmethods","activerecord::callbacks","activerecord::callbacks","activerecord::callbacks","activerecord::callbacks","activerecord::callbacks","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","activesupport::coreextensions::date::calculations","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activerecord::associations::classmethods","activerecord::connectionadapters::table","activerecord::connectionadapters::tabledefinition","activerecord::reflection::macroreflection","actioncontroller::benchmarking::classmethods","actionview::helpers::benchmarkhelper","activerecord::base","activesupport::testing::performance::metrics::base","railsenvironment","activesupport::timewithzone","activerecord::connectionadapters::column","object","actioncontroller::request","kernel","rails::configuration","rails::configuration","mime::type","activesupport::bufferedlogger","actioncontroller::middlewarestack","actioncontroller::middlewarestack::middleware","activesupport::callbacks::callbackchain","rails::gemdependency","actionview::helpers::prototypehelper","activesupport::cache::memcachestore","actionview::helpers::prototypehelper","actioncontroller::testprocess","rails::gemdependency","rails::configuration","actionview::helpers::urlhelper","actionview::helpers::javascripthelper","actionview::helpers::prototypehelper","activesupport::coreextensions::numeric::bytes","activesupport::coreextensions::numeric::bytes","actioncontroller::caching","actionview::helpers::cachehelper","activerecord::connectionadapters::querycache","activerecord::querycache::classmethods","rails","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","activerecord::attributemethods::classmethods","activerecord::attributemethods::classmethods","actioncontroller::caching","fixtures","fixtures","actioncontroller::request","activerecord::base","actioncontroller::caching::pages","actioncontroller::caching::pages::classmethods","actioncontroller::caching","actionview::base","activerecord::attributemethods::classmethods","fixtures","actioncontroller::caching::actions::classmethods","actioncontroller::caching::pages::classmethods","activerecord::calculations::classmethods","actioncontroller::base","actioncontroller::dispatcher","actioncontroller::failsafe","actioncontroller::paramsparser","actioncontroller::session::abstractstore","actioncontroller::session::cookiestore","actioncontroller::stringcoercion","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actionview::templatehandler","actionview::templatehandlers::compilable::classmethods","activerecord::connectionadapters::connectionmanagement","activerecord::querycache","activesupport::callbacks::callback","logger::formatter","logger::simpleformatter","activesupport::coreextensions::string::inflections","activesupport::coreextensions::string::inflections","activesupport::inflector","activesupport::multibyte::chars","actionview::helpers::capturehelper","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::sqliteadapter","activesupport::xmlmini_nokogirisax::hashbuilder","actionview::helpers::taghelper","activesupport::multibyte::chars","activerecord::connectionadapters::table","activesupport::coreextensions::date::calculations","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::time::calculations","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::table","activerecord::connectionadapters::schemastatements","activerecord::dirty","activerecord::dirty","activerecord::autosaveassociation","activerecord::dirty","activesupport::xmlmini_nokogirisax::hashbuilder","activesupport::coreextensions::string::multibyte","actioncontroller::response","activerecord::connectionadapters::mysqladapter","actioncontroller::response","actionview::helpers::formhelper","actionview::helpers::formtaghelper","rails::initializer","rails::initializer","rails::initializer","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::connectionpool","rails::generator::commands::base","rails::generator::commands::create","rails::generator::commands::list","object","rails::generator::spec","activerecord::reflection::macroreflection","rails::generator::spec","activerecord::base","activesupport::coreextensions::string::inflections","activesupport::inflector","activesupport::backtracecleaner","actioncontroller::testcase::assertions","activesupport::coreextensions::pathname::cleanwithin","actioncontroller::dispatcher","activerecord::errors","activeresource::errors","activesupport::cache::memcachestore","activesupport::cache::memorystore","activesupport::cache::strategy::localcache","activesupport::cache::synchronizedmemorystore","activesupport::inflector::inflections","activerecord::connectionadapters::connectionhandler","activerecord::connectionadapters::connectionhandler","activesupport::bufferedlogger","activerecord::connectionadapters::querycache","activerecord::connectionadapters::connectionhandler","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::base","activeresource::base","actioncontroller::reloader::bodywrapper","activesupport::bufferedlogger","activesupport::gzip::stream","railsfcgihandler","activerecord::connectionadapters::mysqladapter","activeresource::base","activeresource::base","actionview::helpers::formoptionshelper","activerecord::base","activerecord::connectionadapters::table","activerecord::connectionadapters::tabledefinition","activerecord::base","activerecord::connectionadapters::databaselimits","activerecord::base","activerecord::base","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::schemastatements","activerecord::base","activerecord::connectionadapters::databaselimits","activerecord::connectionadapters::databaselimits","activerecord::connectionadapters::querycache","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","activesupport::timewithzone","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::time::calculations","actionview::templatehandlers::builder","actionview::templatehandlers::compilable","actionview::templatehandlers::erb","actionview::templatehandlers::rjs","rails::generator::commands::create","rails::generator::commands::destroy","rails::generator::commands::list","rails::generator::commands::update","activesupport::multibyte::chars","activesupport::multibyte::chars","activerecord::aggregations::classmethods","activesupport::gzip","activerecord::base","actionview::helpers::texthelper","activesupport::safebuffer","rails","rails","activerecord::base","actioncontroller::routing::routeset::mapper","activerecord::base","activerecord::connectionadapters::connectionhandler","activerecord::connectionadapters::connectionpool","activerecord::base","activerecord::base","activerecord::connectionadapters::connectionpool","activerecord::migration","activerecord::sessionstore::sqlbypass","activerecord::sessionstore::sqlbypass","activeresource::base","activeresource::base","activerecord::base","activerecord::base","activerecord::connectionadapters::connectionhandler","activesupport::coreextensions::string::inflections","activesupport::inflector","activerecord::calculations::classmethods","activesupport::multibyte::chars","activerecord::base","actionview::helpers::capturehelper","actioncontroller::request","actionview::helpers::taghelper","actionview::helpers::recordtaghelper","actioncontroller::request","actioncontroller::response","actionview::template","actioncontroller::response","actioncontroller::testcase","actioncontroller::testcase","actioncontroller::base","actioncontroller::base","actioncontroller::base","actioncontroller::base","actionmailer::base","actioncontroller::base","actioncontroller::base","actionmailer::base","actionview::testcase::testcontroller","rails::plugin","actioncontroller::routing","hashwithindifferentaccess","hashwithindifferentaccess","actioncontroller::cookies","actioncontroller::testprocess","activerecord::calculations::classmethods","activerecord::errors","activeresource::errors","activerecord::base","activerecord::base","activeresource::base","activeresource::base","activesupport::timezone","activerecord::validations::classmethods","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","fixtures","object","activerecord::reflection::classmethods","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::schemastatements","activerecord::sessionstore::session","activerecord::sessionstore::sqlbypass","actioncontroller::assertions::selectorassertions","activesupport::coreextensions::date::calculations::classmethods","activesupport::coreextensions::datetime::calculations::classmethods","activesupport::coreextensions::time::zones::classmethods","actionview::helpers::texthelper","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_nokogirisax::hashbuilder","rails::generator::commands::base","actionview::helpers::urlhelper","activerecord::connectionadapters::abstractadapter","activeresource::custommethods::classmethods","actionview::helpers::texthelper","process","kernel","activesupport::coreextensions::string::inflections","activesupport::inflector","actioncontroller::session::abstractstore::sessionhash","activerecord::sessionstore::session","activerecord::sessionstore::sqlbypass","activerecord::sessionstore::sqlbypass","activerecord::sessionstore::session","activerecord::sessionstore::session","rails::configuration","actionview::helpers::datehelper","logger","logger","actionview::helpers::datehelper","activesupport::coreextensions::numeric::time","activesupport::coreextensions::numeric::time","activesupport::coreextensions::time::calculations::classmethods","actionview::helpers::debughelper","actionview::base","kernel","activeresource::formats::jsonformat","activeresource::formats::xmlformat","activesupport::json::backends::jsongem","activesupport::json::backends::yajl","activesupport::json::backends::yaml","activesupport::base64","actioncontroller::httpauthentication::basic","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication::digest","activesupport::multibyte::chars","activesupport::multibyte::chars","activesupport::gzip","activerecord::base","activesupport::cache::store","activesupport::cache::strategy::localcache","activesupport::cache::synchronizedmemorystore","activerecord::base","activerecord::base","activerecord::connectionadapters::abstractadapter","activesupport::messageencryptor","activesupport::messageencryptor","activesupport::coreextensions::hash::deepmerge","activesupport::coreextensions::hash::deepmerge","hashwithindifferentaccess","rails::generator::generatedattribute","railsenvironment","railsenvironment","activerecord::errors","activerecord::error","rails::generator::options","rails::generator::options::classmethods","activerecord::connectionadapters::sqliteadapter","activerecord::base","activerecord::connectionadapters::databasestatements","activerecord::base","actioncontroller::base","repositories","activerecord::schema","logger","activerecord::attributemethods::classmethods","activesupport::callbacks::classmethods","actioncontroller::dispatcher","activerecord::attributemethods::classmethods","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","module","actioncontroller::integration::session","actioncontroller::testprocess","activerecord::base","activerecord::base","activerecord::connectionadapters::databasestatements","activeresource::base","activeresource::connection","activeresource::custommethods","activeresource::custommethods::instancemethods","activesupport::cache::filestore","activesupport::cache::memorystore","activesupport::cache::store","activesupport::cache::strategy::localcache","activesupport::cache::synchronizedmemorystore","activesupport::callbacks::callbackchain","hashwithindifferentaccess","actioncontroller::request","activerecord::base","fixtures","activesupport::cache::filestore","activesupport::cache::memorystore","activesupport::cache::store","activesupport::cache::synchronizedmemorystore","activerecord::connectionadapters::databasestatements","actioncontroller::integration::session","actionmailer::base","actionmailer::base","activesupport::coreextensions::string::inflections","activesupport::inflector","rails::gemdependency","rails::generator::commands::base","rails::generator::commands::list","activerecord::base","rails::generator::base","activerecord::base","activerecord::base","activerecord::sessionstore::sqlbypass","activeresource::base","activerecord::base","activerecord::base","actioncontroller::testcase","actionview::testcase","commands::install","activesupport::coreextensions::hash::diff","rails::generator::commands::create","rails::generator::commands::destroy","rails::generator::commands::list","rails::generator::commands::update","activesupport::multibyte::unicodedatabase","activerecord::connectionadapters::querycache","rails::initializer","activerecord::connectionadapters::abstractadapter","actioncontroller::flash::flashhash","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","actioncontroller::dispatcher","actioncontroller::dispatcher","dispatchservlet","actioncontroller::cgihandler","actioncontroller::dispatcher","railsfcgihandler","railsfcgihandler","sourceannotationextractor","actionview::helpers::datehelper","actionview::helpers::datehelper","activerecord::connectionadapters::schemastatements","actionview::helpers::recordtaghelper","actioncontroller::recordidentifier","actionview::helpers::recordidentificationhelper","actioncontroller::recordidentifier","actionview::helpers::recordidentificationhelper","actioncontroller::request","activesupport::multibyte::chars","recursivehttpfetcher","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actionview::helpers::scriptaculoushelper","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actionview::helpers::scriptaculoushelper","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::schemastatements","activerecord::sessionstore::session","activerecord::sessionstore::sqlbypass","activesupport::timewithzone","activeresource::base","activesupport::callbacks::callback","hashwithindifferentaccess","object","actioncontroller::cgihandler::properstream","actioncontroller::response","actioncontroller::stringcoercion::uglybody","activerecord::errors","activeresource::errors","rails::generator::gemgeneratorsource","rails::generator::gempathsource","rails::generator::pathsource","rails::generator::source","rails::vendorgemsourceindex","repositories","repositories","repository","activesupport::coreextensions::string::iterators","activerecord::errors","activerecord::errors","activeresource::errors","racklintpatch::allowstringsubclass","enumerable","activeresource::base","activeresource::base","activerecord::errors","activerecord::namedscope::scope","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::mysqladapter","kernel","activeresource::base","activeresource::formats::jsonformat","activeresource::formats::xmlformat","activesupport::base64","activesupport::coreextensions::base64::encoding","actioncontroller::httpauthentication::basic","actioncontroller::httpauthentication::digest","activerecord::connectionadapters::postgresqladapter","activesupport::messageencryptor","activesupport::messageencryptor","activesupport::xmlmini_nokogirisax::hashbuilder","activesupport::xmlmini_nokogirisax::hashbuilder","activesupport::coreextensions::date::calculations","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::string::startsendswith","rails::plugin","rexml::document","actionview::helpers::atomfeedhelper::atomfeedbuilder","sourceannotationextractor","rails","activesupport::testing::performance::benchmarker","rails::configuration","commands::plugin","rails::configuration","actionview::template::path","activerecord::base","activeresource::base","activesupport::callbacks::callback","activesupport::timewithzone","rails::generator::manifest","actionview::templatehandlers::erb","activesupport::xmlmini_nokogirisax::hashbuilder","actionview::helpers::activerecordhelper","actionview::helpers::activerecordhelper","activerecord::validations","activeresource::validations","activerecord::connectionadapters::postgresqladapter","actionview::helpers::javascripthelper","actionview::helpers::taghelper","activerecord::base","activerecord::connectionadapters::connectionhandler","actioncontroller::response","actioncontroller::response","actioncontroller::response","actioncontroller::request","actionview::helpers::prototypehelper","activesupport::coreextensions::integer::evenodd","activesupport::coreextensions::numeric::bytes","activesupport::coreextensions::numeric::bytes","activesupport::coreextensions::hash::except","activesupport::coreextensions::hash::except","actionview::helpers::texthelper","enumerable","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","actionview::template","actionview::template","activesupport::cache::strategy::localcache","activesupport::cache::filestore","activesupport::cache::memorystore","activesupport::cache::store","activesupport::cache::synchronizedmemorystore","repositories","rails::generator::commands::base","activerecord::base","activeresource::base","activeresource::base","railsfcgihandler","railsfcgihandler","activesupport::cache","activerecord::base","actioncontroller::httpauthentication::digest","actioncontroller::caching::actions","actioncontroller::caching::fragments","actioncontroller::caching::pages","actioncontroller::caching::pages::classmethods","actioncontroller::base","actioncontroller::base","actioncontroller::uploadedfile","activerecord::dirty::classmethods","activerecord::locking::optimistic::classmethods","activeresource::formats::jsonformat","activeresource::formats::xmlformat","railsenvironment","railsenvironment","sourceannotationextractor","activerecord::connectionadapters::column","activesupport::coreextensions::array::extractoptions","commands::discover","actioncontroller::routing::optionalformatsegment","activerecord::connectionadapters::column","activerecord::connectionadapters::column","activerecord::connectionadapters::column","activerecord::connectionadapters::column","activesupport::cache::store","activesupport::cache::synchronizedmemorystore","hashwithindifferentaccess","recursivehttpfetcher","recursivehttpfetcher","actionview::helpers::formtaghelper","rails::generator::generatedattribute","actionview::helpers::formhelper","activesupport::coreextensions::array::access","rails::generator::commands::create","rails::generator::commands::destroy","rails::generator::commands::list","rails::generator::commands::update","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actionview::template","activesupport::multibyte::unicodedatabase","actioncontroller::filters::classmethods","actioncontroller::base","activerecord::base","activeresource::base","activesupport::callbacks::callbackchain","plugin","railsenvironment","sourceannotationextractor","actioncontroller::testprocess","activerecord::sessionstore::session","activerecord::sessionstore::sqlbypass","activerecord::base","object","activerecord::batches::classmethods","repositories","sourceannotationextractor","activerecord::batches::classmethods","rails::vendorgemsourceindex","repositories","actioncontroller::testprocess","activesupport::timezone","activerecord::dynamicfindermatch","activerecord::base","activerecord::namedscope::scope","actioncontroller::testprocess","fixtures","activerecord::testfixtures::classmethods","actioncontroller::testprocess","activesupport::bufferedlogger","activesupport::memoizable::instancemethods","actioncontroller::dispatcher","actioncontroller::integration::session","activesupport::coreextensions::string::inflections","activesupport::inflector","actionview::helpers::activerecordhelper","actioncontroller::requestforgeryprotection","actioncontroller::requestforgeryprotection","actioncontroller::request","actionview::helpers::formhelper","actionview::helpers::prototypehelper","actionview::helpers::prototypehelper","actionview::helpers::formtaghelper","actioncontroller::request","activeresource::base","activesupport::testing::performance::metrics::gcruns","activesupport::testing::performance::metrics::gctime","activesupport::testing::performance::metrics::memory","activesupport::testing::performance::metrics::objects","activesupport::testing::performance::metrics::time","actioncontroller::request","activeresource::base","actionview::template","activerecord::connectionadapters::abstractadapter","activesupport::coreextensions::datetime::conversions","activesupport::coreextensions::time::conversions","activesupport::timewithzone","activesupport::timezone","actioncontroller::polymorphicroutes","actioncontroller::polymorphicroutes","logger","activesupport::coreextensions::numeric::time","activesupport::coreextensions::numeric::time","activesupport::coreextensions::array::access","activesupport::coreextensions::array::access","actioncontroller::caching::fragments","actioncontroller::caching::fragments","rails::gemdependency","rails::configuration","actionview::reloadabletemplate::unfreezable","activerecord::base","activesupport::timewithzone","activesupport::memoizable::instancemethods","actioncontroller::request","actioncontroller::base","activesupport::coreextensions::array::access","activeresource::errors","rails::gemdependency","activerecord::serialization","activeresource::errors","activesupport::coreextensions::numeric::time","activesupport::duration","activerecord::serialization","activeresource::errors","activesupport::coreextensions::hash::classmethods","activerecord::base","rails::gemdependency","activerecord::error","activerecord::errors","activeresource::errors","rails::generator::options","rails::generator::options::classmethods","activesupport::testing::performance","activesupport::coreextensions::date::calculations","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::time::calculations","activesupport::timewithzone","activesupport::multibyte::chars","activesupport::multibyte::chars","activesupport::multibyte::chars","railsfcgihandler","rails::configuration","activesupport::messageverifier","activerecord::error","activerecord::error","activerecord::errors","actioncontroller::routing::optimisation","rails::secretkeygenerator","activerecord::attributemethods::classmethods","actioncontroller::routing::optimisation::optimiser","actioncontroller::routing::optimisation::positionalarguments","actioncontroller::routing::optimisation::positionalargumentswithadditionalparams","actioncontroller::integration::session","actioncontroller::testprocess","activeresource::connection","activeresource::custommethods","activeresource::custommethods::instancemethods","actioncontroller::request","actioncontroller::integration::session","activesupport::timewithzone","activesupport::timewithzone","activesupport::coreextensions::datetime::calculations","activesupport::timewithzone","activesupport::coreextensions::numeric::bytes","activesupport::coreextensions::numeric::bytes","plugin","activesupport::timewithzone","activesupport::timewithzone","activesupport::timewithzone","activesupport::timewithzone","enumerable","actionview::helpers::formoptionshelper","actionview::helpers::formoptionshelper","rails::generator::commands::base","actioncontroller::routing::optimisation::optimiser","actioncontroller::routing::optimisation::positionalarguments","actioncontroller::routing::optimisation::positionalargumentswithadditionalparams","erb::util","actioncontroller::httpauthentication::digest","activesupport::rescuable","activerecord::associations::classmethods","activerecord::base","activerecord::connectionadapters::column","activerecord::associations::classmethods","activerecord::associations::classmethods","activerecord::base","activeresource::base","activesupport::callbacks::callback","activesupport::timewithzone","actioncontroller::base","actioncontroller::integration::session","actioncontroller::testprocess","activeresource::connection","actioncontroller::request","actioncontroller::request","activeresource::base","actioncontroller::helpers::classmethods","object","actioncontroller::helpers::classmethods","actionview::testcase","actioncontroller::helpers::classmethods","actionview::testcase","actioncontroller::helpers::classmethods","activesupport::securerandom","actioncontroller::base","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actioncontroller::base","actionview::helpers::texthelper","actioncontroller::request","actioncontroller::integration::session","actioncontroller::request","activesupport::coreextensions::numeric::time","activesupport::coreextensions::numeric::time","mime::type","actioncontroller::testprocess","erb::util","activesupport::safebuffer","activesupport::safebuffer","fixnum","object","cgi::cookie","activesupport::timewithzone","actioncontroller::integration::session","actioncontroller::integration::session","activesupport::inflector::inflections","activerecord::base","activerecord::base","activerecord::connectionadapters::column","activesupport::coreextensions::string::inflections","activesupport::inflector","activerecord::base","activeresource::base","activerecord::base","activeresource::base","activeresource::base","rails::generator::commands::create","fixtures","actioncontroller::request","actioncontroller::request","actionview::helpers::assettaghelper","actionview::helpers::formtaghelper","actionview::helpers::assettaghelper","activesupport::coreextensions::date::calculations","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::time::calculations","activesupport::multibyte::chars","activerecord::connectionadapters::databaselimits","activesupport::coreextensions::array::grouping","activesupport::coreextensions::array::grouping","activesupport::coreextensions::time::zones","activesupport::timewithzone","actionview::base::proxymodule","activesupport::multibyte::chars","activesupport::coreextensions::range::includerange","actioncontroller::cgiext::stdinput","actioncontroller::cookies","actioncontroller::flash","actioncontroller::requestforgeryprotection","actioncontroller::testcase::raiseactionexceptions","actioncontroller::testprocess","actioncontroller::uploadedfile","actionview::templatehandlers::compilable","activerecord::autosaveassociation","activerecord::connectionadapters::querycache","activerecord::dirty","activerecord::namedscope","activerecord::serialization","activerecord::testfixtures","activerecord::transactions","activeresource::custommethods","activesupport::callbacks","activesupport::memoizable::instancemethods","activesupport::testing::performance","activesupport::testing::setupandteardown","racklintpatch::allowstringsubclass","rails::generator::commands","rails::generator::lookup","rails::generator::options","module","activerecord::base","activesupport::cache::store","activesupport::cache::strategy::localcache","activesupport::cache::synchronizedmemorystore","activerecord::base","activerecord::base","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::table","activesupport::multibyte::chars","enumerable","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::databaselimits","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::databaselimits","activesupport::inflector","actioncontroller::routing","plugin","activerecord::base","activerecord::observing::classmethods","rails::generator::options::classmethods","rails::gemplugin","rails::initializer","rails::initializer","rails::initializer","rails::initializer","rails::initializer","rails::initializer","rails::initializer","rails::initializer","rails::initializer","rails::initializer","rails::initializer","rails::initializer","cgi::queryextension","rails::initializer","activerecord::connectionadapters::schemastatements","rails::initializer","rails::initializer","actioncontroller::cgiext::stdinput","actionview::base","rails","rails","actionview::helpers::activerecordhelper","actioncontroller::middlewarestack","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","activesupport::multibyte::chars","actioncontroller::middlewarestack","actioncontroller::middlewarestack","activerecord::connectionadapters::databasestatements","fixtures","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activerecord::connectionadapters::databasestatements","actioncontroller::middlewarestack::middleware","actioncontroller::session::abstractstore::sessionhash","activerecord::base","activerecord::base","activesupport::timewithzone","plugin","rails::gemdependency","railsenvironment","rails::initializer","railsfcgihandler","railsfcgihandler","plugin","rails::gemdependency","rails::generator::commands","rails::generator::lookup","rails::generator::lookup::classmethods","repositories","object","activerecord::attributemethods::classmethods","object","object","fixtures","fixtures","activerecord::observing::classmethods","activerecord::dynamicfindermatch","actioncontroller::routing::optionalformatsegment","activerecord::errors","activerecord::validations","activeresource::errors","rails::generator::commands::base","rails::generator::commands::rewindbase","activesupport::inflector::inflections","activesupport::timewithzone","activesupport::coreextensions::string::multibyte","activesupport::coreextensions::string::multibyte","activesupport::timewithzone","activesupport::timewithzone","erb::util","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::helpers::javascripthelper","activerecord::connectionadapters::databaselimits","erb::util","actioncontroller::flash::flashhash","actioncontroller::request","hashwithindifferentaccess","activesupport::coreextensions::numeric::bytes","activesupport::coreextensions::numeric::bytes","activesupport::timewithzone","actioncontroller::middlewarestack::middleware","activerecord::connectionadapters::column","activerecord::reflection::macroreflection","rails::generator::spec","actioncontroller::translation","actionview::helpers::translationhelper","actionview::helpers::formhelper","actionview::helpers::formtaghelper","activerecord::base","activerecord::namedscope::scope","actioncontroller::response","actioncontroller::response","actioncontroller::response","actioncontroller::layout::classmethods","activerecord::errors","activeresource::errors","activesupport::multibyte::chars","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::mysqladapter","actionview::helpers::urlhelper","actionview::helpers::javascripthelper","actionview::helpers::urlhelper","actionview::helpers::prototypehelper","actionview::helpers::urlhelper","actionview::helpers::urlhelper","recursivehttpfetcher","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activesupport::multibyte::chars","activeresource::base","activesupport::multibyte::unicodedatabase","rails::gemdependency","rails::plugin","actionview::reloadabletemplate::reloadablepath","actionview::template","actionview::template::eagerpath","actionview::template::path","repositories","rails::initializer","rails::initializer","activeresource::base","rails::initializer","rails::initializer","rails::initializer","rails::plugin","rails::gemdependency","rails::initializer","rails::vendorgemsourceindex","rails::initializer","activerecord::sessionstore::session","activerecord::sessionstore::sqlbypass","rails::gemdependency","rails::plugin","activesupport::timezone","activesupport::coreextensions::module","activesupport::coreextensions::module","activesupport::coreextensions::datetime::calculations::classmethods","actioncontroller::rescue","activesupport::coreextensions::time::calculations::classmethods","activesupport::timezone","rails::plugin","rails::plugin","actioncontroller::translation","actionview::helpers::translationhelper","rails::plugin","activesupport::timewithzone","actioncontroller::response","actioncontroller::response","activerecord::locking::pessimistic","activerecord::locking::optimistic::classmethods","activerecord::locking::optimistic::classmethods","activerecord::connectionadapters::abstractadapter","actioncontroller::rescue","activerecord::connectionadapters::abstractadapter","activeresource::base","rails","railsfcgihandler","mime::type","rails::generator::lookup::classmethods","mime::type","object","activesupport::cache","recursivehttpfetcher","activesupport::multibyte::chars","activerecord::reflection::macroreflection","actionview::helpers::urlhelper","actionmailer::base","actionmailer::base","actionmailer::base","rails::generator::options","rails::generator::options::classmethods","rails::generator::base","enumerable","railsfcgihandler","activerecord::autosaveassociation","actionview::helpers::texthelper","activerecord::autosaveassociation","activerecord::sessionstore::session","activerecord::sessionstore::sqlbypass","activesupport::timewithzone","activesupport::timewithzone","activerecord::dynamicfindermatch","activerecord::dynamicscopematch","activerecord::attributemethods::classmethods","actioncontroller::routing::optionalformatsegment","module","module","module","activerecord::calculations::classmethods","activesupport::coreextensions::string::multibyte","activesupport::coreextensions::string::multibyte","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::cputime","activesupport::testing::performance::metrics::gcruns","activesupport::testing::performance::metrics::gcruns","activesupport::testing::performance::metrics::gcruns","activesupport::testing::performance::metrics::gctime","activesupport::testing::performance::metrics::gctime","activesupport::testing::performance::metrics::memory","activesupport::testing::performance::metrics::memory","activesupport::testing::performance::metrics::memory","activesupport::testing::performance::metrics::memory","activesupport::testing::performance::metrics::memory","activesupport::testing::performance::metrics::memory","activesupport::testing::performance::metrics::objects","activesupport::testing::performance::metrics::objects","activesupport::testing::performance::metrics::objects","activesupport::testing::performance::metrics::processtime","activesupport::testing::performance::metrics::time","activesupport::testing::performance::metrics::walltime","activesupport::testing::performance::metrics::base","actioncontroller::request","activesupport::coreextensions::numeric::bytes","activesupport::coreextensions::numeric::bytes","activesupport::memoizable","activesupport::memoizable::instancemethods","activesupport::memoizable","hashwithindifferentaccess","activerecord::base","activerecord::error","object","rails::plugin","actioncontroller::request","actioncontroller::integration::runner","actioncontroller::reloader::bodywrapper","actioncontroller::testprocess","activerecord::connectionadapters::tabledefinition","activerecord::migration","activesupport::multibyte::chars","activesupport::stringinquirer","activesupport::timewithzone","rails::generator::manifest","actionview::helpers::prototypehelper","actionview::template","activerecord::connectionadapters::column","activesupport::cache::strategy::localcache","rails::configuration","activesupport::coreextensions::date::calculations","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::time::calculations","activerecord::migration","rails::generator::commands::base","rails::generator::commands::base","rails::generator::commands::create","rails::generator::commands::destroy","rails::generator::commands::list","activerecord::schema","actionview::template","activeresource::formats::jsonformat","activeresource::formats::xmlformat","activerecord::calculations::classmethods","activesupport::coreextensions::time::calculations","activesupport::coreextensions::numeric::time","activesupport::coreextensions::numeric::time","activesupport::coreextensions::module","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::float::time","activesupport::coreextensions::integer::time","activesupport::coreextensions::float::time","activesupport::coreextensions::integer::time","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::float::time","actionview::reloadabletemplate","actionview::template","activesupport::coreextensions::integer::evenodd","activesupport::cache::store","activerecord::reflection::macroreflection","activesupport::testing::performance::metrics::base","activerecord::namedscope::classmethods","rails::generator::source","actioncontroller::routing::routeset::mapper","activerecord::connectionadapters::schemastatements","actioncontroller::assertions::selectorassertions","actioncontroller::caching::actions::actioncachepath","actioncontroller::dispatcher","actioncontroller::failsafe","actioncontroller::http::headers","actioncontroller::integration::runner","actioncontroller::integration::session","actioncontroller::middlewarestack","actioncontroller::middlewarestack::middleware","actioncontroller::middlewarestack::middleware","actioncontroller::paramsparser","actioncontroller::reloader::bodywrapper","actioncontroller::response","actioncontroller::routing::optimisation::optimiser","actioncontroller::routing::optionalformatsegment","actioncontroller::session::abstractstore","actioncontroller::session::abstractstore::sessionhash","actioncontroller::session::cookiestore","actioncontroller::session::memcachestore","actioncontroller::stringcoercion","actioncontroller::stringcoercion::uglybody","actioncontroller::testcase","actioncontroller::testuploadedfile","actionview::base","actionview::base::proxymodule","actionview::helpers::atomfeedhelper::atombuilder","actionview::helpers::atomfeedhelper::atomfeedbuilder","actionview::reloadabletemplate","actionview::reloadabletemplate::reloadablepath","actionview::template","actionview::template::eagerpath","actionview::template::path","actionview::templatehandler","actionview::testcase::testcontroller","activerecord::attributeassignmenterror","activerecord::base","activerecord::connectionadapters::column","activerecord::connectionadapters::connectionhandler","activerecord::connectionadapters::connectionmanagement","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::sqliteadapter::version","activerecord::connectionadapters::table","activerecord::connectionadapters::tabledefinition","activerecord::dynamicfindermatch","activerecord::dynamicscopematch","activerecord::error","activerecord::multiparameterassignmenterrors","activerecord::namedscope::scope","activerecord::observer","activerecord::querycache","activerecord::recordinvalid","activerecord::reflection::macroreflection","activerecord::sessionstore::sqlbypass","activeresource::base","activeresource::connection","activeresource::request","activeresource::response","activeresource::sslerror","activeresource::sslerror","activeresource::timeouterror","activeresource::timeouterror","activesupport::backtracecleaner","activesupport::bufferedlogger","activesupport::cache::filestore","activesupport::cache::memcachestore","activesupport::cache::memorystore","activesupport::cache::synchronizedmemorystore","activesupport::callbacks::callback","activesupport::deprecation::deprecatedobjectproxy","activesupport::inflector::inflections","activesupport::messageencryptor","activesupport::messageverifier","activesupport::modelname","activesupport::multibyte::chars","activesupport::multibyte::unicodedatabase","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::cputime","activesupport::testing::performance::performer","activesupport::testing::performance::profiler","activesupport::timewithzone","activesupport::timezone","activesupport::timezone","cgi::cookie","commands::discover","commands::info","commands::install","commands::list","commands::plugin","commands::remove","commands::source","commands::sources","commands::unsource","commands::update","fixtures","hashwithindifferentaccess","logger::formatter","mime::type","plugin","rails::backtracecleaner","rails::configuration","rails::gembuilder","rails::gemdependency","rails::gemplugin","rails::generator::abstractgemsource","rails::generator::base","rails::generator::generatedattribute","rails::generator::manifest","rails::generator::namedbase","rails::generator::pathsource","rails::generator::source","rails::generator::spec","rails::initializer","rails::plugin","rails::secretkeygenerator","rails::vendorgemsourceindex","railsenvironment","railsfcgihandler","recursivehttpfetcher","repositories","repository","sourceannotationextractor","activeresource::base","actionview::template::path","activerecord::connectionadapters::column","activerecord::base","activerecord::sessionstore::sqlbypass","activeresource::base","actionview::reloadabletemplate::reloadablepath","object","activerecord::connectionadapters::column","rails::generator::commands::base","rails::generator::commands::base","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","actioncontroller::httpauthentication::digest","enumerable","activesupport::multibyte::chars","actioncontroller::routing","i18n","actioncontroller::request","actioncontroller::flash::flashhash","activesupport::timezone","activerecord::connectionadapters::column","actionview::helpers::numberhelper","actionview::helpers::numberhelper","actionview::helpers::numberhelper","actionview::helpers::numberhelper","actionview::helpers::numberhelper","actionview::helpers::numberhelper","activerecord::observer","actionview::helpers::prototypehelper","actionview::helpers::prototypehelper","activerecord::observer","activerecord::observer","activerecord::observer","activerecord::observing::classmethods","activerecord::observing::classmethods","activesupport::coreextensions::integer::evenodd","logger","logger","logger","activerecord::errors","activeresource::errors","activerecord::errors","activeresource::errors","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_libxmlsax::hashbuilder","actioncontroller::httpauthentication::digest","actioncontroller::integration::runner","activerecord::connectionadapters::abstractadapter","actionview::helpers::formoptionshelper","activerecord::reflection::macroreflection","commands::discover","commands::info","commands::install","commands::list","commands::plugin","commands::remove","commands::source","commands::sources","commands::unsource","commands::update","rails::generator::options","actionview::helpers::prototypehelper","actionview::helpers::javascripthelper","actionview::helpers::formoptionshelper","actionview::helpers::formoptionshelper","activerecord::connectionadapters::schemastatements","activesupport::coreextensions::string::conversions","activesupport::multibyte::chars","activesupport::coreextensions::integer::inflections","activesupport::inflector","activeresource::custommethods","actioncontroller::uploadedfile","activesupport::testing::performance::benchmarker","activesupport::testing::performance::performer","activesupport::testing::performance::profiler","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","activesupport::coreextensions::range::overlaps","activesupport::coreextensions::string::inflections","activesupport::inflector","actioncontroller::request","actioncontroller::request","activesupport::coreextensions::module","activesupport::coreextensions::module","activesupport::coreextensions::module","activesupport::timezone","activesupport::xmlmini_libxmlsax","activesupport::xmlmini_nokogirisax","cgi::cookie","mime::type","commands::discover","commands::info","commands::install","commands::list","commands::plugin","commands::plugin","commands::remove","commands::source","commands::sources","commands::unsource","commands::update","rails::generator::options","actioncontroller::recordidentifier","actionview::helpers::recordidentificationhelper","activeresource::base","activeresource::base","activeresource::connection","actionview::helpers::formhelper","actionview::helpers::formtaghelper","activesupport::coreextensions::date::calculations","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::time::calculations","activesupport::timewithzone","actioncontroller::request","actionview::template","actioncontroller::caching::actions::actioncachepath","actioncontroller::request","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::template","actionview::template","activesupport::timewithzone","activesupport::timezone","activesupport::timezone","actionview::helpers::prototypehelper","activesupport::coreextensions::numeric::bytes","activesupport::coreextensions::numeric::bytes","rails::initializer","repository","rails::configuration","activesupport::inflector::inflections","actioncontroller::recordidentifier","actionview::helpers::texthelper","activesupport::coreextensions::string::inflections","activesupport::inflector","activerecord::base","actioncontroller::polymorphicroutes","actioncontroller::polymorphicroutes","recursivehttpfetcher","actioncontroller::request","actioncontroller::request","actioncontroller::routing","actioncontroller::integration::session","actioncontroller::testprocess","activeresource::connection","activeresource::custommethods","activeresource::custommethods::instancemethods","actioncontroller::request","actioncontroller::integration::session","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::abstractadapter","activeresource::base","activeresource::base","activeresource::base","activerecord::associationpreload::classmethods","rails::initializer","actioncontroller::response","actioncontroller::testcase","rails::initializer","actioncontroller::filters::classmethods","actioncontroller::filters::classmethods","actioncontroller::filters::classmethods","rails::generator::lookup::classmethods","actioncontroller::base","actioncontroller::base","object","object","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activerecord::base","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::tabledefinition","activerecord::base","activesupport::memoizable::instancemethods","actioncontroller::testprocess","rails::initializer","railsfcgihandler","railsfcgihandler","railsfcgihandler","railsfcgihandler","actionview::base","activesupport::testing::performance::metrics::base","actioncontroller::requestforgeryprotection","actionview::testcase","actioncontroller::requestforgeryprotection::classmethods","actioncontroller::request","activeresource::base","activeresource::base","activeresource::connection","activerecord::namedscope::scope","rails","rails","recursivehttpfetcher","actioncontroller::integration::session","actioncontroller::testprocess","activeresource::connection","activeresource::custommethods","activeresource::custommethods::instancemethods","actioncontroller::request","actioncontroller::integration::session","actioncontroller::request","actioncontroller::request","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::quoting","activerecord::connectionadapters::quoting","activerecord::connectionadapters::quoting","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::quoting","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::quoting","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::quoting","activerecord::locking::optimistic::classmethods","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::quoting","actionview::helpers::formhelper","actionview::helpers::formtaghelper","activesupport::basicobject","activesupport::securerandom","activesupport::coreextensions::array::randomaccess","activesupport::securerandom","actionview::helpers::rawoutputhelper","activerecord::connectionadapters::abstractadapter","actioncontroller::request","actioncontroller::request","actioncontroller::cgihandler::properstream","activesupport::cache::compressedmemcachestore","activesupport::cache::filestore","activesupport::cache::memorystore","activesupport::cache::store","activesupport::cache::strategy::localcache","activesupport::cache::synchronizedmemorystore","actioncontroller::caching::fragments","activesupport::cache::memcachestore","activesupport::cache::memorystore","activesupport::coreextensions::date::conversions","activesupport::coreextensions::datetime::conversions","rails::generator::commands::base","rails::generator::commands::create","rails::generator::commands::list","activerecord::base","activerecord::base","activerecord::base","actionmailer::base","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activesupport::testing::performance::benchmarker","activesupport::testing::performance::profiler","rails::generator::base","rexml::document","actioncontroller::testresponse","actioncontroller::response","actioncontroller::integration::session","actioncontroller::base","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actioncontroller::base","actioncontroller::testprocess","rails::generator::generatedattribute","activerecord::connectionadapters::table","activerecord::connectionadapters::tabledefinition","activerecord::reflection::classmethods","activerecord::reflection::classmethods","activerecord::reflection::classmethods","activerecord::reflection::classmethods","activerecord::reflection::classmethods","activerecord::reflection::classmethods","rails::gemdependency","rails::vendorgemsourceindex","actioncontroller::routing::optionalformatsegment","mime::type","mime::type","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","hashwithindifferentaccess","actionview::template","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activerecord::base","activerecord::namedscope::scope","activeresource::base","object","railsfcgihandler","actioncontroller::dispatcher","railsfcgihandler","rails::configuration","activerecord::autosaveassociation","actionview::helpers::prototypehelper","actionview::helpers::prototypehelper","actioncontroller::request","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activerecord::connectionadapters::table","repositories","activerecord::connectionadapters::table","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::schemastatements","activerecord::base","activerecord::connectionadapters::connectionhandler","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::table","activerecord::connectionadapters::table","activesupport::backtracecleaner","rails::vendorgemsourceindex","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::table","activerecord::connectionadapters::table","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::schemastatements","actioncontroller::base","actionview::templatehandler","actionview::testcase","actioncontroller::rescue","actionview::template","actioncontroller::base","activesupport::multibyte::chars","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activesupport::callbacks::callbackchain","rails::generator::manifest","activesupport::testing::performance::performer","activesupport::testing::performance::profiler","actioncontroller::httpauthentication::basic::controllermethods","actioncontroller::httpauthentication::digest::controllermethods","actioncontroller::request","actioncontroller::request","actioncontroller::request","actioncontroller::integration::session","activeresource::connection","activeresource::httpmock","activerecord::testfixtures::classmethods","rails::initializer","kernel","rails::gemdependency","rails::gemdependency","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::sqliteadapter","actioncontroller::rescue","actioncontroller::rescue","actioncontroller::testcase","actioncontroller::rescue","actioncontroller::rescue","actioncontroller::testcase::raiseactionexceptions","activesupport::rescuable::classmethods","activesupport::rescuable","actioncontroller::integration::runner","actioncontroller::integration::session","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::mysqladapter","activeresource::httpmock","fixtures","actionview::reloadabletemplate","activerecord::base","activerecord::base","actionview::helpers::texthelper","activerecord::locking::optimistic::classmethods","activerecord::connectionadapters::databasestatements","actioncontroller::base","actioncontroller::request","rails::generator::lookup::classmethods","actioncontroller::resources","actioncontroller::resources","actioncontroller::mimeresponds::instancemethods","activeresource::httpmock","actioncontroller::reloader::bodywrapper","activerecord::base","activerecord::namedscope::scope","activeresource::base","activesupport::multibyte::chars","activesupport::timewithzone","cgi::cookie","activeresource::base","actioncontroller::assertions::selectorassertions","activeresource::httpmock","railsfcgihandler","railsfcgihandler","railsfcgihandler","activerecord::base","activerecord::connectionadapters::connectionhandler","object","activesupport::multibyte::chars","activesupport::coreextensions::hash::reversemerge","hashwithindifferentaccess","activesupport::coreextensions::hash::reversemerge","activesupport::coreextensions::hash::reversemerge","rails::generator::manifest","activesupport::timewithzone","activesupport::timewithzone","activesupport::multibyte::chars","activesupport::multibyte::chars","activerecord::transactions","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","actioncontroller::routing::routeset::mapper","rails","activesupport::coreextensions::float::rounding","rails::generator::commands::create","rails::generator::commands::destroy","rails::generator::commands::list","rails::plugin","rails::plugin","activesupport::multibyte::chars","actioncontroller::reloader","activesupport::callbacks::callbackchain","activesupport::testing::performance","activesupport::testing::performance::benchmarker","activesupport::testing::performance::profiler","activesupport::testing::setupandteardown::forclassictestunit","activesupport::testing::setupandteardown::forminitest","rails::generator::scripts::base","rails::initializer","activesupport::callbacks","railsfcgihandler","activerecord::testfixtures","actioncontroller::dispatcher","activesupport::testing::performance","activesupport::testing::performance","activesupport::testing::performance","activesupport::safebuffer","actionview::helpers::sanitizehelper","actionview::helpers::sanitizehelper","activerecord::connectionadapters::databasestatements","activerecord::base","activerecord::base","activerecord::base","activerecord::base","activerecord::base","activerecord::base","activerecord::sessionstore::sqlbypass","activeresource::base","repositories","activerecord::base","activerecord::validations","activeresource::validations","activerecord::validations","activerecord::migration","rails::gembuilder","activerecord::migration","activerecord::base","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::dynamicscopematch","activerecord::namedscope::classmethods","commands::discover","rails::vendorgemsourceindex","activesupport::coreextensions::array::access","activesupport::coreextensions::numeric::time","activesupport::coreextensions::numeric::time","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::time::calculations","actioncontroller::httpauthentication::digest","cgi::cookie","actionview::helpers::formoptionshelper","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::querycache","actionview::helpers::datehelper","actionview::helpers::datehelper","actionview::helpers::datehelper","actionview::helpers::datehelper","actionview::helpers::datehelper","actionview::helpers::datehelper","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","actionview::helpers::datehelper","actionview::helpers::formtaghelper","actionview::helpers::datehelper","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::databasestatements","actionview::helpers::datehelper","actioncontroller::streaming","actioncontroller::streaming","actioncontroller::base","actioncontroller::response","activerecord::base","activerecord::base","actioncontroller::request","actioncontroller::request","actioncontroller::request","actioncontroller::sessionmanagement::classmethods","actioncontroller::testprocess","actioncontroller::sessionmanagement::classmethods","actioncontroller::base","actioncontroller::session::abstractstore::sessionhash","activerecord::sessionstore::sqlbypass","actioncontroller::request","actioncontroller::sessionmanagement::classmethods","actioncontroller::request","actioncontroller::sessionmanagement::classmethods","actioncontroller::sessionmanagement::classmethods","rails::initializer","actioncontroller::response","activesupport::json","activerecord::testfixtures::classmethods","activerecord::base","rails::initializer","activerecord::locking::optimistic::classmethods","activerecord::base","rails::configuration","activerecord::base","activerecord::connectionadapters::postgresqladapter","activerecord::base","actioncontroller::testcase","activerecord::testfixtures::classmethods","activerecord::testfixtures","actionview::testcase","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activerecord::connectionadapters::mysqladapter","actioncontroller::benchmarking::classmethods","activerecord::base","activesupport::bufferedlogger","logger","activesupport::cache::store","rails::vendorgemsourceindex","rails::vendorgemsourceindex","kernel","kernel","activesupport::bufferedlogger","logger","actionview::helpers::texthelper","activesupport::coreextensions::date::calculations","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::numeric::time","activesupport::coreextensions::time::calculations","activesupport::duration","activesupport::timewithzone","object","activesupport::inflector::inflections","actioncontroller::recordidentifier","activesupport::coreextensions::string::inflections","activesupport::inflector","activeresource::base","activeresource::base","activeresource::connection","activerecord::errors","activerecord::namedscope::scope","activeresource::errors","activesupport::multibyte::chars","rails::vendorgemsourceindex","actioncontroller::filters::classmethods","actioncontroller::filters::classmethods","actioncontroller::filters::classmethods","activesupport::coreextensions::hash::slice","activesupport::multibyte::chars","activesupport::coreextensions::hash::slice","activesupport::multibyte::chars","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actionview::helpers::scriptaculoushelper","actionview::template","actioncontroller::routing::optimisation::optimiser","gem","rails::generator::base","rails::generator::lookup::classmethods","rails::gemdependency","rails::gemdependency","activesupport::coreextensions::array::grouping","activesupport::multibyte::chars","commands::plugin","activerecord::connectionadapters::databaselimits","activerecord::connectionadapters::sqliteadapter","activesupport::coreextensions::string::filters","activesupport::coreextensions::string::filters","actioncontroller::request","activeresource::base","activeresource::base","activeresource::connection","actioncontroller::base","actionview::reloadabletemplate","actioncontroller::request","activesupport::xmlmini_nokogirisax::hashbuilder","activesupport::xmlmini_nokogirisax::hashbuilder","activesupport::coreextensions::string::startsendswith","activesupport::cache::memcachestore","activesupport::coreextensions::range::blocklessstep","activesupport::coreextensions::range::blocklessstep","activerecord::base","actioncontroller::flash::flashhash","activesupport::timewithzone","activerecord::connectionadapters::column","activerecord::connectionadapters::column","activerecord::connectionadapters::column","activerecord::connectionadapters::column","activesupport::coreextensions::hash::keys","activesupport::coreextensions::hash::keys","hashwithindifferentaccess","activesupport::multibyte::chars","actionview::helpers::sanitizehelper","actionview::helpers::sanitizehelper","actioncontroller::assertions::domassertions","activerecord::connectionadapters::schemastatements","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actioncontroller::request","actionview::helpers::formtaghelper","actionview::helpers::prototypehelper","activeresource::response","activerecord::calculations::classmethods","enumerable","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::postgresqladapter","kernel","activerecord::migration","plugin","actioncontroller::middlewarestack","activesupport::coreextensions::hash::keys","activesupport::coreextensions::hash::keys","hashwithindifferentaccess","actioncontroller::request","module","actioncontroller::translation","actionview::helpers::translationhelper","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::databaselimits","activerecord::connectionadapters::postgresqladapter","activerecord::base","activerecord::connectionadapters::schemastatements","activerecord::base","activerecord::sessionstore::sqlbypass","activerecord::connectionadapters::databaselimits","activerecord::base","activerecord::base","activerecord::connectionadapters::sqliteadapter","activesupport::coreextensions::string::inflections","activesupport::inflector","activerecord::connectionadapters::postgresqladapter","actionview::helpers::taghelper","object","activerecord::testfixtures","actionview::base","rails::generator::commands::create","rails::generator::commands::destroy","rails::generator::commands::list","rails::generator::commands::update","actioncontroller::request","actionview::base","actionmailer::base","actionmailer::base","activesupport::coreextensions::numeric::bytes","activesupport::coreextensions::numeric::bytes","activesupport::testing::declarative","actioncontroller::testcase","actionview::testcase","activerecord::connectionadapters::column","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actionview::helpers::texthelper","actionview::helpers::texthelper","activesupport::coreextensions::array::access","rails::configuration","activesupport::multibyte::chars","activesupport::multibyte::chars","activesupport::timewithzone","actionview::helpers::datehelper","actionview::helpers::datehelper","activesupport::coreextensions::time::calculations::classmethods","actionview::helpers::formoptionshelper","actionview::helpers::formoptionshelper","activeresource::base","activeresource::base","activeresource::connection","activerecord::base","activerecord::connectionadapters::table","activerecord::connectionadapters::tabledefinition","activesupport::coreextensions::string::inflections","activesupport::coreextensions::string::inflections","activesupport::inflector","activesupport::coreextensions::array::access","activesupport::timewithzone","activesupport::coreextensions::date::conversions","activesupport::coreextensions::datetime::conversions","activesupport::coreextensions::string::conversions","activesupport::coreextensions::time::conversions","activesupport::coreextensions::date::conversions","activesupport::coreextensions::datetime::conversions","activesupport::coreextensions::string::conversions","activesupport::coreextensions::time::conversions","activesupport::timewithzone","activesupport::coreextensions::datetime::conversions","activesupport::timewithzone","activesupport::coreextensions::array::conversions","activesupport::coreextensions::bigdecimal::conversions","activesupport::coreextensions::date::conversions","activesupport::coreextensions::datetime::conversions","activesupport::coreextensions::range::conversions","activesupport::coreextensions::time::conversions","activesupport::timewithzone","actioncontroller::session::abstractstore::sessionhash","activesupport::xmlmini_nokogiri::conversions::document","activesupport::xmlmini_nokogiri::conversions::node","hashwithindifferentaccess","libxml::conversions::document","libxml::conversions::node","activesupport::coreextensions::datetime::conversions","activesupport::timewithzone","activerecord::serialization","activesupport::json::variable","object","activesupport::coreextensions::hash::keys","activesupport::coreextensions::hash::keys","hashwithindifferentaccess","activerecord::base","activeresource::base","activesupport::coreextensions::array::conversions","object","object","actioncontroller::dispatcher","rails::configuration","activesupport::coreextensions::array::conversions","object","actioncontroller::routing::optionalformatsegment","actionview::template::path","activerecord::error","activeresource::request","activeresource::sslerror","activeresource::sslerror","activeresource::timeouterror","activeresource::timeouterror","activesupport::safebuffer","activesupport::timewithzone","activesupport::timezone","cgi::cookie","mime::type","plugin","sourceannotationextractor::annotation","activesupport::coreextensions::array::conversions","activerecord::connectionadapters::tabledefinition","actionview::template::path","mime::type","mime::type","activesupport::coreextensions::date::conversions","activesupport::coreextensions::datetime::conversions","activesupport::coreextensions::string::conversions","activesupport::coreextensions::time::conversions","activesupport::timewithzone","activesupport::coreextensions::numeric::conversions","activerecord::errors","activerecord::serialization","activeresource::base","activesupport::coreextensions::array::conversions","activesupport::coreextensions::bigdecimal::conversions","activesupport::safebuffer","activesupport::timewithzone","activesupport::timezone","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::timewithzone","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activerecord::base","activerecord::base","activesupport::coreextensions::date::calculations","activesupport::coreextensions::date::calculations::classmethods","activesupport::coreextensions::time::calculations","activerecord::timestamp","activerecord::connectionadapters::databasestatements","activerecord::transactions","activerecord::transactions::classmethods","activerecord::connectionadapters::abstractadapter","actioncontroller::translation","actionview::helpers::translationhelper","activesupport::inflector","activesupport::inflector","activesupport::inflector","actionview::helpers::texthelper","object","activerecord::testfixtures::classmethods","activesupport::timewithzone","activerecord::connectionadapters::column","activerecord::connectionadapters::column","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activesupport::multibyte::chars","activerecord::connectionadapters::querycache","activerecord::querycache::classmethods","activesupport::inflector::inflections","actionview::reloadabletemplate","activesupport::coreextensions::string::inflections","activesupport::inflector","object","activerecord::connectionadapters::postgresqladapter","actioncontroller::assertions::selectorassertions","plugin","activerecord::sessionstore::session","activerecord::sessionstore::sqlbypass","activesupport::memoizable::instancemethods","rexml::entity","rails::gemdependency","rails::gemdependency","activesupport::coreextensions::numeric::time","activesupport::duration","mime::type","activesupport::multibyte::chars","activerecord::base","activerecord::connectionadapters::databasestatements","activeresource::base","hashwithindifferentaccess","activerecord::base","activerecord::base","activerecord::base","activerecord::base","activerecord::base","activerecord::locking::optimistic::classmethods","actionview::helpers::prototypehelper","actionview::helpers::prototypehelper","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","actionview::helpers::atomfeedhelper::atomfeedbuilder","actioncontroller::request","actioncontroller::base","actioncontroller::integration::session","actioncontroller::urlwriter","actionview::helpers::urlhelper","activesupport::timezone","rails::generator::options","rails::generator::base","rails::generator::options","rails::generator::scripts::base","actioncontroller::middlewarestack","rails::generator::lookup::classmethods","railsenvironment","rails::generator::lookup::classmethods","actioncontroller::routing","railsenvironment","railsenvironment","activesupport::coreextensions::time::zones::classmethods","activesupport::timewithzone","activeresource::base","activeresource::base","activeresource::connection","dir","actioncontroller::httpauthentication::basic","activerecord::testfixtures::classmethods","activerecord::testfixtures::classmethods","activesupport::coreextensions::datetime::calculations","activesupport::timewithzone","activesupport::coreextensions::datetime::calculations","activesupport::timewithzone","activesupport::coreextensions::datetime::calculations","activesupport::timewithzone","activesupport::timezone","activesupport::coreextensions::time::calculations::classmethods","activesupport::timezone","activerecord::validations","activeresource::validations","rails::plugin","activerecord::connectionadapters::sqliteadapter","activerecord::validations","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication::digest","activerecord::validations","activerecord::validations","activerecord::validations::classmethods","activerecord::validations::classmethods","activerecord::validations::classmethods","activerecord::validations::classmethods","activerecord::validations::classmethods","activerecord::validations::classmethods","activerecord::validations::classmethods","activerecord::validations::classmethods","activerecord::validations::classmethods","activerecord::validations::classmethods","activerecord::validations::classmethods","activerecord::validations::classmethods","activerecord::error","activerecord::connectionadapters::column","activerecord::connectionadapters::column","hashwithindifferentaccess","rails::gemdependency","rails::gemdependency","actioncontroller::requestforgeryprotection","activerecord::base","activerecord::base","actioncontroller::requestforgeryprotection","actioncontroller::verification::classmethods","activesupport::messageverifier","activerecord::connectionadapters::abstractadapter","actioncontroller::requestforgeryprotection","mime::type","rails","rails::vendorgemsourceindex","rails::plugin","actioncontroller::base","actioncontroller::base","actioncontroller::base","actioncontroller::base","actionview::base","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actionview::helpers::scriptaculoushelper","activesupport::multibyte::chars","activesupport::coreextensions::numeric::time","activesupport::coreextensions::numeric::time","activesupport::json","activesupport::xmlmini","activerecord::connectionadapters::connectionpool","actioncontroller::routing","activerecord::base","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::base","activesupport::cache::strategy::localcache","object","activesupport::testing::performance::benchmarker","actioncontroller::testprocess","activerecord::base","railsfcgihandler","actionview::base","activerecord::transactions","actionview::helpers::texthelper","activesupport::coreextensions::array::wrapper","actioncontroller::response","activerecord::migration","activesupport::cache::compressedmemcachestore","activesupport::cache::filestore","activesupport::cache::memcachestore","activesupport::cache::memorystore","activesupport::cache::store","activesupport::cache::strategy::localcache","activesupport::cache::synchronizedmemorystore","actioncontroller::caching::fragments","rails::gemdependency","actioncontroller::integration::session","actioncontroller::testprocess","actioncontroller::request","activerecord::connectionadapters::tabledefinition","activerecord::connectionadapters::tabledefinition","actioncontroller::integration::session","actioncontroller::testprocess","actioncontroller::request","activesupport::coreextensions::date::conversions","activesupport::coreextensions::datetime::conversions","activesupport::timewithzone","actionview::base","activesupport::coreextensions::float::time","activesupport::coreextensions::integer::time","activesupport::coreextensions::float::time","activesupport::coreextensions::integer::time","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::float::time","activesupport::coreextensions::date::calculations","activesupport::coreextensions::date::calculations::classmethods","activesupport::coreextensions::time::calculations","activesupport::coreextensions::time::zones::classmethods","activesupport::timewithzone","activesupport::coreextensions::time::zones::classmethods","activesupport::timezone","files.html\/readme.html","files.html\/actionmailer\/changelog.html","files.html\/actionmailer\/readme.html","files.html\/actionmailer\/lib\/action_mailer\/base_rb.html","files.html\/actionpack\/changelog.html","files.html\/actionpack\/readme.html","files.html\/actionpack\/lib\/action_controller\/assertions\/dom_assertions_rb.html","files.html\/actionpack\/lib\/action_controller\/assertions\/model_assertions_rb.html","files.html\/actionpack\/lib\/action_controller\/assertions\/response_assertions_rb.html","files.html\/actionpack\/lib\/action_controller\/assertions\/routing_assertions_rb.html","files.html\/actionpack\/lib\/action_controller\/assertions\/selector_assertions_rb.html","files.html\/actionpack\/lib\/action_controller\/assertions\/tag_assertions_rb.html","files.html\/actionpack\/lib\/action_controller\/base_rb.html","files.html\/actionpack\/lib\/action_controller\/benchmarking_rb.html","files.html\/actionpack\/lib\/action_controller\/caching_rb.html","files.html\/actionpack\/lib\/action_controller\/caching\/actions_rb.html","files.html\/actionpack\/lib\/action_controller\/caching\/fragments_rb.html","files.html\/actionpack\/lib\/action_controller\/caching\/pages_rb.html","files.html\/actionpack\/lib\/action_controller\/caching\/sweeper_rb.html","files.html\/actionpack\/lib\/action_controller\/caching\/sweeping_rb.html","files.html\/actionpack\/lib\/action_controller\/cgi_ext_rb.html","files.html\/actionpack\/lib\/action_controller\/cgi_ext\/cookie_rb.html","files.html\/actionpack\/lib\/action_controller\/cgi_ext\/query_extension_rb.html","files.html\/actionpack\/lib\/action_controller\/cgi_ext\/stdinput_rb.html","files.html\/actionpack\/lib\/action_controller\/cgi_process_rb.html","files.html\/actionpack\/lib\/action_controller\/cookies_rb.html","files.html\/actionpack\/lib\/action_controller\/dispatcher_rb.html","files.html\/actionpack\/lib\/action_controller\/failsafe_rb.html","files.html\/actionpack\/lib\/action_controller\/filters_rb.html","files.html\/actionpack\/lib\/action_controller\/flash_rb.html","files.html\/actionpack\/lib\/action_controller\/headers_rb.html","files.html\/actionpack\/lib\/action_controller\/helpers_rb.html","files.html\/actionpack\/lib\/action_controller\/http_authentication_rb.html","files.html\/actionpack\/lib\/action_controller\/integration_rb.html","files.html\/actionpack\/lib\/action_controller\/layout_rb.html","files.html\/actionpack\/lib\/action_controller\/middleware_stack_rb.html","files.html\/actionpack\/lib\/action_controller\/middlewares_rb.html","files.html\/actionpack\/lib\/action_controller\/mime_responds_rb.html","files.html\/actionpack\/lib\/action_controller\/mime_type_rb.html","files.html\/actionpack\/lib\/action_controller\/mime_types_rb.html","files.html\/actionpack\/lib\/action_controller\/params_parser_rb.html","files.html\/actionpack\/lib\/action_controller\/performance_test_rb.html","files.html\/actionpack\/lib\/action_controller\/polymorphic_routes_rb.html","files.html\/actionpack\/lib\/action_controller\/rack_lint_patch_rb.html","files.html\/actionpack\/lib\/action_controller\/record_identifier_rb.html","files.html\/actionpack\/lib\/action_controller\/reloader_rb.html","files.html\/actionpack\/lib\/action_controller\/request_rb.html","files.html\/actionpack\/lib\/action_controller\/request_forgery_protection_rb.html","files.html\/actionpack\/lib\/action_controller\/rescue_rb.html","files.html\/actionpack\/lib\/action_controller\/resources_rb.html","files.html\/actionpack\/lib\/action_controller\/response_rb.html","files.html\/actionpack\/lib\/action_controller\/routing_rb.html","files.html\/actionpack\/lib\/action_controller\/routing\/builder_rb.html","files.html\/actionpack\/lib\/action_controller\/routing\/optimisations_rb.html","files.html\/actionpack\/lib\/action_controller\/routing\/recognition_optimisation_rb.html","files.html\/actionpack\/lib\/action_controller\/routing\/route_rb.html","files.html\/actionpack\/lib\/action_controller\/routing\/route_set_rb.html","files.html\/actionpack\/lib\/action_controller\/routing\/routing_ext_rb.html","files.html\/actionpack\/lib\/action_controller\/routing\/segments_rb.html","files.html\/actionpack\/lib\/action_controller\/session\/abstract_store_rb.html","files.html\/actionpack\/lib\/action_controller\/session\/cookie_store_rb.html","files.html\/actionpack\/lib\/action_controller\/session\/mem_cache_store_rb.html","files.html\/actionpack\/lib\/action_controller\/session_management_rb.html","files.html\/actionpack\/lib\/action_controller\/status_codes_rb.html","files.html\/actionpack\/lib\/action_controller\/streaming_rb.html","files.html\/actionpack\/lib\/action_controller\/string_coercion_rb.html","files.html\/actionpack\/lib\/action_controller\/test_case_rb.html","files.html\/actionpack\/lib\/action_controller\/test_process_rb.html","files.html\/actionpack\/lib\/action_controller\/translation_rb.html","files.html\/actionpack\/lib\/action_controller\/uploaded_file_rb.html","files.html\/actionpack\/lib\/action_controller\/url_rewriter_rb.html","files.html\/actionpack\/lib\/action_controller\/verification_rb.html","files.html\/actionpack\/lib\/action_view\/base_rb.html","files.html\/actionpack\/lib\/action_view\/helpers_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/active_record_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/asset_tag_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/atom_feed_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/benchmark_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/cache_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/capture_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/date_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/debug_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/form_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/form_options_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/form_tag_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/javascript_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/number_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/prototype_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/raw_output_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/record_identification_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/record_tag_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/sanitize_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/scriptaculous_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/tag_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/text_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/translation_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/url_helper_rb.html","files.html\/actionpack\/lib\/action_view\/inline_template_rb.html","files.html\/actionpack\/lib\/action_view\/partials_rb.html","files.html\/actionpack\/lib\/action_view\/paths_rb.html","files.html\/actionpack\/lib\/action_view\/reloadable_template_rb.html","files.html\/actionpack\/lib\/action_view\/renderable_rb.html","files.html\/actionpack\/lib\/action_view\/renderable_partial_rb.html","files.html\/actionpack\/lib\/action_view\/template_rb.html","files.html\/actionpack\/lib\/action_view\/template_error_rb.html","files.html\/actionpack\/lib\/action_view\/template_handler_rb.html","files.html\/actionpack\/lib\/action_view\/template_handlers_rb.html","files.html\/actionpack\/lib\/action_view\/template_handlers\/builder_rb.html","files.html\/actionpack\/lib\/action_view\/template_handlers\/erb_rb.html","files.html\/actionpack\/lib\/action_view\/template_handlers\/rjs_rb.html","files.html\/actionpack\/lib\/action_view\/test_case_rb.html","files.html\/activerecord\/changelog.html","files.html\/activerecord\/readme.html","files.html\/activerecord\/lib\/active_record\/aggregations_rb.html","files.html\/activerecord\/lib\/active_record\/association_preload_rb.html","files.html\/activerecord\/lib\/active_record\/associations_rb.html","files.html\/activerecord\/lib\/active_record\/associations\/association_collection_rb.html","files.html\/activerecord\/lib\/active_record\/associations\/association_proxy_rb.html","files.html\/activerecord\/lib\/active_record\/associations\/belongs_to_association_rb.html","files.html\/activerecord\/lib\/active_record\/associations\/belongs_to_polymorphic_association_rb.html","files.html\/activerecord\/lib\/active_record\/associations\/has_and_belongs_to_many_association_rb.html","files.html\/activerecord\/lib\/active_record\/associations\/has_many_association_rb.html","files.html\/activerecord\/lib\/active_record\/associations\/has_many_through_association_rb.html","files.html\/activerecord\/lib\/active_record\/associations\/has_one_association_rb.html","files.html\/activerecord\/lib\/active_record\/associations\/has_one_through_association_rb.html","files.html\/activerecord\/lib\/active_record\/attribute_methods_rb.html","files.html\/activerecord\/lib\/active_record\/autosave_association_rb.html","files.html\/activerecord\/lib\/active_record\/base_rb.html","files.html\/activerecord\/lib\/active_record\/batches_rb.html","files.html\/activerecord\/lib\/active_record\/calculations_rb.html","files.html\/activerecord\/lib\/active_record\/callbacks_rb.html","files.html\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/connection_pool_rb.html","files.html\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/connection_specification_rb.html","files.html\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/database_limits_rb.html","files.html\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/database_statements_rb.html","files.html\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/query_cache_rb.html","files.html\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/quoting_rb.html","files.html\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/schema_definitions_rb.html","files.html\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/schema_statements_rb.html","files.html\/activerecord\/lib\/active_record\/connection_adapters\/abstract_adapter_rb.html","files.html\/activerecord\/lib\/active_record\/connection_adapters\/mysql_adapter_rb.html","files.html\/activerecord\/lib\/active_record\/connection_adapters\/postgresql_adapter_rb.html","files.html\/activerecord\/lib\/active_record\/connection_adapters\/sqlite3_adapter_rb.html","files.html\/activerecord\/lib\/active_record\/connection_adapters\/sqlite_adapter_rb.html","files.html\/activerecord\/lib\/active_record\/dirty_rb.html","files.html\/activerecord\/lib\/active_record\/dynamic_finder_match_rb.html","files.html\/activerecord\/lib\/active_record\/dynamic_scope_match_rb.html","files.html\/activerecord\/lib\/active_record\/fixtures_rb.html","files.html\/activerecord\/lib\/active_record\/locking\/optimistic_rb.html","files.html\/activerecord\/lib\/active_record\/locking\/pessimistic_rb.html","files.html\/activerecord\/lib\/active_record\/migration_rb.html","files.html\/activerecord\/lib\/active_record\/named_scope_rb.html","files.html\/activerecord\/lib\/active_record\/nested_attributes_rb.html","files.html\/activerecord\/lib\/active_record\/observer_rb.html","files.html\/activerecord\/lib\/active_record\/query_cache_rb.html","files.html\/activerecord\/lib\/active_record\/reflection_rb.html","files.html\/activerecord\/lib\/active_record\/schema_rb.html","files.html\/activerecord\/lib\/active_record\/schema_dumper_rb.html","files.html\/activerecord\/lib\/active_record\/serialization_rb.html","files.html\/activerecord\/lib\/active_record\/serializers\/json_serializer_rb.html","files.html\/activerecord\/lib\/active_record\/serializers\/xml_serializer_rb.html","files.html\/activerecord\/lib\/active_record\/session_store_rb.html","files.html\/activerecord\/lib\/active_record\/test_case_rb.html","files.html\/activerecord\/lib\/active_record\/timestamp_rb.html","files.html\/activerecord\/lib\/active_record\/transactions_rb.html","files.html\/activerecord\/lib\/active_record\/validations_rb.html","files.html\/activerecord\/lib\/active_record\/version_rb.html","files.html\/activeresource\/changelog.html","files.html\/activeresource\/readme.html","files.html\/activeresource\/lib\/active_resource_rb.html","files.html\/activeresource\/lib\/active_resource\/base_rb.html","files.html\/activeresource\/lib\/active_resource\/connection_rb.html","files.html\/activeresource\/lib\/active_resource\/custom_methods_rb.html","files.html\/activeresource\/lib\/active_resource\/exceptions_rb.html","files.html\/activeresource\/lib\/active_resource\/formats_rb.html","files.html\/activeresource\/lib\/active_resource\/formats\/json_format_rb.html","files.html\/activeresource\/lib\/active_resource\/formats\/xml_format_rb.html","files.html\/activeresource\/lib\/active_resource\/http_mock_rb.html","files.html\/activeresource\/lib\/active_resource\/validations_rb.html","files.html\/activeresource\/lib\/active_resource\/version_rb.html","files.html\/activesupport\/changelog.html","files.html\/activesupport\/readme.html","files.html\/activesupport\/lib\/active_support\/all_rb.html","files.html\/activesupport\/lib\/active_support\/backtrace_cleaner_rb.html","files.html\/activesupport\/lib\/active_support\/base64_rb.html","files.html\/activesupport\/lib\/active_support\/basic_object_rb.html","files.html\/activesupport\/lib\/active_support\/buffered_logger_rb.html","files.html\/activesupport\/lib\/active_support\/cache_rb.html","files.html\/activesupport\/lib\/active_support\/cache\/compressed_mem_cache_store_rb.html","files.html\/activesupport\/lib\/active_support\/cache\/drb_store_rb.html","files.html\/activesupport\/lib\/active_support\/cache\/file_store_rb.html","files.html\/activesupport\/lib\/active_support\/cache\/mem_cache_store_rb.html","files.html\/activesupport\/lib\/active_support\/cache\/memory_store_rb.html","files.html\/activesupport\/lib\/active_support\/cache\/strategy\/local_cache_rb.html","files.html\/activesupport\/lib\/active_support\/cache\/synchronized_memory_store_rb.html","files.html\/activesupport\/lib\/active_support\/callbacks_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/array_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/array\/access_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/array\/conversions_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/array\/extract_options_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/array\/grouping_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/array\/random_access_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/array\/wrapper_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/base64_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/base64\/encoding_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/benchmark_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/bigdecimal_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/bigdecimal\/conversions_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/blank_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/cgi_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/cgi\/escape_skipping_slashes_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/class_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/class\/attribute_accessors_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/class\/delegating_attributes_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/class\/inheritable_attributes_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/class\/removal_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/date_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/date\/behavior_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/date\/calculations_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/date\/conversions_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/date_time_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/date_time\/calculations_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/date_time\/conversions_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/duplicable_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/enumerable_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/exception_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/file_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/file\/atomic_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/float_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/float\/rounding_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/float\/time_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/hash_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/hash\/conversions_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/hash\/deep_merge_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/hash\/diff_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/hash\/except_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/hash\/indifferent_access_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/hash\/keys_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/hash\/reverse_merge_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/hash\/slice_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/integer_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/integer\/even_odd_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/integer\/inflections_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/integer\/time_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/kernel_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/kernel\/agnostics_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/kernel\/daemonizing_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/kernel\/debugger_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/kernel\/reporting_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/kernel\/requires_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/load_error_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/logger_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/module_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/aliasing_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/attr_accessor_with_default_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/attr_internal_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/attribute_accessors_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/delegation_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/inclusion_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/introspection_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/loading_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/model_naming_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/synchronization_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/name_error_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/numeric_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/numeric\/bytes_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/numeric\/conversions_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/numeric\/time_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/object_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/object\/blank_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/object\/conversions_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/object\/extending_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/object\/instance_variables_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/object\/metaclass_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/object\/misc_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/object\/singleton_class_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/pathname_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/pathname\/clean_within_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/proc_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/process_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/process\/daemon_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/range_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/range\/blockless_step_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/range\/conversions_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/range\/include_range_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/range\/overlaps_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/rexml_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/string_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/access_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/behavior_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/bytesize_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/conversions_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/filters_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/inflections_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/iterators_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/multibyte_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/output_safety_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/starts_ends_with_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/xchar_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/symbol_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/time_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/time\/behavior_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/time\/calculations_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/time\/conversions_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/time\/zones_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/try_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/uri_rb.html","files.html\/activesupport\/lib\/active_support\/dependencies_rb.html","files.html\/activesupport\/lib\/active_support\/deprecation_rb.html","files.html\/activesupport\/lib\/active_support\/duration_rb.html","files.html\/activesupport\/lib\/active_support\/gzip_rb.html","files.html\/activesupport\/lib\/active_support\/inflections_rb.html","files.html\/activesupport\/lib\/active_support\/inflector_rb.html","files.html\/activesupport\/lib\/active_support\/json_rb.html","files.html\/activesupport\/lib\/active_support\/json\/backends\/jsongem_rb.html","files.html\/activesupport\/lib\/active_support\/json\/backends\/yajl_rb.html","files.html\/activesupport\/lib\/active_support\/json\/backends\/yaml_rb.html","files.html\/activesupport\/lib\/active_support\/json\/decoding_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoders\/date_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoders\/date_time_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoders\/enumerable_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoders\/false_class_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoders\/hash_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoders\/nil_class_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoders\/numeric_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoders\/object_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoders\/regexp_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoders\/string_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoders\/symbol_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoders\/time_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoders\/true_class_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoding_rb.html","files.html\/activesupport\/lib\/active_support\/json\/variable_rb.html","files.html\/activesupport\/lib\/active_support\/memoizable_rb.html","files.html\/activesupport\/lib\/active_support\/message_encryptor_rb.html","files.html\/activesupport\/lib\/active_support\/message_verifier_rb.html","files.html\/activesupport\/lib\/active_support\/multibyte_rb.html","files.html\/activesupport\/lib\/active_support\/multibyte\/chars_rb.html","files.html\/activesupport\/lib\/active_support\/multibyte\/exceptions_rb.html","files.html\/activesupport\/lib\/active_support\/multibyte\/unicode_database_rb.html","files.html\/activesupport\/lib\/active_support\/multibyte\/utils_rb.html","files.html\/activesupport\/lib\/active_support\/option_merger_rb.html","files.html\/activesupport\/lib\/active_support\/ordered_hash_rb.html","files.html\/activesupport\/lib\/active_support\/ordered_options_rb.html","files.html\/activesupport\/lib\/active_support\/rescuable_rb.html","files.html\/activesupport\/lib\/active_support\/secure_random_rb.html","files.html\/activesupport\/lib\/active_support\/string_inquirer_rb.html","files.html\/activesupport\/lib\/active_support\/test_case_rb.html","files.html\/activesupport\/lib\/active_support\/testing\/assertions_rb.html","files.html\/activesupport\/lib\/active_support\/testing\/declarative_rb.html","files.html\/activesupport\/lib\/active_support\/testing\/default_rb.html","files.html\/activesupport\/lib\/active_support\/testing\/deprecation_rb.html","files.html\/activesupport\/lib\/active_support\/testing\/performance_rb.html","files.html\/activesupport\/lib\/active_support\/testing\/setup_and_teardown_rb.html","files.html\/activesupport\/lib\/active_support\/time_with_zone_rb.html","files.html\/activesupport\/lib\/active_support\/values\/time_zone_rb.html","files.html\/activesupport\/lib\/active_support\/vendor_rb.html","files.html\/activesupport\/lib\/active_support\/version_rb.html","files.html\/activesupport\/lib\/active_support\/whiny_nil_rb.html","files.html\/activesupport\/lib\/active_support\/xml_mini_rb.html","files.html\/activesupport\/lib\/active_support\/xml_mini\/jdom_rb.html","files.html\/activesupport\/lib\/active_support\/xml_mini\/libxml_rb.html","files.html\/activesupport\/lib\/active_support\/xml_mini\/libxmlsax_rb.html","files.html\/activesupport\/lib\/active_support\/xml_mini\/nokogiri_rb.html","files.html\/activesupport\/lib\/active_support\/xml_mini\/nokogirisax_rb.html","files.html\/activesupport\/lib\/active_support\/xml_mini\/rexml_rb.html","files.html\/railties\/changelog.html","files.html\/railties\/mit-license.html","files.html\/railties\/readme.html","files.html\/railties\/lib\/code_statistics_rb.html","files.html\/railties\/lib\/commands_rb.html","files.html\/railties\/lib\/commands\/about_rb.html","files.html\/railties\/lib\/commands\/console_rb.html","files.html\/railties\/lib\/commands\/dbconsole_rb.html","files.html\/railties\/lib\/commands\/destroy_rb.html","files.html\/railties\/lib\/commands\/generate_rb.html","files.html\/railties\/lib\/commands\/plugin_rb.html","files.html\/railties\/lib\/commands\/runner_rb.html","files.html\/railties\/lib\/commands\/server_rb.html","files.html\/railties\/lib\/commands\/update_rb.html","files.html\/railties\/lib\/console_app_rb.html","files.html\/railties\/lib\/console_sandbox_rb.html","files.html\/railties\/lib\/console_with_helpers_rb.html","files.html\/railties\/lib\/dispatcher_rb.html","files.html\/railties\/lib\/fcgi_handler_rb.html","files.html\/railties\/lib\/initializer_rb.html","files.html\/railties\/lib\/performance_test_help_rb.html","files.html\/railties\/lib\/rails\/backtrace_cleaner_rb.html","files.html\/railties\/lib\/rails\/gem_builder_rb.html","files.html\/railties\/lib\/rails\/gem_dependency_rb.html","files.html\/railties\/lib\/rails\/plugin_rb.html","files.html\/railties\/lib\/rails\/rack_rb.html","files.html\/railties\/lib\/rails\/vendor_gem_source_index_rb.html","files.html\/railties\/lib\/rails\/version_rb.html","files.html\/railties\/lib\/rails_generator_rb.html","files.html\/railties\/lib\/rails_generator\/base_rb.html","files.html\/railties\/lib\/rails_generator\/commands_rb.html","files.html\/railties\/lib\/rails_generator\/generated_attribute_rb.html","files.html\/railties\/lib\/rails_generator\/lookup_rb.html","files.html\/railties\/lib\/rails_generator\/manifest_rb.html","files.html\/railties\/lib\/rails_generator\/options_rb.html","files.html\/railties\/lib\/rails_generator\/scripts_rb.html","files.html\/railties\/lib\/rails_generator\/secret_key_generator_rb.html","files.html\/railties\/lib\/rails_generator\/simple_logger_rb.html","files.html\/railties\/lib\/rails_generator\/spec_rb.html","files.html\/railties\/lib\/railties_path_rb.html","files.html\/railties\/lib\/ruby_version_check_rb.html","files.html\/railties\/lib\/rubyprof_ext_rb.html","files.html\/railties\/lib\/source_annotation_extractor_rb.html","files.html\/railties\/lib\/test_help_rb.html","files\/railties\/lib\/webrick_server_rb.html"],"info":[["Assertions","ActionController","classes.html\/ActionController\/Assertions.html"," < ","",1],["DomAssertions","ActionController::Assertions","classes.html\/ActionController\/Assertions\/DomAssertions.html"," < ","",1],["ModelAssertions","ActionController::Assertions","classes.html\/ActionController\/Assertions\/ModelAssertions.html"," < ","",1],["ResponseAssertions","ActionController::Assertions","classes.html\/ActionController\/Assertions\/ResponseAssertions.html"," < ","A small suite of assertions that test responses from Rails applications. ",1],["RoutingAssertions","ActionController::Assertions","classes.html\/ActionController\/Assertions\/RoutingAssertions.html"," < ","Suite of assertions to test routes generated by Rails and the handling of requests made to them. ",1],["SelectorAssertions","ActionController::Assertions","classes.html\/ActionController\/Assertions\/SelectorAssertions.html"," < ","Adds the +assert_select+ method for use in Rails functional test cases, which can be used to make assertions",1],["TagAssertions","ActionController::Assertions","classes.html\/ActionController\/Assertions\/TagAssertions.html"," < ","Pair of assertions to testing elements in the HTML output of the response. ",1],["Base","ActionController","classes.html\/ActionController\/Base.html"," < Object","Action Controllers are the core of a web request in Rails. They are made up of one or more actions that",1],["ClassMethods","ActionController::Benchmarking","classes.html\/ActionController\/Benchmarking\/ClassMethods.html"," < ","",1],["CGIHandler","ActionController","classes.html\/ActionController\/CGIHandler.html"," < Object","",1],["ProperStream","ActionController::CGIHandler","classes.html\/ActionController\/CGIHandler\/ProperStream.html"," < ","",1],["Caching","ActionController","classes.html\/ActionController\/Caching.html"," < ","Caching is a cheap way of speeding up slow applications by keeping the result of calculations, renderings,",1],["Actions","ActionController::Caching","classes.html\/ActionController\/Caching\/Actions.html"," < ","Action caching is similar to page caching by the fact that the entire output of the response is cached,",1],["ActionCachePath","ActionController::Caching::Actions","classes.html\/ActionController\/Caching\/Actions\/ActionCachePath.html"," < Object","",1],["ClassMethods","ActionController::Caching::Actions","classes.html\/ActionController\/Caching\/Actions\/ClassMethods.html"," < ","",1],["Fragments","ActionController::Caching","classes.html\/ActionController\/Caching\/Fragments.html"," < ","Fragment caching is used for caching various blocks within templates without caching the entire action",1],["Pages","ActionController::Caching","classes.html\/ActionController\/Caching\/Pages.html"," < ","Page caching is an approach to caching where the entire action output of is stored as a HTML file that",1],["ClassMethods","ActionController::Caching::Pages","classes.html\/ActionController\/Caching\/Pages\/ClassMethods.html"," < ","",1],["Sweeping","ActionController::Caching","classes.html\/ActionController\/Caching\/Sweeping.html"," < ","Sweepers are the terminators of the caching world and responsible for expiring caches when model objects",1],["CgiExt","ActionController","classes.html\/ActionController\/CgiExt.html"," < ","",1],["Stdinput","ActionController::CgiExt","classes.html\/ActionController\/CgiExt\/Stdinput.html"," < ","Publicize the CGI's internal input stream so we can lazy-read request.body. Make it writable so we don't",1],["Cookies","ActionController","classes.html\/ActionController\/Cookies.html"," < ","Cookies are read and written through ActionController#cookies. The cookies being read are the ones received",1],["Dispatcher","ActionController","classes.html\/ActionController\/Dispatcher.html"," < Object","Dispatches requests to the appropriate controller and takes care of reloading the app after each request",1],["Failsafe","ActionController","classes.html\/ActionController\/Failsafe.html"," < Object","The Failsafe middleware is usually the top-most middleware in the Rack middleware chain. It returns the",1],["ClassMethods","ActionController::Filters","classes.html\/ActionController\/Filters\/ClassMethods.html"," < ","Filters enable controllers to run shared pre- and post-processing code for its actions. These filters",1],["Flash","ActionController","classes.html\/ActionController\/Flash.html"," < ","The flash provides a way to pass temporary objects between actions. Anything you place in the flash will",1],["FlashHash","ActionController::Flash","classes.html\/ActionController\/Flash\/FlashHash.html"," < Hash","",1],["ClassMethods","ActionController::Helpers","classes.html\/ActionController\/Helpers\/ClassMethods.html"," < ","The Rails framework provides a large number of helpers for working with +assets+, +dates+, +forms+, ",1],["Http","ActionController","classes.html\/ActionController\/Http.html"," < ","",1],["Headers","ActionController::Http","classes.html\/ActionController\/Http\/Headers.html"," < ::Hash","",1],["HttpAuthentication","ActionController","classes.html\/ActionController\/HttpAuthentication.html"," < ","",1],["Basic","ActionController::HttpAuthentication","classes.html\/ActionController\/HttpAuthentication\/Basic.html"," < ","Makes it dead easy to do HTTP Basic authentication. Simple Basic example: class PostsController < ApplicationController",1],["ControllerMethods","ActionController::HttpAuthentication::Basic","classes.html\/ActionController\/HttpAuthentication\/Basic\/ControllerMethods.html"," < ","",1],["Digest","ActionController::HttpAuthentication","classes.html\/ActionController\/HttpAuthentication\/Digest.html"," < ","",1],["ControllerMethods","ActionController::HttpAuthentication::Digest","classes.html\/ActionController\/HttpAuthentication\/Digest\/ControllerMethods.html"," < ","",1],["Runner","ActionController::Integration","classes.html\/ActionController\/Integration\/Runner.html"," < ","",1],["Session","ActionController::Integration","classes.html\/ActionController\/Integration\/Session.html"," < Object","An integration Session instance represents a set of requests and responses performed sequentially by",1],["MultiPartNeededException","ActionController::Integration::Session","classes.html\/ActionController\/Integration\/Session\/MultiPartNeededException.html"," < Exception","",1],["IntegrationTest","ActionController","classes.html\/ActionController\/IntegrationTest.html"," < ActiveSupport::TestCase","An IntegrationTest is one that spans multiple controllers and actions, tying them all together to ensure",1],["ClassMethods","ActionController::Layout","classes.html\/ActionController\/Layout\/ClassMethods.html"," < ","Layouts reverse the common pattern of including shared headers and footers in many templates to isolate",1],["MiddlewareStack","ActionController","classes.html\/ActionController\/MiddlewareStack.html"," < Array","",1],["Middleware","ActionController::MiddlewareStack","classes.html\/ActionController\/MiddlewareStack\/Middleware.html"," < Object","",1],["InstanceMethods","ActionController::MimeResponds","classes.html\/ActionController\/MimeResponds\/InstanceMethods.html"," < ","",1],["ParamsParser","ActionController","classes.html\/ActionController\/ParamsParser.html"," < Object","",1],["PerformanceTest","ActionController","classes.html\/ActionController\/PerformanceTest.html"," < ActionController::IntegrationTest","An integration test that runs a code profiler on your test methods. Profiling output for combinations",1],["PolymorphicRoutes","ActionController","classes.html\/ActionController\/PolymorphicRoutes.html"," < ","Polymorphic URL helpers are methods for smart resolution to a named route call when given an Active Record",1],["RecordIdentifier","ActionController","classes.html\/ActionController\/RecordIdentifier.html"," < ","The record identifier encapsulates a number of naming conventions for dealing with records, like Active",1],["Reloader","ActionController","classes.html\/ActionController\/Reloader.html"," < Object","",1],["BodyWrapper","ActionController::Reloader","classes.html\/ActionController\/Reloader\/BodyWrapper.html"," < Object","",1],["Request","ActionController","classes.html\/ActionController\/Request.html"," < Rack::Request","",1],["RequestForgeryProtection","ActionController","classes.html\/ActionController\/RequestForgeryProtection.html"," < ","",1],["ClassMethods","ActionController::RequestForgeryProtection","classes.html\/ActionController\/RequestForgeryProtection\/ClassMethods.html"," < ","Protecting controller actions from CSRF attacks by ensuring that all forms are coming from the current",1],["Rescue","ActionController","classes.html\/ActionController\/Rescue.html"," < ","Actions that fail to perform as expected throw exceptions. These exceptions can either be rescued for",1],["ClassMethods","ActionController::Rescue","classes.html\/ActionController\/Rescue\/ClassMethods.html"," < ","",1],["Resources","ActionController","classes.html\/ActionController\/Resources.html"," < ","== Overview ActionController::Resources are a way of defining RESTful \\resources.  A RESTful \\resource,",1],["Response","ActionController","classes.html\/ActionController\/Response.html"," < Rack::Response","Represents an HTTP response generated by a controller action. One can use an ActionController::Response",1],["Routing","ActionController","classes.html\/ActionController\/Routing.html"," < ","== Routing The routing module provides URL rewriting in native Ruby. It's a way to redirect incoming",1],["Helpers","ActionController::Routing","classes.html\/ActionController\/Routing\/Helpers.html"," < ","A helper module to hold URL related helpers. ",1],["Optimisation","ActionController::Routing","classes.html\/ActionController\/Routing\/Optimisation.html"," < ","Much of the slow performance from routes comes from the complexity of expiry, <tt>:requirements<\/tt>",1],["Optimiser","ActionController::Routing::Optimisation","classes.html\/ActionController\/Routing\/Optimisation\/Optimiser.html"," < Object","",1],["PositionalArguments","ActionController::Routing::Optimisation","classes.html\/ActionController\/Routing\/Optimisation\/PositionalArguments.html"," < Optimiser","Given a route map.person '\/people\/:id' If the user calls <tt>person_url(@person)<\/tt>, we can simply",1],["PositionalArgumentsWithAdditionalParams","ActionController::Routing::Optimisation","classes.html\/ActionController\/Routing\/Optimisation\/PositionalArgumentsWithAdditionalParams.html"," < PositionalArguments","This case is mostly the same as the positional arguments case above, but it supports additional query",1],["OptionalFormatSegment","ActionController::Routing","classes.html\/ActionController\/Routing\/OptionalFormatSegment.html"," < DynamicSegment","The OptionalFormatSegment allows for any resource route to have an optional :format, which decreases",1],["Mapper","ActionController::Routing::RouteSet","classes.html\/ActionController\/Routing\/RouteSet\/Mapper.html"," < Object","Mapper instances are used to build routes. The object passed to the draw block in config\/routes.rb is",1],["Session","ActionController","classes.html\/ActionController\/Session.html"," < ","",1],["AbstractStore","ActionController::Session","classes.html\/ActionController\/Session\/AbstractStore.html"," < Object","",1],["SessionHash","ActionController::Session::AbstractStore","classes.html\/ActionController\/Session\/AbstractStore\/SessionHash.html"," < Hash","",1],["CookieStore","ActionController::Session","classes.html\/ActionController\/Session\/CookieStore.html"," < Object","This cookie-based session store is the Rails default. Sessions typically contain at most a user_id and",1],["CookieOverflow","ActionController::Session::CookieStore","classes.html\/ActionController\/Session\/CookieStore\/CookieOverflow.html"," < StandardError","Raised when storing more than 4K of session data. ",1],["MemCacheStore","ActionController::Session","classes.html\/ActionController\/Session\/MemCacheStore.html"," < AbstractStore","",1],["ClassMethods","ActionController::SessionManagement","classes.html\/ActionController\/SessionManagement\/ClassMethods.html"," < ","",1],["Streaming","ActionController","classes.html\/ActionController\/Streaming.html"," < ","Methods for sending arbitrary data and for streaming files to the browser, instead of rendering. ",1],["StringCoercion","ActionController","classes.html\/ActionController\/StringCoercion.html"," < Object","",1],["UglyBody","ActionController::StringCoercion","classes.html\/ActionController\/StringCoercion\/UglyBody.html"," < ActiveSupport::BasicObject","",1],["TestCase","ActionController","classes.html\/ActionController\/TestCase.html"," < ActiveSupport::TestCase","Superclass for ActionController functional tests. Functional tests allow you to test a single controller",1],["Assertions","ActionController::TestCase","classes.html\/ActionController\/TestCase\/Assertions.html"," < ","",1],["RaiseActionExceptions","ActionController::TestCase","classes.html\/ActionController\/TestCase\/RaiseActionExceptions.html"," < ","When the request.remote_addr remains the default for testing, which is 0.0.0.0, the exception is simply",1],["TestProcess","ActionController","classes.html\/ActionController\/TestProcess.html"," < ","",1],["TestResponse","ActionController","classes.html\/ActionController\/TestResponse.html"," < Response","Integration test methods such as ActionController::Integration::Session#get and ActionController::Integration::Session#post",1],["TestUploadedFile","ActionController","classes.html\/ActionController\/TestUploadedFile.html"," < Object","",1],["Translation","ActionController","classes.html\/ActionController\/Translation.html"," < ","",1],["UploadedFile","ActionController","classes.html\/ActionController\/UploadedFile.html"," < ","",1],["UploadedStringIO","ActionController","classes.html\/ActionController\/UploadedStringIO.html"," < StringIO","",1],["UploadedTempfile","ActionController","classes.html\/ActionController\/UploadedTempfile.html"," < Tempfile","",1],["UrlWriter","ActionController","classes.html\/ActionController\/UrlWriter.html"," < ","In <b>routes.rb<\/b> one defines URL-to-controller mappings, but the reverse is also possible: an URL",1],["ClassMethods","ActionController::Verification","classes.html\/ActionController\/Verification\/ClassMethods.html"," < ","This module provides a class-level method for specifying that certain actions are guarded against being",1],["Base","ActionMailer","classes.html\/ActionMailer\/Base.html"," < Object","Action Mailer allows you to send email from your application using a mailer model and views. = Mailer",1],["Base","ActionView","classes.html\/ActionView\/Base.html"," < Object","Action View templates can be written in three ways. If the template file has a <tt>.erb<\/tt> (or <tt>.rhtml<\/tt>)",1],["ProxyModule","ActionView::Base","classes.html\/ActionView\/Base\/ProxyModule.html"," < Module","",1],["ActiveRecordHelper","ActionView::Helpers","classes.html\/ActionView\/Helpers\/ActiveRecordHelper.html"," < ","The Active Record Helper makes it easier to create forms for records kept in instance variables. The",1],["AssetTagHelper","ActionView::Helpers","classes.html\/ActionView\/Helpers\/AssetTagHelper.html"," < ","This module provides methods for generating HTML that links views to assets such as images, javascripts,",1],["AtomFeedHelper","ActionView::Helpers","classes.html\/ActionView\/Helpers\/AtomFeedHelper.html"," < ","",1],["AtomBuilder","ActionView::Helpers::AtomFeedHelper","classes.html\/ActionView\/Helpers\/AtomFeedHelper\/AtomBuilder.html"," < Object","",1],["AtomFeedBuilder","ActionView::Helpers::AtomFeedHelper","classes.html\/ActionView\/Helpers\/AtomFeedHelper\/AtomFeedBuilder.html"," < AtomBuilder","",1],["BenchmarkHelper","ActionView::Helpers","classes.html\/ActionView\/Helpers\/BenchmarkHelper.html"," < ","This helper offers a method to measure the execution time of a block  in a template. ",1],["CacheHelper","ActionView::Helpers","classes.html\/ActionView\/Helpers\/CacheHelper.html"," < ","This helper to exposes a method for caching of view fragments. See ActionController::Caching::Fragments",1],["CaptureHelper","ActionView::Helpers","classes.html\/ActionView\/Helpers\/CaptureHelper.html"," < ","CaptureHelper exposes methods to let you extract generated markup which can be used in other parts of",1],["ClassMethods","ActionView::Helpers","classes.html\/ActionView\/Helpers\/ClassMethods.html"," < ","",1],["DateHelper","ActionView::Helpers","classes.html\/ActionView\/Helpers\/DateHelper.html"," < ","The Date Helper primarily creates select\/option tags for different kinds of dates and date elements.",1],["DebugHelper","ActionView::Helpers","classes.html\/ActionView\/Helpers\/DebugHelper.html"," < ","Provides a set of methods for making it easier to debug Rails objects. ",1],["FormHelper","ActionView::Helpers","classes.html\/ActionView\/Helpers\/FormHelper.html"," < ","Form helpers are designed to make working with models much easier compared to using just standard HTML",1],["FormOptionsHelper","ActionView::Helpers","classes.html\/ActionView\/Helpers\/FormOptionsHelper.html"," < ","Provides a number of methods for turning different kinds of containers into a set of option tags. ==",1],["FormTagHelper","ActionView::Helpers","classes.html\/ActionView\/Helpers\/FormTagHelper.html"," < ","Provides a number of methods for creating form tags that doesn't rely on an Active Record object assigned",1],["JavaScriptHelper","ActionView::Helpers","classes.html\/ActionView\/Helpers\/JavaScriptHelper.html"," < ","Provides functionality for working with JavaScript in your views. == Ajax, controls and visual effects",1],["NumberHelper","ActionView::Helpers","classes.html\/ActionView\/Helpers\/NumberHelper.html"," < ","Provides methods for converting numbers into formatted strings. Methods are provided for phone numbers,",1],["PrototypeHelper","ActionView::Helpers","classes.html\/ActionView\/Helpers\/PrototypeHelper.html"," < ","Prototype[http:\/\/www.prototypejs.org\/] is a JavaScript library that provides DOM[http:\/\/en.wikipedia.org\/wiki\/Document_Object_Model]",1],["GeneratorMethods","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator","classes.html\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html"," < ","JavaScriptGenerator generates blocks of JavaScript code that allow you to change the content and presentation",1],["RawOutputHelper","ActionView::Helpers","classes.html\/ActionView\/Helpers\/RawOutputHelper.html"," < ","",1],["RecordIdentificationHelper","ActionView::Helpers","classes.html\/ActionView\/Helpers\/RecordIdentificationHelper.html"," < ","",1],["RecordTagHelper","ActionView::Helpers","classes.html\/ActionView\/Helpers\/RecordTagHelper.html"," < ","",1],["SanitizeHelper","ActionView::Helpers","classes.html\/ActionView\/Helpers\/SanitizeHelper.html"," < ","The SanitizeHelper module provides a set of methods for scrubbing text of undesired HTML elements. These",1],["ScriptaculousHelper","ActionView::Helpers","classes.html\/ActionView\/Helpers\/ScriptaculousHelper.html"," < ","Provides a set of helpers for calling Scriptaculous JavaScript  functions, including those which create",1],["TagHelper","ActionView::Helpers","classes.html\/ActionView\/Helpers\/TagHelper.html"," < ","Provides methods to generate HTML tags programmatically when you can't use a Builder. By default, they",1],["TextHelper","ActionView::Helpers","classes.html\/ActionView\/Helpers\/TextHelper.html"," < ","The TextHelper module provides a set of methods for filtering, formatting and transforming strings, which",1],["TranslationHelper","ActionView::Helpers","classes.html\/ActionView\/Helpers\/TranslationHelper.html"," < ","",1],["UrlHelper","ActionView::Helpers","classes.html\/ActionView\/Helpers\/UrlHelper.html"," < ","Provides a set of methods for making links and getting URLs that depend on the routing subsystem (see",1],["Partials","ActionView","classes.html\/ActionView\/Partials.html"," < ","There's also a convenience method for rendering sub templates within the current controller that depends",1],["ReloadableTemplate","ActionView","classes.html\/ActionView\/ReloadableTemplate.html"," < Template","",1],["ReloadablePath","ActionView::ReloadableTemplate","classes.html\/ActionView\/ReloadableTemplate\/ReloadablePath.html"," < Template::Path","",1],["TemplateDeleted","ActionView::ReloadableTemplate","classes.html\/ActionView\/ReloadableTemplate\/TemplateDeleted.html"," < ActionView::ActionViewError","",1],["Unfreezable","ActionView::ReloadableTemplate","classes.html\/ActionView\/ReloadableTemplate\/Unfreezable.html"," < ","",1],["Template","ActionView","classes.html\/ActionView\/Template.html"," < Object","",1],["EagerPath","ActionView::Template","classes.html\/ActionView\/Template\/EagerPath.html"," < Path","",1],["Path","ActionView::Template","classes.html\/ActionView\/Template\/Path.html"," < Object","",1],["TemplateHandler","ActionView","classes.html\/ActionView\/TemplateHandler.html"," < Object","",1],["Builder","ActionView::TemplateHandlers","classes.html\/ActionView\/TemplateHandlers\/Builder.html"," < TemplateHandler","",1],["Compilable","ActionView::TemplateHandlers","classes.html\/ActionView\/TemplateHandlers\/Compilable.html"," < ","",1],["ClassMethods","ActionView::TemplateHandlers::Compilable","classes.html\/ActionView\/TemplateHandlers\/Compilable\/ClassMethods.html"," < ","",1],["ERB","ActionView::TemplateHandlers","classes.html\/ActionView\/TemplateHandlers\/ERB.html"," < TemplateHandler","",1],["RJS","ActionView::TemplateHandlers","classes.html\/ActionView\/TemplateHandlers\/RJS.html"," < TemplateHandler","",1],["TestCase","ActionView","classes.html\/ActionView\/TestCase.html"," < ActiveSupport::TestCase","",1],["TestController","ActionView::TestCase","classes.html\/ActionView\/TestCase\/TestController.html"," < ActionController::Base","",1],["ActiveRecordError","ActiveRecord","classes.html\/ActiveRecord\/ActiveRecordError.html"," < StandardError","Generic Active Record exception class. ",1],["AdapterNotFound","ActiveRecord","classes.html\/ActiveRecord\/AdapterNotFound.html"," < ActiveRecordError","Raised when Active Record cannot find database adapter specified in <tt>config\/database.yml<\/tt> or programmatically.",1],["AdapterNotSpecified","ActiveRecord","classes.html\/ActiveRecord\/AdapterNotSpecified.html"," < ActiveRecordError","Raised when adapter not specified on connection (or configuration file <tt>config\/database.yml<\/tt> misses",1],["ClassMethods","ActiveRecord::Aggregations","classes.html\/ActiveRecord\/Aggregations\/ClassMethods.html"," < ","Active Record implements aggregation through a macro-like class method called +composed_of+ for representing",1],["ClassMethods","ActiveRecord::AssociationPreload","classes.html\/ActiveRecord\/AssociationPreload\/ClassMethods.html"," < ","Implements the details of eager loading of ActiveRecord associations. Application developers should not",1],["AssociationTypeMismatch","ActiveRecord","classes.html\/ActiveRecord\/AssociationTypeMismatch.html"," < ActiveRecordError","Raised when an object assigned to an association has an incorrect type. class Ticket < ActiveRecord::Base",1],["ClassMethods","ActiveRecord::Associations","classes.html\/ActiveRecord\/Associations\/ClassMethods.html"," < ","Associations are a set of macro-like class methods for tying objects together through foreign keys. They",1],["InnerJoinAssociation","ActiveRecord::Associations::ClassMethods::InnerJoinDependency","classes.html\/ActiveRecord\/Associations\/ClassMethods\/InnerJoinDependency\/InnerJoinAssociation.html"," < JoinAssociation","",1],["HasOneThroughAssociation","ActiveRecord::Associations","classes.html\/ActiveRecord\/Associations\/HasOneThroughAssociation.html"," < HasManyThroughAssociation","",1],["AttributeAssignmentError","ActiveRecord","classes.html\/ActiveRecord\/AttributeAssignmentError.html"," < ActiveRecordError","Raised when an error occurred while doing a mass assignment to an attribute through the <tt>attributes=<\/tt>",1],["ClassMethods","ActiveRecord::AttributeMethods","classes.html\/ActiveRecord\/AttributeMethods\/ClassMethods.html"," < ","Declare and check for suffixed attribute methods. ",1],["AutosaveAssociation","ActiveRecord","classes.html\/ActiveRecord\/AutosaveAssociation.html"," < ","AutosaveAssociation is a module that takes care of automatically saving your associations when the parent",1],["ClassMethods","ActiveRecord::AutosaveAssociation","classes.html\/ActiveRecord\/AutosaveAssociation\/ClassMethods.html"," < ","",1],["Base","ActiveRecord","classes.html\/ActiveRecord\/Base.html"," < Object","Active Record objects don't specify their attributes directly, but rather infer them from the table definition",1],["ClassMethods","ActiveRecord::Batches","classes.html\/ActiveRecord\/Batches\/ClassMethods.html"," < ","When processing large numbers of records, it's often a good idea to do so in batches to prevent memory",1],["ClassMethods","ActiveRecord::Calculations","classes.html\/ActiveRecord\/Calculations\/ClassMethods.html"," < ","",1],["Callbacks","ActiveRecord","classes.html\/ActiveRecord\/Callbacks.html"," < ","Callbacks are hooks into the lifecycle of an Active Record object that allow you to trigger logic before",1],["ConfigurationError","ActiveRecord","classes.html\/ActiveRecord\/ConfigurationError.html"," < ActiveRecordError","Raised when association is being configured improperly or user tries to use offset and limit together",1],["AbstractAdapter","ActiveRecord::ConnectionAdapters","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html"," < Object","ActiveRecord supports multiple database systems. AbstractAdapter and related classes form the abstraction",1],["Column","ActiveRecord::ConnectionAdapters","classes.html\/ActiveRecord\/ConnectionAdapters\/Column.html"," < Object","An abstract definition of a column in a table. ",1],["Format","ActiveRecord::ConnectionAdapters::Column","classes.html\/ActiveRecord\/ConnectionAdapters\/Column\/Format.html"," < ","",1],["ConnectionHandler","ActiveRecord::ConnectionAdapters","classes.html\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html"," < Object","ConnectionHandler is a collection of ConnectionPool objects. It is used for keeping separate connection",1],["ConnectionManagement","ActiveRecord::ConnectionAdapters","classes.html\/ActiveRecord\/ConnectionAdapters\/ConnectionManagement.html"," < Object","",1],["ConnectionPool","ActiveRecord::ConnectionAdapters","classes.html\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html"," < Object","Connection pool base class for managing ActiveRecord database connections. == Introduction A connection",1],["DatabaseLimits","ActiveRecord::ConnectionAdapters","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html"," < ","",1],["DatabaseStatements","ActiveRecord::ConnectionAdapters","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html"," < ","",1],["MysqlAdapter","ActiveRecord::ConnectionAdapters","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html"," < AbstractAdapter","The MySQL adapter will work with both Ruby\/MySQL, which is a Ruby-based MySQL adapter that comes bundled",1],["PostgreSQLAdapter","ActiveRecord::ConnectionAdapters","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html"," < AbstractAdapter","The PostgreSQL adapter works both with the native C (http:\/\/ruby.scripting.ca\/postgres\/) and the pure",1],["QueryCache","ActiveRecord::ConnectionAdapters","classes.html\/ActiveRecord\/ConnectionAdapters\/QueryCache.html"," < ","",1],["Quoting","ActiveRecord::ConnectionAdapters","classes.html\/ActiveRecord\/ConnectionAdapters\/Quoting.html"," < ","",1],["SQLiteAdapter","ActiveRecord::ConnectionAdapters","classes.html\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html"," < AbstractAdapter","The SQLite adapter works with both the 2.x and 3.x series of SQLite with the sqlite-ruby drivers (available",1],["Version","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter\/Version.html"," < Object","",1],["SchemaStatements","ActiveRecord::ConnectionAdapters","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html"," < ","",1],["Table","ActiveRecord::ConnectionAdapters","classes.html\/ActiveRecord\/ConnectionAdapters\/Table.html"," < Object","Represents a SQL table in an abstract way for updating a table. Also see TableDefinition and SchemaStatements#create_table",1],["TableDefinition","ActiveRecord::ConnectionAdapters","classes.html\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html"," < Object","Represents the schema of an SQL table in an abstract way. This class provides methods for manipulating",1],["ConnectionNotEstablished","ActiveRecord","classes.html\/ActiveRecord\/ConnectionNotEstablished.html"," < ActiveRecordError","Raised when connection to the database could not been established (for example when <tt>connection=<\/tt>",1],["ConnectionTimeoutError","ActiveRecord","classes.html\/ActiveRecord\/ConnectionTimeoutError.html"," < ConnectionNotEstablished","Raised when a connection could not be obtained within the connection acquisition timeout period. ",1],["DangerousAttributeError","ActiveRecord","classes.html\/ActiveRecord\/DangerousAttributeError.html"," < ActiveRecordError","Raised when attribute has a name reserved by Active Record (when attribute has name of one of Active",1],["Dirty","ActiveRecord","classes.html\/ActiveRecord\/Dirty.html"," < ","Track unsaved attribute changes. A newly instantiated object is unchanged: person = Person.find_by_name('uncle",1],["ClassMethods","ActiveRecord::Dirty","classes.html\/ActiveRecord\/Dirty\/ClassMethods.html"," < ","",1],["DynamicFinderMatch","ActiveRecord","classes.html\/ActiveRecord\/DynamicFinderMatch.html"," < Object","",1],["DynamicScopeMatch","ActiveRecord","classes.html\/ActiveRecord\/DynamicScopeMatch.html"," < Object","",1],["Error","ActiveRecord","classes.html\/ActiveRecord\/Error.html"," < Object","",1],["Errors","ActiveRecord","classes.html\/ActiveRecord\/Errors.html"," < Object","Active Record validation is reported to and from this object, which is used by Base#save to determine",1],["Locking","ActiveRecord","classes.html\/ActiveRecord\/Locking.html"," < ","",1],["Optimistic","ActiveRecord::Locking","classes.html\/ActiveRecord\/Locking\/Optimistic.html"," < ","== What is Optimistic Locking Optimistic locking allows multiple users to access the same record for",1],["ClassMethods","ActiveRecord::Locking::Optimistic","classes.html\/ActiveRecord\/Locking\/Optimistic\/ClassMethods.html"," < ","",1],["Pessimistic","ActiveRecord::Locking","classes.html\/ActiveRecord\/Locking\/Pessimistic.html"," < ","Locking::Pessimistic provides support for row-level locking using SELECT ... FOR UPDATE and other lock",1],["Migration","ActiveRecord","classes.html\/ActiveRecord\/Migration.html"," < Object","Migrations can manage the evolution of a schema used by several physical databases. It's a solution to",1],["MigrationProxy","ActiveRecord","classes.html\/ActiveRecord\/MigrationProxy.html"," < Object","MigrationProxy is used to defer loading of the actual migration classes until they are needed ",1],["MissingAttributeError","ActiveRecord","classes.html\/ActiveRecord\/MissingAttributeError.html"," < NoMethodError","Raised when you've tried to access a column which wasn't loaded by your finder. Typically this is because",1],["MultiparameterAssignmentErrors","ActiveRecord","classes.html\/ActiveRecord\/MultiparameterAssignmentErrors.html"," < ActiveRecordError","Raised when there are multiple errors while doing a mass assignment through the +attributes+ method.",1],["NamedScope","ActiveRecord","classes.html\/ActiveRecord\/NamedScope.html"," < ","",1],["ClassMethods","ActiveRecord::NamedScope","classes.html\/ActiveRecord\/NamedScope\/ClassMethods.html"," < ","",1],["Scope","ActiveRecord::NamedScope","classes.html\/ActiveRecord\/NamedScope\/Scope.html"," < Object","",1],["ClassMethods","ActiveRecord::NestedAttributes","classes.html\/ActiveRecord\/NestedAttributes\/ClassMethods.html"," < ","== Nested Attributes Nested attributes allow you to save attributes on associated records through the",1],["TooManyRecords","ActiveRecord::NestedAttributes","classes.html\/ActiveRecord\/NestedAttributes\/TooManyRecords.html"," < ActiveRecordError","",1],["Observer","ActiveRecord","classes.html\/ActiveRecord\/Observer.html"," < Object","Observer classes respond to lifecycle callbacks to implement trigger-like behavior outside the original",1],["ClassMethods","ActiveRecord::Observing","classes.html\/ActiveRecord\/Observing\/ClassMethods.html"," < ","",1],["PreparedStatementInvalid","ActiveRecord","classes.html\/ActiveRecord\/PreparedStatementInvalid.html"," < ActiveRecordError","Raised when number of bind variables in statement given to <tt>:condition<\/tt> key (for example, when",1],["QueryCache","ActiveRecord","classes.html\/ActiveRecord\/QueryCache.html"," < Object","",1],["ClassMethods","ActiveRecord::QueryCache","classes.html\/ActiveRecord\/QueryCache\/ClassMethods.html"," < ","",1],["ReadOnlyRecord","ActiveRecord","classes.html\/ActiveRecord\/ReadOnlyRecord.html"," < ActiveRecordError","Raised on attempt to update record that is instantiated as read only. ",1],["RecordInvalid","ActiveRecord","classes.html\/ActiveRecord\/RecordInvalid.html"," < ActiveRecordError","Raised by <tt>save!<\/tt> and <tt>create!<\/tt> when the record is invalid.  Use the +record+ method to",1],["RecordNotFound","ActiveRecord","classes.html\/ActiveRecord\/RecordNotFound.html"," < ActiveRecordError","Raised when Active Record cannot find record by given id or set of ids. ",1],["RecordNotSaved","ActiveRecord","classes.html\/ActiveRecord\/RecordNotSaved.html"," < ActiveRecordError","Raised by ActiveRecord::Base.save! and ActiveRecord::Base.create! methods when record cannot be saved",1],["ClassMethods","ActiveRecord::Reflection","classes.html\/ActiveRecord\/Reflection\/ClassMethods.html"," < ","Reflection allows you to interrogate Active Record classes and objects about their associations and aggregations.",1],["MacroReflection","ActiveRecord::Reflection","classes.html\/ActiveRecord\/Reflection\/MacroReflection.html"," < Object","Abstract base class for AggregateReflection and AssociationReflection that describes the interface available",1],["Rollback","ActiveRecord","classes.html\/ActiveRecord\/Rollback.html"," < ActiveRecordError","ActiveRecord::Transactions::ClassMethods.transaction uses this exception to distinguish a deliberate",1],["Schema","ActiveRecord","classes.html\/ActiveRecord\/Schema.html"," < Migration","Allows programmers to programmatically define a schema in a portable DSL. This means you can define tables,",1],["Serialization","ActiveRecord","classes.html\/ActiveRecord\/Serialization.html"," < ","",1],["SerializationTypeMismatch","ActiveRecord","classes.html\/ActiveRecord\/SerializationTypeMismatch.html"," < ActiveRecordError","Raised when unserialized object's type mismatches one specified for serializable field. ",1],["SessionStore","ActiveRecord","classes.html\/ActiveRecord\/SessionStore.html"," < ActionController::Session::AbstractStore","A session store backed by an Active Record class.  A default class is provided, but any object duck-typing",1],["Session","ActiveRecord::SessionStore","classes.html\/ActiveRecord\/SessionStore\/Session.html"," < ActiveRecord::Base","The default Active Record class. ",1],["SqlBypass","ActiveRecord::SessionStore","classes.html\/ActiveRecord\/SessionStore\/SqlBypass.html"," < Object","A barebones session store which duck-types with the default session store but bypasses Active Record",1],["StaleObjectError","ActiveRecord","classes.html\/ActiveRecord\/StaleObjectError.html"," < ActiveRecordError","Raised on attempt to save stale record. Record is stale when it's being saved in another query after",1],["StatementInvalid","ActiveRecord","classes.html\/ActiveRecord\/StatementInvalid.html"," < ActiveRecordError","Raised when SQL statement cannot be executed by the database (for example, it's often the case for MySQL",1],["TestFixtures","ActiveRecord","classes.html\/ActiveRecord\/TestFixtures.html"," < ","",1],["ClassMethods","ActiveRecord::TestFixtures","classes.html\/ActiveRecord\/TestFixtures\/ClassMethods.html"," < ","",1],["Timestamp","ActiveRecord","classes.html\/ActiveRecord\/Timestamp.html"," < ","Active Record automatically timestamps create and update operations if the table has fields named created_at\/created_on",1],["Transactions","ActiveRecord","classes.html\/ActiveRecord\/Transactions.html"," < ","See ActiveRecord::Transactions::ClassMethods for documentation. ",1],["ClassMethods","ActiveRecord::Transactions","classes.html\/ActiveRecord\/Transactions\/ClassMethods.html"," < ","Transactions are protective blocks where SQL statements are only permanent if they can all succeed as",1],["UnknownAttributeError","ActiveRecord","classes.html\/ActiveRecord\/UnknownAttributeError.html"," < NoMethodError","Raised when unknown attributes are supplied via mass assignment. ",1],["Validations","ActiveRecord","classes.html\/ActiveRecord\/Validations.html"," < ","Please do have a look at ActiveRecord::Validations::ClassMethods for a higher level of validations. Active",1],["ClassMethods","ActiveRecord::Validations","classes.html\/ActiveRecord\/Validations\/ClassMethods.html"," < ","Active Record classes can implement validations in several ways. The highest level, easiest to read,",1],["ActiveResource","activeresource\/lib\/active_resource\/http_mock.rb","classes.html\/ActiveResource.html"," < ","",1],["BadRequest","ActiveResource","classes.html\/ActiveResource\/BadRequest.html"," < ClientError","400 Bad Request ",1],["Base","ActiveResource","classes.html\/ActiveResource\/Base.html"," < Object","ActiveResource::Base is the main class for mapping RESTful resources as models in a Rails application.",1],["ClientError","ActiveResource","classes.html\/ActiveResource\/ClientError.html"," < ConnectionError","4xx Client Error ",1],["Connection","ActiveResource","classes.html\/ActiveResource\/Connection.html"," < Object","Class to handle connections to remote web services. This class is used by ActiveResource::Base to interface",1],["CustomMethods","ActiveResource","classes.html\/ActiveResource\/CustomMethods.html"," < ","A module to support custom REST methods and sub-resources, allowing you to break out of the \"default\"",1],["ClassMethods","ActiveResource::CustomMethods","classes.html\/ActiveResource\/CustomMethods\/ClassMethods.html"," < ","",1],["InstanceMethods","ActiveResource::CustomMethods","classes.html\/ActiveResource\/CustomMethods\/InstanceMethods.html"," < ","",1],["Errors","ActiveResource","classes.html\/ActiveResource\/Errors.html"," < Object","Active Resource validation is reported to and from this object, which is used by Base#save to determine",1],["ForbiddenAccess","ActiveResource","classes.html\/ActiveResource\/ForbiddenAccess.html"," < ClientError","403 Forbidden ",1],["Formats","ActiveResource","classes.html\/ActiveResource\/Formats.html"," < ","",1],["JsonFormat","ActiveResource::Formats","classes.html\/ActiveResource\/Formats\/JsonFormat.html"," < ","",1],["XmlFormat","ActiveResource::Formats","classes.html\/ActiveResource\/Formats\/XmlFormat.html"," < ","",1],["HttpMock","ActiveResource","classes.html\/ActiveResource\/HttpMock.html"," < Object","One thing that has always been a pain with remote web services is testing.  The HttpMock class makes",1],["InvalidRequestError","ActiveResource","classes.html\/ActiveResource\/InvalidRequestError.html"," < StandardError","",1],["Request","ActiveResource","classes.html\/ActiveResource\/Request.html"," < Object","",1],["ResourceConflict","ActiveResource","classes.html\/ActiveResource\/ResourceConflict.html"," < ClientError","409 Conflict ",1],["ResourceGone","ActiveResource","classes.html\/ActiveResource\/ResourceGone.html"," < ClientError","410 Gone ",1],["ResourceNotFound","ActiveResource","classes.html\/ActiveResource\/ResourceNotFound.html"," < ClientError","404 Not Found ",1],["Response","ActiveResource","classes.html\/ActiveResource\/Response.html"," < Object","",1],["SSLError","ActiveResource","classes.html\/ActiveResource\/SSLError.html"," < ConnectionError","Raised when a OpenSSL::SSL::SSLError occurs. ",1],["ServerError","ActiveResource","classes.html\/ActiveResource\/ServerError.html"," < ConnectionError","5xx Server Error ",1],["TimeoutError","ActiveResource","classes.html\/ActiveResource\/TimeoutError.html"," < ConnectionError","Raised when a Timeout::Error occurs. ",1],["UnauthorizedAccess","ActiveResource","classes.html\/ActiveResource\/UnauthorizedAccess.html"," < ClientError","401 Unauthorized ",1],["Validations","ActiveResource","classes.html\/ActiveResource\/Validations.html"," < ","Module to support validation and errors with Active Resource objects. The module overrides Base#save",1],["BacktraceCleaner","ActiveSupport","classes.html\/ActiveSupport\/BacktraceCleaner.html"," < Object","Many backtraces include too much information that's not relevant for the context. This makes it hard",1],["Base64","ActiveSupport","classes.html\/ActiveSupport\/Base64.html"," < ","Base64 provides utility methods for encoding and de-coding binary data  using a base 64 representation.",1],["BasicObject","ActiveSupport","classes.html\/ActiveSupport\/BasicObject.html"," < ::BasicObject","",1],["BufferedLogger","ActiveSupport","classes.html\/ActiveSupport\/BufferedLogger.html"," < Object","Inspired by the buffered logger idea by Ezra ",1],["Severity","ActiveSupport::BufferedLogger","classes.html\/ActiveSupport\/BufferedLogger\/Severity.html"," < ","",1],["Cache","ActiveSupport","classes.html\/ActiveSupport\/Cache.html"," < ","See ActiveSupport::Cache::Store for documentation. ",1],["CompressedMemCacheStore","ActiveSupport::Cache","classes.html\/ActiveSupport\/Cache\/CompressedMemCacheStore.html"," < MemCacheStore","",1],["FileStore","ActiveSupport::Cache","classes.html\/ActiveSupport\/Cache\/FileStore.html"," < Store","A cache store implementation which stores everything on the filesystem. ",1],["MemCacheStore","ActiveSupport::Cache","classes.html\/ActiveSupport\/Cache\/MemCacheStore.html"," < Store","A cache store implementation which stores data in Memcached: http:\/\/www.danga.com\/memcached\/ This is",1],["MemoryStore","ActiveSupport::Cache","classes.html\/ActiveSupport\/Cache\/MemoryStore.html"," < Store","A cache store implementation which stores everything into memory in the same process. If you're running",1],["Store","ActiveSupport::Cache","classes.html\/ActiveSupport\/Cache\/Store.html"," < Object","An abstract cache store class. There are multiple cache store implementations, each having its own additional",1],["Strategy","ActiveSupport::Cache","classes.html\/ActiveSupport\/Cache\/Strategy.html"," < ","",1],["LocalCache","ActiveSupport::Cache::Strategy","classes.html\/ActiveSupport\/Cache\/Strategy\/LocalCache.html"," < ","",1],["SynchronizedMemoryStore","ActiveSupport::Cache","classes.html\/ActiveSupport\/Cache\/SynchronizedMemoryStore.html"," < MemoryStore","Like MemoryStore, but thread-safe. ",1],["Callbacks","ActiveSupport","classes.html\/ActiveSupport\/Callbacks.html"," < ","Callbacks are hooks into the lifecycle of an object that allow you to trigger logic before or after an",1],["Callback","ActiveSupport::Callbacks","classes.html\/ActiveSupport\/Callbacks\/Callback.html"," < Object","",1],["CallbackChain","ActiveSupport::Callbacks","classes.html\/ActiveSupport\/Callbacks\/CallbackChain.html"," < Array","",1],["ClassMethods","ActiveSupport::Callbacks","classes.html\/ActiveSupport\/Callbacks\/ClassMethods.html"," < ","",1],["Access","ActiveSupport::CoreExtensions::Array","classes.html\/ActiveSupport\/CoreExtensions\/Array\/Access.html"," < ","Makes it easier to access parts of an array. ",1],["Conversions","ActiveSupport::CoreExtensions::Array","classes.html\/ActiveSupport\/CoreExtensions\/Array\/Conversions.html"," < ","",1],["ExtractOptions","ActiveSupport::CoreExtensions::Array","classes.html\/ActiveSupport\/CoreExtensions\/Array\/ExtractOptions.html"," < ","",1],["Grouping","ActiveSupport::CoreExtensions::Array","classes.html\/ActiveSupport\/CoreExtensions\/Array\/Grouping.html"," < ","",1],["RandomAccess","ActiveSupport::CoreExtensions::Array","classes.html\/ActiveSupport\/CoreExtensions\/Array\/RandomAccess.html"," < ","",1],["Wrapper","ActiveSupport::CoreExtensions::Array","classes.html\/ActiveSupport\/CoreExtensions\/Array\/Wrapper.html"," < ","",1],["Encoding","ActiveSupport::CoreExtensions::Base64","classes.html\/ActiveSupport\/CoreExtensions\/Base64\/Encoding.html"," < ","",1],["Conversions","ActiveSupport::CoreExtensions::BigDecimal","classes.html\/ActiveSupport\/CoreExtensions\/BigDecimal\/Conversions.html"," < ","",1],["Behavior","ActiveSupport::CoreExtensions::Date","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Behavior.html"," < ","",1],["Calculations","ActiveSupport::CoreExtensions::Date","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html"," < ","Enables the use of time calculations within Date itself ",1],["ClassMethods","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations\/ClassMethods.html"," < ","",1],["Conversions","ActiveSupport::CoreExtensions::Date","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Conversions.html"," < ","Converting dates to formatted strings, times, and datetimes. ",1],["Calculations","ActiveSupport::CoreExtensions::DateTime","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Calculations.html"," < ","Enables the use of time calculations within DateTime itself ",1],["ClassMethods","ActiveSupport::CoreExtensions::DateTime::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Calculations\/ClassMethods.html"," < ","",1],["Conversions","ActiveSupport::CoreExtensions::DateTime","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Conversions.html"," < ","Converting datetimes to formatted strings, dates, and times. ",1],["Atomic","ActiveSupport::CoreExtensions::File","classes.html\/ActiveSupport\/CoreExtensions\/File\/Atomic.html"," < ","",1],["Rounding","ActiveSupport::CoreExtensions::Float","classes.html\/ActiveSupport\/CoreExtensions\/Float\/Rounding.html"," < ","",1],["Time","ActiveSupport::CoreExtensions::Float","classes.html\/ActiveSupport\/CoreExtensions\/Float\/Time.html"," < ","",1],["ClassMethods","ActiveSupport::CoreExtensions::Hash","classes.html\/ActiveSupport\/CoreExtensions\/Hash\/ClassMethods.html"," < ","",1],["Conversions","ActiveSupport::CoreExtensions::Hash","classes.html\/ActiveSupport\/CoreExtensions\/Hash\/Conversions.html"," < ","",1],["DeepMerge","ActiveSupport::CoreExtensions::Hash","classes.html\/ActiveSupport\/CoreExtensions\/Hash\/DeepMerge.html"," < ","Allows for deep merging ",1],["Diff","ActiveSupport::CoreExtensions::Hash","classes.html\/ActiveSupport\/CoreExtensions\/Hash\/Diff.html"," < ","",1],["Except","ActiveSupport::CoreExtensions::Hash","classes.html\/ActiveSupport\/CoreExtensions\/Hash\/Except.html"," < ","Return a hash that includes everything but the given keys. This is useful for limiting a set of parameters",1],["Keys","ActiveSupport::CoreExtensions::Hash","classes.html\/ActiveSupport\/CoreExtensions\/Hash\/Keys.html"," < ","",1],["ReverseMerge","ActiveSupport::CoreExtensions::Hash","classes.html\/ActiveSupport\/CoreExtensions\/Hash\/ReverseMerge.html"," < ","Allows for reverse merging two hashes where the keys in the calling hash take precedence over those in",1],["Slice","ActiveSupport::CoreExtensions::Hash","classes.html\/ActiveSupport\/CoreExtensions\/Hash\/Slice.html"," < ","Slice a hash to include only the given keys. This is useful for limiting an options hash to valid keys",1],["EvenOdd","ActiveSupport::CoreExtensions::Integer","classes.html\/ActiveSupport\/CoreExtensions\/Integer\/EvenOdd.html"," < ","For checking if a fixnum is even or odd. 2.even?  # => true 2.odd?   # => false 1.even?  # => false 1.odd?",1],["Inflections","ActiveSupport::CoreExtensions::Integer","classes.html\/ActiveSupport\/CoreExtensions\/Integer\/Inflections.html"," < ","",1],["Time","ActiveSupport::CoreExtensions::Integer","classes.html\/ActiveSupport\/CoreExtensions\/Integer\/Time.html"," < ","Enables the use of time calculations and declarations, like 45.minutes + 2.hours + 4.years. These methods",1],["Module","ActiveSupport::CoreExtensions","classes.html\/ActiveSupport\/CoreExtensions\/Module.html"," < ","Various extensions for the Ruby core Module class. ",1],["Bytes","ActiveSupport::CoreExtensions::Numeric","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Bytes.html"," < ","Enables the use of byte calculations and declarations, like 45.bytes + 2.6.megabytes ",1],["Conversions","ActiveSupport::CoreExtensions::Numeric","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Conversions.html"," < ","",1],["Time","ActiveSupport::CoreExtensions::Numeric","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Time.html"," < ","Enables the use of time calculations and declarations, like 45.minutes + 2.hours + 4.years. These methods",1],["CleanWithin","ActiveSupport::CoreExtensions::Pathname","classes.html\/ActiveSupport\/CoreExtensions\/Pathname\/CleanWithin.html"," < ","",1],["BlocklessStep","ActiveSupport::CoreExtensions::Range","classes.html\/ActiveSupport\/CoreExtensions\/Range\/BlocklessStep.html"," < ","Return an array when step is called without a block. ",1],["Conversions","ActiveSupport::CoreExtensions::Range","classes.html\/ActiveSupport\/CoreExtensions\/Range\/Conversions.html"," < ","Getting ranges in different convenient string representations and other objects ",1],["IncludeRange","ActiveSupport::CoreExtensions::Range","classes.html\/ActiveSupport\/CoreExtensions\/Range\/IncludeRange.html"," < ","Check if a Range includes another Range. ",1],["Overlaps","ActiveSupport::CoreExtensions::Range","classes.html\/ActiveSupport\/CoreExtensions\/Range\/Overlaps.html"," < ","Check if Ranges overlap. ",1],["Behavior","ActiveSupport::CoreExtensions::String","classes.html\/ActiveSupport\/CoreExtensions\/String\/Behavior.html"," < ","",1],["Conversions","ActiveSupport::CoreExtensions::String","classes.html\/ActiveSupport\/CoreExtensions\/String\/Conversions.html"," < ","Converting strings to other objects ",1],["Filters","ActiveSupport::CoreExtensions::String","classes.html\/ActiveSupport\/CoreExtensions\/String\/Filters.html"," < ","",1],["Inflections","ActiveSupport::CoreExtensions::String","classes.html\/ActiveSupport\/CoreExtensions\/String\/Inflections.html"," < ","String inflections define new methods on the String class to transform names for different purposes.",1],["Iterators","ActiveSupport::CoreExtensions::String","classes.html\/ActiveSupport\/CoreExtensions\/String\/Iterators.html"," < ","Custom string iterators ",1],["Multibyte","ActiveSupport::CoreExtensions::String","classes.html\/ActiveSupport\/CoreExtensions\/String\/Multibyte.html"," < ","Implements multibyte methods for easier access to multibyte characters in a String instance. ",1],["StartsEndsWith","ActiveSupport::CoreExtensions::String","classes.html\/ActiveSupport\/CoreExtensions\/String\/StartsEndsWith.html"," < ","Additional string tests. ",1],["Behavior","ActiveSupport::CoreExtensions::Time","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Behavior.html"," < ","",1],["Calculations","ActiveSupport::CoreExtensions::Time","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html"," < ","Enables the use of time calculations within Time itself ",1],["ClassMethods","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations\/ClassMethods.html"," < ","",1],["Conversions","ActiveSupport::CoreExtensions::Time","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Conversions.html"," < ","Converting times to formatted strings, dates, and datetimes. ",1],["Zones","ActiveSupport::CoreExtensions::Time","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Zones.html"," < ","",1],["ClassMethods","ActiveSupport::CoreExtensions::Time::Zones","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Zones\/ClassMethods.html"," < ","",1],["DeprecatedObjectProxy","ActiveSupport::Deprecation","classes.html\/ActiveSupport\/Deprecation\/DeprecatedObjectProxy.html"," < DeprecationProxy","",1],["Duration","ActiveSupport","classes.html\/ActiveSupport\/Duration.html"," < BasicObject","Provides accurate date and time measurements using Date#advance and  Time#advance, respectively. It mainly",1],["Gzip","ActiveSupport","classes.html\/ActiveSupport\/Gzip.html"," < ","A convenient wrapper for the zlib standard library that allows compression\/decompression of strings with",1],["Stream","ActiveSupport::Gzip","classes.html\/ActiveSupport\/Gzip\/Stream.html"," < StringIO","",1],["Inflector","ActiveSupport","classes.html\/ActiveSupport\/Inflector.html"," < ","The Inflector transforms words from singular to plural, class names to table names, modularized class",1],["Inflections","ActiveSupport::Inflector","classes.html\/ActiveSupport\/Inflector\/Inflections.html"," < Object","A singleton instance of this class is yielded by Inflector.inflections, which can then be used to specify",1],["JSON","ActiveSupport","classes.html\/ActiveSupport\/JSON.html"," < ","",1],["Backends","ActiveSupport::JSON","classes.html\/ActiveSupport\/JSON\/Backends.html"," < ","",1],["JSONGem","ActiveSupport::JSON::Backends","classes.html\/ActiveSupport\/JSON\/Backends\/JSONGem.html"," < ","",1],["Yajl","ActiveSupport::JSON::Backends","classes.html\/ActiveSupport\/JSON\/Backends\/Yajl.html"," < ","",1],["Yaml","ActiveSupport::JSON::Backends","classes.html\/ActiveSupport\/JSON\/Backends\/Yaml.html"," < ","",1],["CircularReferenceError","ActiveSupport::JSON::Encoding","classes.html\/ActiveSupport\/JSON\/Encoding\/CircularReferenceError.html"," < StandardError","",1],["Variable","ActiveSupport::JSON","classes.html\/ActiveSupport\/JSON\/Variable.html"," < String","A string that returns itself as its JSON-encoded form. ",1],["Memoizable","ActiveSupport","classes.html\/ActiveSupport\/Memoizable.html"," < ","",1],["InstanceMethods","ActiveSupport::Memoizable","classes.html\/ActiveSupport\/Memoizable\/InstanceMethods.html"," < ","",1],["MessageEncryptor","ActiveSupport","classes.html\/ActiveSupport\/MessageEncryptor.html"," < Object","MessageEncryptor is a simple way to encrypt values which get stored somewhere  you don't trust. The cipher",1],["InvalidMessage","ActiveSupport::MessageEncryptor","classes.html\/ActiveSupport\/MessageEncryptor\/InvalidMessage.html"," < StandardError","",1],["MessageVerifier","ActiveSupport","classes.html\/ActiveSupport\/MessageVerifier.html"," < Object","MessageVerifier makes it easy to generate and verify messages which are signed to prevent tampering.",1],["InvalidSignature","ActiveSupport::MessageVerifier","classes.html\/ActiveSupport\/MessageVerifier\/InvalidSignature.html"," < StandardError","",1],["ModelName","ActiveSupport","classes.html\/ActiveSupport\/ModelName.html"," < String","",1],["Chars","ActiveSupport::Multibyte","classes.html\/ActiveSupport\/Multibyte\/Chars.html"," < Object","Chars enables you to work transparently with UTF-8 encoding in the Ruby String class without having extensive",1],["Codepoint","ActiveSupport::Multibyte","classes.html\/ActiveSupport\/Multibyte\/Codepoint.html"," < Object","Holds data about a codepoint in the Unicode database ",1],["EncodingError","ActiveSupport::Multibyte","classes.html\/ActiveSupport\/Multibyte\/EncodingError.html"," < StandardError","Raised when a problem with the encoding was found. ",1],["UnicodeDatabase","ActiveSupport::Multibyte","classes.html\/ActiveSupport\/Multibyte\/UnicodeDatabase.html"," < Object","Holds static data from the Unicode database ",1],["Rescuable","ActiveSupport","classes.html\/ActiveSupport\/Rescuable.html"," < ","Rescuable module adds support for easier exception handling. ",1],["ClassMethods","ActiveSupport::Rescuable","classes.html\/ActiveSupport\/Rescuable\/ClassMethods.html"," < ","",1],["SafeBuffer","ActiveSupport","classes.html\/ActiveSupport\/SafeBuffer.html"," < String","",1],["SecureRandom","ActiveSupport","classes.html\/ActiveSupport\/SecureRandom.html"," < ","= Secure random number generator interface. This library is an interface for secure random number generator",1],["StringInquirer","ActiveSupport","classes.html\/ActiveSupport\/StringInquirer.html"," < String","Wrapping a string in this class gives you a prettier way to test for equality. The value returned by",1],["TestCase","ActiveSupport","classes.html\/ActiveSupport\/TestCase.html"," < ::Test::Unit::TestCase","",1],["Testing","ActiveSupport","classes.html\/ActiveSupport\/Testing.html"," < ","",1],["Assertions","ActiveSupport::Testing","classes.html\/ActiveSupport\/Testing\/Assertions.html"," < ","",1],["Declarative","ActiveSupport::Testing","classes.html\/ActiveSupport\/Testing\/Declarative.html"," < ","",1],["Performance","ActiveSupport::Testing","classes.html\/ActiveSupport\/Testing\/Performance.html"," < ","",1],["Benchmarker","ActiveSupport::Testing::Performance","classes.html\/ActiveSupport\/Testing\/Performance\/Benchmarker.html"," < Performer","",1],["Metrics","ActiveSupport::Testing::Performance","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics.html"," < ","",1],["Base","ActiveSupport::Testing::Performance::Metrics","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html"," < Object","",1],["CpuTime","ActiveSupport::Testing::Performance::Metrics","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/CpuTime.html"," < Time","",1],["GcRuns","ActiveSupport::Testing::Performance::Metrics","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/GcRuns.html"," < Base","",1],["GcTime","ActiveSupport::Testing::Performance::Metrics","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/GcTime.html"," < Base","",1],["Memory","ActiveSupport::Testing::Performance::Metrics","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/Memory.html"," < Base","",1],["Objects","ActiveSupport::Testing::Performance::Metrics","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/Objects.html"," < Base","",1],["ProcessTime","ActiveSupport::Testing::Performance::Metrics","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/ProcessTime.html"," < Time","",1],["Time","ActiveSupport::Testing::Performance::Metrics","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/Time.html"," < Base","",1],["WallTime","ActiveSupport::Testing::Performance::Metrics","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/WallTime.html"," < Time","",1],["Performer","ActiveSupport::Testing::Performance","classes.html\/ActiveSupport\/Testing\/Performance\/Performer.html"," < Object","",1],["Profiler","ActiveSupport::Testing::Performance","classes.html\/ActiveSupport\/Testing\/Performance\/Profiler.html"," < Performer","",1],["SetupAndTeardown","ActiveSupport::Testing","classes.html\/ActiveSupport\/Testing\/SetupAndTeardown.html"," < ","",1],["ForClassicTestUnit","ActiveSupport::Testing::SetupAndTeardown","classes.html\/ActiveSupport\/Testing\/SetupAndTeardown\/ForClassicTestUnit.html"," < ","",1],["ForMiniTest","ActiveSupport::Testing::SetupAndTeardown","classes.html\/ActiveSupport\/Testing\/SetupAndTeardown\/ForMiniTest.html"," < ","",1],["TimeWithZone","ActiveSupport","classes.html\/ActiveSupport\/TimeWithZone.html"," < Object","A Time-like class that can represent a time in any time zone. Necessary because standard Ruby Time instances",1],["TimeZone","ActiveSupport","classes.html\/ActiveSupport\/TimeZone.html"," < Object","",1],["XmlMini","ActiveSupport","classes.html\/ActiveSupport\/XmlMini.html"," < ","= XmlMini To use the much faster libxml parser: gem 'libxml-ruby', '=0.9.7' XmlMini.backend = 'LibXML'",1],["XmlMini_LibXMLSAX","ActiveSupport","classes.html\/ActiveSupport\/XmlMini_LibXMLSAX.html"," < ","",1],["HashBuilder","ActiveSupport::XmlMini_LibXMLSAX","classes.html\/ActiveSupport\/XmlMini_LibXMLSAX\/HashBuilder.html"," < Object","Class that will build the hash while the XML document is being parsed using SAX events. ",1],["Conversions","ActiveSupport::XmlMini_Nokogiri","classes.html\/ActiveSupport\/XmlMini_Nokogiri\/Conversions.html"," < ","",1],["Document","ActiveSupport::XmlMini_Nokogiri::Conversions","classes.html\/ActiveSupport\/XmlMini_Nokogiri\/Conversions\/Document.html"," < ","",1],["Node","ActiveSupport::XmlMini_Nokogiri::Conversions","classes.html\/ActiveSupport\/XmlMini_Nokogiri\/Conversions\/Node.html"," < ","",1],["XmlMini_NokogiriSAX","ActiveSupport","classes.html\/ActiveSupport\/XmlMini_NokogiriSAX.html"," < ","",1],["HashBuilder","ActiveSupport::XmlMini_NokogiriSAX","classes.html\/ActiveSupport\/XmlMini_NokogiriSAX\/HashBuilder.html"," < Nokogiri::XML::SAX::Document","Class that will build the hash while the XML document is being parsed using SAX events. ",1],["Cookie","CGI","classes.html\/CGI\/Cookie.html"," < DelegateClass(Array)","",1],["QueryExtension","CGI","classes.html\/CGI\/QueryExtension.html"," < ","",1],["Commands","railties\/lib\/commands\/plugin.rb","classes.html\/Commands.html"," < ","",1],["Discover","Commands","classes.html\/Commands\/Discover.html"," < Object","",1],["Info","Commands","classes.html\/Commands\/Info.html"," < Object","",1],["Install","Commands","classes.html\/Commands\/Install.html"," < Object","",1],["List","Commands","classes.html\/Commands\/List.html"," < Object","",1],["Plugin","Commands","classes.html\/Commands\/Plugin.html"," < Object","",1],["Remove","Commands","classes.html\/Commands\/Remove.html"," < Object","",1],["Source","Commands","classes.html\/Commands\/Source.html"," < Object","",1],["Sources","Commands","classes.html\/Commands\/Sources.html"," < Object","",1],["Unsource","Commands","classes.html\/Commands\/Unsource.html"," < Object","",1],["Update","Commands","classes.html\/Commands\/Update.html"," < Object","",1],["DateTime","activesupport\/lib\/active_support\/core_ext\/date_time.rb","classes.html\/DateTime.html"," < Object","",1],["Dir","railties\/lib\/rails_generator\/lookup.rb","classes.html\/Dir.html"," < Object","",1],["DispatchServlet","railties\/lib\/webrick_server.rb","classes.html\/DispatchServlet.html"," < WEBrick::HTTPServlet::AbstractServlet","A custom dispatch servlet for use with WEBrick. It dispatches requests (using the Rails Dispatcher) to",1],["ERB","activesupport\/lib\/active_support\/core_ext\/string\/output_safety.rb","classes.html\/ERB.html"," < Object","",1],["Util","ERB","classes.html\/ERB\/Util.html"," < ","",1],["Enumerable","activesupport\/lib\/active_support\/core_ext\/enumerable.rb","classes.html\/Enumerable.html"," < ","",1],["Fixnum","activesupport\/lib\/active_support\/core_ext\/string\/output_safety.rb","classes.html\/Fixnum.html"," < Object","",1],["Fixtures","activerecord\/lib\/active_record\/fixtures.rb","classes.html\/Fixtures.html"," < (RUBY_VERSION < '1.9' ? YAML::Omap : Hash)","Fixtures are a way of organizing data that you want to test against; in short, sample data. = Fixture",1],["Gem","railties\/lib\/rails\/gem_dependency.rb","classes.html\/Gem.html"," < ","",1],["HashWithIndifferentAccess","activesupport\/lib\/active_support\/core_ext\/hash\/indifferent_access.rb","classes.html\/HashWithIndifferentAccess.html"," < Hash","This class has dubious semantics and we only have it so that people can write params[:key] instead of",1],["I18n","activesupport\/lib\/active_support\/vendor.rb","classes.html\/I18n.html"," < ","",1],["Kernel","activesupport\/lib\/active_support\/core_ext\/kernel\/debugger.rb","classes.html\/Kernel.html"," < ","",1],["LibXML","activesupport\/lib\/active_support\/xml_mini\/libxml.rb","classes.html\/LibXML.html"," < ","",1],["Conversions","LibXML","classes.html\/LibXML\/Conversions.html"," < ","",1],["Document","LibXML::Conversions","classes.html\/LibXML\/Conversions\/Document.html"," < ","",1],["Node","LibXML::Conversions","classes.html\/LibXML\/Conversions\/Node.html"," < ","",1],["Logger","activesupport\/lib\/active_support\/core_ext\/logger.rb","classes.html\/Logger.html"," < Object","Extensions to the built in Ruby logger. If you want to use the default log formatter as defined in the",1],["Formatter","Logger","classes.html\/Logger\/Formatter.html"," < Object","",1],["SimpleFormatter","Logger","classes.html\/Logger\/SimpleFormatter.html"," < Logger","Simple formatter which only displays the message. ",1],["Mime","actionpack\/lib\/action_controller\/mime_type.rb","classes.html\/Mime.html"," < ","",1],["Type","Mime","classes.html\/Mime\/Type.html"," < Object","Encapsulates the notion of a mime type. Can be used at render time, for example, with: class PostsController",1],["Module","activesupport\/lib\/active_support\/deprecation.rb","classes.html\/Module.html"," < Object","Extends the module object with module and instance accessors for class attributes,  just like the native",1],["Object","activesupport\/lib\/active_support\/core_ext\/duplicable.rb","classes.html\/Object.html"," < Object","",1],["PGresult","activerecord\/lib\/active_record\/connection_adapters\/postgresql_adapter.rb","classes.html\/PGresult.html"," < Object","",1],["Plugin","railties\/lib\/commands\/plugin.rb","classes.html\/Plugin.html"," < Object","",1],["Process","activesupport\/lib\/active_support\/core_ext\/process\/daemon.rb","classes.html\/Process.html"," < ","",1],["REXML","activesupport\/lib\/active_support\/core_ext\/rexml.rb","classes.html\/REXML.html"," < ","",1],["Document","REXML","classes.html\/REXML\/Document.html"," < Element","",1],["Entity","REXML","classes.html\/REXML\/Entity.html"," < Child","",1],["RackLintPatch","actionpack\/lib\/action_controller\/rack_lint_patch.rb","classes.html\/RackLintPatch.html"," < ","Rack 1.0 does not allow string subclass body. This does not play well with our ActiveSupport::SafeBuffer.",1],["AllowStringSubclass","RackLintPatch","classes.html\/RackLintPatch\/AllowStringSubclass.html"," < ","",1],["Rails","railties\/lib\/rails_generator\/lookup.rb","classes.html\/Rails.html"," < ","",1],["BacktraceCleaner","Rails","classes.html\/Rails\/BacktraceCleaner.html"," < ActiveSupport::BacktraceCleaner","",1],["Configuration","Rails","classes.html\/Rails\/Configuration.html"," < Object","The Configuration class holds all the parameters for the Initializer and ships with defaults that suites",1],["GemBuilder","Rails","classes.html\/Rails\/GemBuilder.html"," < Gem::Installer","this class hijacks the functionality of Gem::Installer by overloading its  initializer to only provide",1],["GemDependency","Rails","classes.html\/Rails\/GemDependency.html"," < Gem::Dependency","",1],["GemPlugin","Rails","classes.html\/Rails\/GemPlugin.html"," < Plugin","This Plugin subclass represents a Gem plugin. Although RubyGems has already taken care of $LOAD_PATHs,",1],["Generator","Rails","classes.html\/Rails\/Generator.html"," < ","Rails::Generator is a code generation platform tailored for the Rails web application framework.  Generators",1],["AbstractGemSource","Rails::Generator","classes.html\/Rails\/Generator\/AbstractGemSource.html"," < Source","",1],["Base","Rails::Generator","classes.html\/Rails\/Generator\/Base.html"," < Object","The base code generator is bare-bones.  It sets up the source and destination paths and tells the logger",1],["Commands","Rails::Generator","classes.html\/Rails\/Generator\/Commands.html"," < ","",1],["Base","Rails::Generator::Commands","classes.html\/Rails\/Generator\/Commands\/Base.html"," < DelegateClass(Rails::Generator::Base)","Generator commands delegate Rails::Generator::Base and implement a standard set of actions.  Their behavior",1],["Create","Rails::Generator::Commands","classes.html\/Rails\/Generator\/Commands\/Create.html"," < Base","Create is the premier generator command.  It copies files, creates directories, renders templates, and",1],["Destroy","Rails::Generator::Commands","classes.html\/Rails\/Generator\/Commands\/Destroy.html"," < RewindBase","Undo the actions performed by a generator.  Rewind the action manifest and attempt to completely erase",1],["List","Rails::Generator::Commands","classes.html\/Rails\/Generator\/Commands\/List.html"," < Base","List a generator's action manifest. ",1],["RewindBase","Rails::Generator::Commands","classes.html\/Rails\/Generator\/Commands\/RewindBase.html"," < Base","Base class for commands which handle generator actions in reverse, such as Destroy. ",1],["Update","Rails::Generator::Commands","classes.html\/Rails\/Generator\/Commands\/Update.html"," < Create","Update generator's action manifest. ",1],["GemGeneratorSource","Rails::Generator","classes.html\/Rails\/Generator\/GemGeneratorSource.html"," < AbstractGemSource","GemGeneratorSource hits the mines to quarry for generators.  The latest versions of gems named *_generator",1],["GemPathSource","Rails::Generator","classes.html\/Rails\/Generator\/GemPathSource.html"," < AbstractGemSource","GemPathSource looks for generators within any RubyGem's \/rails_generators\/<generator_name>_generator.rb",1],["GeneratedAttribute","Rails::Generator","classes.html\/Rails\/Generator\/GeneratedAttribute.html"," < Object","",1],["GeneratorError","Rails::Generator","classes.html\/Rails\/Generator\/GeneratorError.html"," < StandardError","",1],["Lookup","Rails::Generator","classes.html\/Rails\/Generator\/Lookup.html"," < ","Generator lookup is managed by a list of sources which return specs describing where to find and how",1],["ClassMethods","Rails::Generator::Lookup","classes.html\/Rails\/Generator\/Lookup\/ClassMethods.html"," < ","",1],["Manifest","Rails::Generator","classes.html\/Rails\/Generator\/Manifest.html"," < Object","Manifest captures the actions a generator performs.  Instantiate a manifest with an optional target object,",1],["NamedBase","Rails::Generator","classes.html\/Rails\/Generator\/NamedBase.html"," < Base","The base generator for named components: models, controllers, mailers, etc.  The target name is taken",1],["Options","Rails::Generator","classes.html\/Rails\/Generator\/Options.html"," < ","",1],["ClassMethods","Rails::Generator::Options","classes.html\/Rails\/Generator\/Options\/ClassMethods.html"," < ","",1],["PathSource","Rails::Generator","classes.html\/Rails\/Generator\/PathSource.html"," < Source","PathSource looks for generators in a filesystem directory. ",1],["Scripts","Rails::Generator","classes.html\/Rails\/Generator\/Scripts.html"," < ","",1],["Base","Rails::Generator::Scripts","classes.html\/Rails\/Generator\/Scripts\/Base.html"," < Object","Generator scripts handle command-line invocation.  Each script responds to an invoke! class method which",1],["Source","Rails::Generator","classes.html\/Rails\/Generator\/Source.html"," < Object","Sources enumerate (yield from #each) generator specs which describe where to find and how to create generators.",1],["Spec","Rails::Generator","classes.html\/Rails\/Generator\/Spec.html"," < Object","A spec knows where a generator was found and how to instantiate it. Metadata include the generator's",1],["UsageError","Rails::Generator","classes.html\/Rails\/Generator\/UsageError.html"," < GeneratorError","",1],["Initializer","Rails","classes.html\/Rails\/Initializer.html"," < Object","The Initializer is responsible for processing the Rails configuration, such as setting the $LOAD_PATH,",1],["Plugin","Rails","classes.html\/Rails\/Plugin.html"," < Object","The Plugin class should be an object which provides the following methods: * +name+       - Used during",1],["Rack","Rails","classes.html\/Rails\/Rack.html"," < ","",1],["SecretKeyGenerator","Rails","classes.html\/Rails\/SecretKeyGenerator.html"," < Object","A class for creating random secret keys. This class will do its best to create a random secret key that's",1],["VendorGemSourceIndex","Rails","classes.html\/Rails\/VendorGemSourceIndex.html"," < Object","",1],["RailsEnvironment","railties\/lib\/commands\/plugin.rb","classes.html\/RailsEnvironment.html"," < Object","",1],["RailsFCGIHandler","railties\/lib\/fcgi_handler.rb","classes.html\/RailsFCGIHandler.html"," < Object","",1],["RecursiveHTTPFetcher","railties\/lib\/commands\/plugin.rb","classes.html\/RecursiveHTTPFetcher.html"," < Object","",1],["Repositories","railties\/lib\/commands\/plugin.rb","classes.html\/Repositories.html"," < Object","",1],["Repository","railties\/lib\/commands\/plugin.rb","classes.html\/Repository.html"," < Object","",1],["SourceAnnotationExtractor","railties\/lib\/source_annotation_extractor.rb","classes.html\/SourceAnnotationExtractor.html"," < Object","Implements the logic behind the rake tasks for annotations like rake notes rake notes:optimize and friends.",1],["Annotation","SourceAnnotationExtractor","classes.html\/SourceAnnotationExtractor\/Annotation.html"," < Struct.new(:line, :tag, :text)","",1],["Test","activesupport\/lib\/active_support\/testing\/deprecation.rb","classes.html\/Test.html"," < ","",1],["Unit","Test","classes.html\/Test\/Unit.html"," < ","",1],["+","ActiveSupport::Duration","classes.html\/ActiveSupport\/Duration.html#M003284","(other)","Adds another Duration or a Numeric to this Duration. Numeric values are treated as seconds. ",2],["+","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002610","(other)","Returns a new Chars object containing the _other_ object concatenated to the string. Example: ('Caf\u00e9'.mb_chars",2],["+","ActiveSupport::SafeBuffer","classes.html\/ActiveSupport\/SafeBuffer.html#M002858","(other)","",2],["+","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002570","(other)","",2],["-","ActiveSupport::Duration","classes.html\/ActiveSupport\/Duration.html#M003285","(other)","Subtracts another Duration or a Numeric from this Duration. Numeric values are treated as seconds. ",2],["-","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002571","(other)","",2],["<<","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes.html\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M002342","(javascript)","Writes raw JavaScript to the page. Example: page << \"alert('JavaScript with Prototype.');\" ",2],["<<","ActiveSupport::SafeBuffer","classes.html\/ActiveSupport\/SafeBuffer.html#M002857","(value)","Alias for #concat",2],["<=>","ActiveRecord::ConnectionAdapters::SQLiteAdapter::Version","classes.html\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter\/Version.html#M000487","(version_string)","",2],["<=>","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002609","(other)","Returns <tt>-1<\/tt>, <tt>0<\/tt> or <tt>+1<\/tt> depending on whether the Chars object is to be sorted",2],["<=>","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002564","(other)","Use the time in UTC for comparisons. ",2],["<=>","ActiveSupport::TimeZone","classes.html\/ActiveSupport\/TimeZone.html#M002692","(zone)","Compare this time zone to the parameter. The two are comapred first on their offsets, and then by name.",2],["<=>","Rails::Plugin","classes.html\/Rails\/Plugin.html#M000280","(other_plugin)","",2],["==","ActionController::MiddlewareStack::Middleware","classes.html\/ActionController\/MiddlewareStack\/Middleware.html#M001924","(middleware)","",2],["==","ActionView::Template::Path","classes.html\/ActionView\/Template\/Path.html#M002190","(path)","",2],["==","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001134","(comparison_object)","Returns true if the +comparison_object+ is the same object, or is of the same type and has the same id.",2],["==","ActiveRecord::Reflection::MacroReflection","classes.html\/ActiveRecord\/Reflection\/MacroReflection.html#M001061","(other_aggregation)","Returns +true+ if +self+ and +other_aggregation+ have the same +name+ attribute, +active_record+ attribute,",2],["==","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001481","(other)","Test for equality.  Resource are equal if and only if +other+ is the same object or is an instance of",2],["==","ActiveResource::Request","classes.html\/ActiveResource\/Request.html#M001564","(req)","",2],["==","ActiveResource::Response","classes.html\/ActiveResource\/Response.html#M001570","(other)","",2],["==","ActiveSupport::Callbacks::Callback","classes.html\/ActiveSupport\/Callbacks\/Callback.html#M003273","(other)","",2],["==","ActiveSupport::Duration","classes.html\/ActiveSupport\/Duration.html#M003288","(other)","Returns true if <tt>other<\/tt> is also a Duration instance with the same <tt>value<\/tt>, or if <tt>other",2],["==","Mime::Type","classes.html\/Mime\/Type.html#M001947","(mime_type)","",2],["==","Rails::GemDependency","classes.html\/Rails\/GemDependency.html#M000268","(other)","",2],["===","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001021","(object)","Overwrite the default class equality method to provide support for association proxies. ",2],["===","ActiveSupport::CoreExtensions::Time::Calculations::ClassMethods","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations\/ClassMethods.html#M003095","(other)","Overriding case equality method so that it returns true for ActiveSupport::TimeWithZone instances ",2],["===","ActiveSupport::Multibyte::UnicodeDatabase","classes.html\/ActiveSupport\/Multibyte\/UnicodeDatabase.html#M002617","(other)","",2],["===","Mime::Type","classes.html\/Mime\/Type.html#M001946","(list)","",2],["=~","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002611","(other)","Like <tt>String#=~<\/tt> only it returns the character offset (in codepoints) instead of the byte offset.",2],["=~","ActiveSupport::TimeZone","classes.html\/ActiveSupport\/TimeZone.html#M002693","(re)","Compare #name and TZInfo identifier to a supplied regexp, returning true if a match is found. ",2],["=~","Mime::Type","classes.html\/Mime\/Type.html#M001948","(mime_type)","",2],["GET","ActionController::Request","classes.html\/ActionController\/Request.html#M002035","()","Override Rack's GET method to support indifferent access ",2],["POST","ActionController::Request","classes.html\/ActionController\/Request.html#M002037","()","Override Rack's POST method to support indifferent access ",2],["[]","ActionController::Http::Headers","classes.html\/ActionController\/Http\/Headers.html#M001733","(header_name)","",2],["[]","ActionController::Session::AbstractStore::SessionHash","classes.html\/ActionController\/Session\/AbstractStore\/SessionHash.html#M001689","(key)","",2],["[]","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes.html\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M002327","(id)","Returns a element reference by finding it through +id+ in the DOM. This element can then be used for",2],["[]","ActionView::ReloadableTemplate::ReloadablePath","classes.html\/ActionView\/ReloadableTemplate\/ReloadablePath.html#M002154","(path)","",2],["[]","ActionView::Template::EagerPath","classes.html\/ActionView\/Template\/EagerPath.html#M002198","(path)","",2],["[]","ActionView::Template::Path","classes.html\/ActionView\/Template\/Path.html#M002192","(path)","Returns a ActionView::Template object for the given path string. The input path should be relative to",2],["[]","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001124","(attr_name)","Returns the value of the attribute identified by <tt>attr_name<\/tt> after it has been typecast (for example,",2],["[]","ActiveRecord::ConnectionAdapters::TableDefinition","classes.html\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M000556","(name)","Returns a ColumnDefinition for the column with name +name+. ",2],["[]","ActiveRecord::Errors","classes.html\/ActiveRecord\/Errors.html#M001272","(attribute)","Alias for #on",2],["[]","ActiveResource::Errors","classes.html\/ActiveResource\/Errors.html#M001422","(attribute)","Alias for #on",2],["[]","ActiveResource::Formats","classes.html\/ActiveResource\/Formats.html#M001535","(mime_type_reference)","Lookup the format class from a mime type reference symbol. Example: ActiveResource::Formats[:xml]  #",2],["[]","ActiveResource::Response","classes.html\/ActiveResource\/Response.html#M001568","(key)","",2],["[]","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002633","(*args)","Alias for #slice",2],["[]","ActiveSupport::Testing::Performance::Metrics","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics.html#M003332","(name)","",2],["[]","ActiveSupport::TimeZone","classes.html\/ActiveSupport\/TimeZone.html#M002710","(arg)","Locate a specific time zone object. If the argument is a string, it is interpreted to mean the name of",2],["[]=","ActionController::Session::AbstractStore::SessionHash","classes.html\/ActionController\/Session\/AbstractStore\/SessionHash.html#M001690","(key, value)","",2],["[]=","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001125","(attr_name, value)","Updates the attribute identified by <tt>attr_name<\/tt> with the specified +value+. (Alias for the protected",2],["[]=","ActiveResource::Response","classes.html\/ActiveResource\/Response.html#M001569","(key, value)","",2],["[]=","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002622","(*args)","Like <tt>String#[]=<\/tt>, except instead of byte offsets you specify character offsets. Example: s =",2],["[]=","HashWithIndifferentAccess","classes.html\/HashWithIndifferentAccess.html#M002954","(key, value)","Assigns a new value to the hash: hash = HashWithIndifferentAccess.new hash[:key] = \"value\" ",2],["_call","ActionController::Dispatcher","classes.html\/ActionController\/Dispatcher.html#M001628","(env)","",2],["about","Rails::Plugin","classes.html\/Rails\/Plugin.html#M000281","()","",2],["abstract_class?","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001023","()","Returns whether this class is a base AR class.  If A is a base class and B descends from A, then B.base_class",2],["accepts","ActionController::Request","classes.html\/ActionController\/Request.html#M001999","()","Returns the accepted MIME type for the request. ",2],["accepts_nested_attributes_for","ActiveRecord::NestedAttributes::ClassMethods","classes.html\/ActiveRecord\/NestedAttributes\/ClassMethods.html#M001377","(*attr_names)","Defines an attributes writer for the specified association(s). If you are using <tt>attr_protected<\/tt>",2],["accessible_paths","ActionView::Template","classes.html\/ActionView\/Template.html#M002204","()","",2],["active","ActionController::MiddlewareStack","classes.html\/ActionController\/MiddlewareStack.html#M001934","()","",2],["active?","ActionController::MiddlewareStack::Middleware","classes.html\/ActionController\/MiddlewareStack\/Middleware.html#M001923","()","",2],["active?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000797","()","Checks whether the connection to the database is still active. This includes checking whether the database",2],["active?","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000442","()","CONNECTION MANAGEMENT ==================================== ",2],["active?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000724","()","Is this connection alive and ready for queries? ",2],["acts_like?","Object","classes.html\/Object.html#M003253","(duck)","A duck-type assistant method. For example, Active Support extends Date to define an acts_like_date? method,",2],["acts_like_date?","ActiveSupport::CoreExtensions::Date::Behavior","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Behavior.html#M003155","()","Enable more predictable duck-typing on Date-like classes. See Object#acts_like?. ",2],["acts_like_string?","ActiveSupport::CoreExtensions::String::Behavior","classes.html\/ActiveSupport\/CoreExtensions\/String\/Behavior.html#M002882","()","Enable more predictable duck-typing on String-like classes. See Object#acts_like?. ",2],["acts_like_string?","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002606","()","Enable more predictable duck-typing on String-like classes. See Object#acts_like?. ",2],["acts_like_time?","ActiveSupport::CoreExtensions::Time::Behavior","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Behavior.html#M003093","()","Enable more predictable duck-typing on Time-like classes. See Object#acts_like?. ",2],["acts_like_time?","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002583","()","So that +self+ <tt>acts_like?(:time)<\/tt>. ",2],["adapter_name","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000787","()","Returns the human-readable name of the adapter.  Use mixed case - one can always use downcase if needed.",2],["adapter_name","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000722","()","Returns 'PostgreSQL' as adapter name for identification purposes. ",2],["add","ActiveRecord::Errors","classes.html\/ActiveRecord\/Errors.html#M001267","(attribute, message = nil, options = {})","Adds an error message (+messsage+) to the +attribute+, which will be returned on a call to <tt>on(attribute)<\/tt>",2],["add","ActiveResource::Errors","classes.html\/ActiveResource\/Errors.html#M001419","(attribute, msg)","Adds an error to an Active Resource object's attribute (named for the +attribute+ parameter) with the",2],["add","ActiveSupport::BufferedLogger","classes.html\/ActiveSupport\/BufferedLogger.html#M002675","(severity, message = nil, progname = nil, &block)","",2],["add","Repositories","classes.html\/Repositories.html#M000167","(uri)","",2],["add_column","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000470","(table_name, column_name, type, options = {})","",2],["add_column","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000774","(table_name, column_name, type, options = {})","Adds a new column to the named table. See TableDefinition#column for details of the options you can use.",2],["add_column","ActiveRecord::ConnectionAdapters::SchemaStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000607","(table_name, column_name, type, options = {})","Adds a new column to the named table. See TableDefinition#column for details of the options you can use.",2],["add_column_position!","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000476","(sql, options)","",2],["add_filter","ActiveSupport::BacktraceCleaner","classes.html\/ActiveSupport\/BacktraceCleaner.html#M002653","(&block)","Adds a filter from the block provided. Each line in the backtrace will be mapped against this filter.",2],["add_frozen_gem_path","Rails::GemDependency","classes.html\/Rails\/GemDependency.html#M000245","()","",2],["add_gem_load_paths","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000066","()","",2],["add_general_options!","Rails::Generator::Options","classes.html\/Rails\/Generator\/Options.html#M000326","(opt)","Adds general options like -h and --quiet.  Usually don't override. ",2],["add_index","ActiveRecord::ConnectionAdapters::SchemaStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000613","(table_name, column_name, options = {})","Adds a new index to the table.  +column_name+ can be a single Symbol, or an Array of Symbols. The index",2],["add_limit!","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000655","(sql, options)","Alias for <tt>add_limit_offset!<\/tt>. ",2],["add_limit_offset!","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000656","(sql, options)","Appends +LIMIT+ and +OFFSET+ options to an SQL statement, or some SQL fragment that has the same semantics",2],["add_load_paths","Rails::GemDependency","classes.html\/Rails\/GemDependency.html#M000248","()","",2],["add_lock!","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000657","(sql, options)","Appends a locking clause to an SQL statement. This method *modifies* the +sql+ parameter. # SELECT *",2],["add_observer!","ActiveRecord::Observer","classes.html\/ActiveRecord\/Observer.html#M001369","(klass)","",2],["add_on_blank","ActiveRecord::Errors","classes.html\/ActiveRecord\/Errors.html#M001269","(attributes, custom_message = nil)","Will add an error message to each of the attributes in +attributes+ that is blank (using Object#blank?).",2],["add_on_empty","ActiveRecord::Errors","classes.html\/ActiveRecord\/Errors.html#M001268","(attributes, custom_message = nil)","Will add an error message to each of the attributes in +attributes+ that is empty. ",2],["add_options!","Rails::Generator::Options","classes.html\/Rails\/Generator\/Options.html#M000325","(opt)","Override to add your options to the parser: def add_options!(opt) opt.on('-v', '--verbose') { |value|",2],["add_order_by_for_association_limiting!","ActiveRecord::ConnectionAdapters::SchemaStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000636","(sql, options)","ORDER BY clause for the passed order option. PostgreSQL overrides this due to its stricter standards",2],["add_plugin_load_paths","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000065","()","Adds all load paths from plugins to the global set of load paths, so that code from plugins can be required",2],["add_silencer","ActiveSupport::BacktraceCleaner","classes.html\/ActiveSupport\/BacktraceCleaner.html#M002654","(&block)","Adds a silencer from the block provided. If the silencer returns true for a given line, it'll be excluded",2],["add_spec","Rails::VendorGemSourceIndex","classes.html\/Rails\/VendorGemSourceIndex.html#M000238","(spec)","",2],["add_support_load_paths","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000064","()","Add the load paths used by support functions such as the info controller ",2],["add_timestamps","ActiveRecord::ConnectionAdapters::SchemaStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000637","(table_name)","Adds timestamps (created_at and updated_at) columns to the named table. ===== Examples add_timestamps(:suppliers)",2],["add_to_base","ActiveRecord::Errors","classes.html\/ActiveRecord\/Errors.html#M001266","(msg)","Adds an error to the base object instead of any particular attribute. This is used to report errors that",2],["add_to_base","ActiveResource::Errors","classes.html\/ActiveResource\/Errors.html#M001418","(msg)","Add an error to the base Active Resource object rather than an attribute. ==== Examples my_folder = Folder.find(1)",2],["advance","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003174","(options)","Provides precise Date calculations for years, months, and days.  The +options+ parameter takes a hash",2],["advance","ActiveSupport::CoreExtensions::DateTime::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Calculations.html#M002906","(options)","Uses Date to provide precise Time calculations for years, months, and days. The +options+ parameter takes",2],["advance","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003105","(options)","Uses Date to provide precise Time calculations for years, months, and days. The +options+ parameter takes",2],["advance","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002574","(options)","",2],["after_create","ActiveRecord::Callbacks","classes.html\/ActiveRecord\/Callbacks.html#M001193","()","Is called _after_ <tt>Base.save<\/tt> on new objects that haven't been saved yet (no record exists). Note",2],["after_destroy","ActiveRecord::Callbacks","classes.html\/ActiveRecord\/Callbacks.html#M001206","()","Is called _after_ <tt>Base.destroy<\/tt> (and all the attributes have been frozen). class Contact < ActiveRecord::Base",2],["after_filter","ActionController::Filters::ClassMethods","classes.html\/ActionController\/Filters\/ClassMethods.html#M002058","(*filters, &block)","Alias for #append_after_filter",2],["after_generate","Rails::Generator::Base","classes.html\/Rails\/Generator\/Base.html#M000340","()","",2],["after_initialize","Rails::Configuration","classes.html\/Rails\/Configuration.html#M000106","(&after_initialize_block)","Adds a block which will be executed after rails has been fully initialized. Useful for per-environment",2],["after_initialize","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000091","()","Fires the user-supplied after_initialize block (Configuration#after_initialize) ",2],["after_initialize_blocks","Rails::Configuration","classes.html\/Rails\/Configuration.html#M000107","()","Returns the blocks added with Configuration#after_initialize ",2],["after_save","ActiveRecord::Callbacks","classes.html\/ActiveRecord\/Callbacks.html#M001190","()","Is called _after_ <tt>Base.save<\/tt> (regardless of whether it's a +create+ or +update+ save). Note that",2],["after_update","ActiveRecord::Callbacks","classes.html\/ActiveRecord\/Callbacks.html#M001196","()","Is called _after_ <tt>Base.save<\/tt> on existing objects that have a record. Note that this callback",2],["after_validation","ActiveRecord::Callbacks","classes.html\/ActiveRecord\/Callbacks.html#M001199","()","Is called _after_ <tt>Validations.validate<\/tt> (which is part of the <tt>Base.save<\/tt> call). ",2],["after_validation_on_create","ActiveRecord::Callbacks","classes.html\/ActiveRecord\/Callbacks.html#M001201","()","Is called _after_ <tt>Validations.validate<\/tt> (which is part of the <tt>Base.save<\/tt> call) on new",2],["after_validation_on_update","ActiveRecord::Callbacks","classes.html\/ActiveRecord\/Callbacks.html#M001203","()","Is called _after_ <tt>Validations.validate<\/tt> (which is part of the <tt>Base.save<\/tt> call) on existing",2],["aggregate_mapping","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001087","(reflection)","",2],["ago","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003164","(seconds)","Converts Date to a Time (or DateTime if necessary) with the time portion set to the beginning of the",2],["ago","ActiveSupport::CoreExtensions::DateTime::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Calculations.html#M002907","(seconds)","Returns a new DateTime representing the time a number of seconds ago Do not use this method in combination",2],["ago","ActiveSupport::CoreExtensions::Numeric::Time","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Time.html#M003062","(time = ::Time.now)","Reads best without arguments:  10.minutes.ago ",2],["ago","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003106","(seconds)","Returns a new Time representing the time a number of seconds ago, this is basically a wrapper around",2],["ago","ActiveSupport::Duration","classes.html\/ActiveSupport\/Duration.html#M003292","(time = ::Time.current)","Calculates a new Time or Date that is as far in the past as this Duration represents. ",2],["ago","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002573","(other)","",2],["alert","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes.html\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M002337","(message)","Displays an alert dialog with the given +message+. Example: # Generates: alert('This message is from",2],["alias_attribute","ActiveSupport::CoreExtensions::Module","classes.html\/ActiveSupport\/CoreExtensions\/Module.html#M003012","(new_name, old_name)","Allows you to make aliases for attributes, which includes getter, setter, and query methods. Example:",2],["alias_attribute_with_dirty","ActiveRecord::Dirty::ClassMethods","classes.html\/ActiveRecord\/Dirty\/ClassMethods.html#M001344","(new_name, old_name)","",2],["alias_method_chain","ActiveSupport::CoreExtensions::Module","classes.html\/ActiveSupport\/CoreExtensions\/Module.html#M003011","(target, feature)","Encapsulates the common pattern of: alias_method :foo_without_feature, :foo alias_method :foo, :foo_with_feature",2],["all","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000966","(*args)","This is an alias for find(:all).  You can pass in all the same arguments to this method as you can to",2],["all","ActiveSupport::TimeZone","classes.html\/ActiveSupport\/TimeZone.html#M002707","()","Return an array of all TimeZone objects. There are multiple TimeZone objects per time zone, in many cases,",2],["all","Repositories","classes.html\/Repositories.html#M000170","()","",2],["allow_concurrency","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000710","()","Deprecated and no longer has any effect. ",2],["allow_concurrency=","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000711","(flag)","Deprecated and no longer has any effect. ",2],["announce","ActiveRecord::Migration","classes.html\/ActiveRecord\/Migration.html#M000891","(message)","",2],["any?","ActiveRecord::NamedScope::Scope","classes.html\/ActiveRecord\/NamedScope\/Scope.html#M000839","()","",2],["app","Object","classes.html\/Object.html#M000018","(create=false)","reference the global \"app\" instance, created on demand. To recreate the instance, pass a non-false value",2],["append_after_filter","ActionController::Filters::ClassMethods","classes.html\/ActionController\/Filters\/ClassMethods.html#M002056","(*filters, &block)","The passed <tt>filters<\/tt> will be appended to the array of filters that run _after_ actions on this",2],["append_around_filter","ActionController::Filters::ClassMethods","classes.html\/ActionController\/Filters\/ClassMethods.html#M002059","(*filters, &block)","If you <tt>append_around_filter A.new, B.new<\/tt>, the filter chain looks like B#before A#before # run",2],["append_before_filter","ActionController::Filters::ClassMethods","classes.html\/ActionController\/Filters\/ClassMethods.html#M002053","(*filters, &block)","The passed <tt>filters<\/tt> will be appended to the filter_chain and will execute before the action on",2],["append_features","ActiveSupport::CoreExtensions::String::Iterators","classes.html\/ActiveSupport\/CoreExtensions\/String\/Iterators.html#M002859","(base)","",2],["append_features","ActiveSupport::CoreExtensions::String::StartsEndsWith","classes.html\/ActiveSupport\/CoreExtensions\/String\/StartsEndsWith.html#M002877","(base)","",2],["append_sources","Rails::Generator::Lookup::ClassMethods","classes.html\/Rails\/Generator\/Lookup\/ClassMethods.html#M000361","(*args)","Add a source to the end of the list. ",2],["append_view_path","ActionController::Base","classes.html\/ActionController\/Base.html#M001801","(path)","Adds a view_path to the end of the view_paths array. This change affects the current request only. self.append_view_path(\"views\/default\")",2],["append_view_path","ActionController::Base","classes.html\/ActionController\/Base.html#M001789","(path)","Adds a view_path to the end of the view_paths array. If the current class has no view paths, copy them",2],["applicable?","ActionController::Routing::Optimisation::Optimiser","classes.html\/ActionController\/Routing\/Optimisation\/Optimiser.html#M002094","()","Temporarily disabled <tt>:url<\/tt> optimisation pending proper solution to Issues around request.host",2],["applicable?","ActionController::Routing::Optimisation::PositionalArgumentsWithAdditionalParams","classes.html\/ActionController\/Routing\/Optimisation\/PositionalArgumentsWithAdditionalParams.html#M002099","()","To avoid generating \"http:\/\/localhost\/?host=foo.example.com\" we can't use this optimisation on routes",2],["around_filter","ActionController::Filters::ClassMethods","classes.html\/ActionController\/Filters\/ClassMethods.html#M002061","(*filters, &block)","Alias for #append_around_filter",2],["array_or_string_for_javascript","ActionView::Helpers::JavaScriptHelper","classes.html\/ActionView\/Helpers\/JavaScriptHelper.html#M002374","(option)","",2],["as_json","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001489","(options = nil)","Coerces to a hash for JSON encoding. ==== Options The +options+ are passed to the +to_json+ method on",2],["as_json","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002556","(options = nil)","Coerces the date to a string for JSON encoding. ISO 8601 format is used if ActiveSupport::JSON::Encoding.use_standard_json_time_format",2],["as_json","DateTime","classes.html\/DateTime.html#M002811","(options = nil)","Coerces the datetime to a string for JSON encoding. ISO 8601 format is used if ActiveSupport::JSON::Encoding.use_standard_json_time_format",2],["as_json","Object","classes.html\/Object.html#M002814","(options = nil)","",2],["as_load_path","Module","classes.html\/Module.html#M003010","()","Returns String#underscore applied to the module name minus trailing classes. ActiveRecord.as_load_path",2],["assert_blank","ActiveSupport::Testing::Assertions","classes.html\/ActiveSupport\/Testing\/Assertions.html#M003307","(object)","Test if an expression is blank. Passes if object.blank? is true. assert_blank [] # => true ",2],["assert_difference","ActiveSupport::Testing::Assertions","classes.html\/ActiveSupport\/Testing\/Assertions.html#M003305","(expression, difference = 1, message = nil, &block)","Test numeric difference between the return value of an expression as a result of what is evaluated in",2],["assert_dom_equal","ActionController::Assertions::DomAssertions","classes.html\/ActionController\/Assertions\/DomAssertions.html#M001722","(expected, actual, message = \"\")","Test two HTML strings for equivalency (e.g., identical up to reordering of attributes) ==== Examples",2],["assert_dom_not_equal","ActionController::Assertions::DomAssertions","classes.html\/ActionController\/Assertions\/DomAssertions.html#M001723","(expected, actual, message = \"\")","The negated form of +assert_dom_equal+. ==== Examples # assert that the referenced method does not generate",2],["assert_generates","ActionController::Assertions::RoutingAssertions","classes.html\/ActionController\/Assertions\/RoutingAssertions.html#M001715","(expected_path, options, defaults={}, extras = {}, message=nil)","Asserts that the provided options can be used to generate the provided path.  This is the inverse of",2],["assert_no_difference","ActiveSupport::Testing::Assertions","classes.html\/ActiveSupport\/Testing\/Assertions.html#M003306","(expression, message = nil, &block)","Assertion that the numeric result of evaluating an expression is not changed before and after invoking",2],["assert_no_tag","ActionController::Assertions::TagAssertions","classes.html\/ActionController\/Assertions\/TagAssertions.html#M001712","(*opts)","Identical to +assert_tag+, but asserts that a matching tag does _not_ exist. (See +assert_tag+ for a",2],["assert_present","ActiveSupport::Testing::Assertions","classes.html\/ActiveSupport\/Testing\/Assertions.html#M003308","(object)","Test if an expression is not blank. Passes if object.present? is true. assert_present {:data => 'x' }",2],["assert_recognizes","ActionController::Assertions::RoutingAssertions","classes.html\/ActionController\/Assertions\/RoutingAssertions.html#M001714","(expected_options, path, extras={}, message=nil)","Asserts that the routing of the given +path+ was handled correctly and that the parsed options (given",2],["assert_redirected_to","ActionController::Assertions::ResponseAssertions","classes.html\/ActionController\/Assertions\/ResponseAssertions.html#M001704","(options = {}, message=nil)","Assert that the redirection options passed in match those of the redirect called in the latest action.",2],["assert_response","ActionController::Assertions::ResponseAssertions","classes.html\/ActionController\/Assertions\/ResponseAssertions.html#M001703","(type, message = nil)","Asserts that the response is one of the following types: * <tt>:success<\/tt>   - Status code was 200",2],["assert_routing","ActionController::Assertions::RoutingAssertions","classes.html\/ActionController\/Assertions\/RoutingAssertions.html#M001716","(path, options, defaults={}, extras={}, message=nil)","Asserts that path and options match both ways; in other words, it verifies that <tt>path<\/tt> generates",2],["assert_select","ActionController::Assertions::SelectorAssertions","classes.html\/ActionController\/Assertions\/SelectorAssertions.html#M001720","(*args, &block)","An assertion that selects elements and makes one or more equality tests. If the first argument is an",2],["assert_select_email","ActionController::Assertions::SelectorAssertions","classes.html\/ActionController\/Assertions\/SelectorAssertions.html#M001727","(&block)","Extracts the body of an email and runs nested assertions on it. You must enable deliveries for this assertion",2],["assert_select_encoded","ActionController::Assertions::SelectorAssertions","classes.html\/ActionController\/Assertions\/SelectorAssertions.html#M001726","(element = nil, &block)","Extracts the content of an element, treats it as encoded HTML and runs nested assertion on it. You typically",2],["assert_select_rjs","ActionController::Assertions::SelectorAssertions","classes.html\/ActionController\/Assertions\/SelectorAssertions.html#M001725","(*args, &block)","Selects content from the RJS response. === Narrowing down With no arguments, asserts that one or more",2],["assert_tag","ActionController::Assertions::TagAssertions","classes.html\/ActionController\/Assertions\/TagAssertions.html#M001711","(*opts)","Asserts that there is a tag\/node\/element in the body of the response that meets all of the given conditions.",2],["assert_template","ActionController::Assertions::ResponseAssertions","classes.html\/ActionController\/Assertions\/ResponseAssertions.html#M001705","(options = {}, message = nil)","Asserts that the request was rendered with the appropriate template file or partials ==== Examples #",2],["assert_valid","ActionController::Assertions::ModelAssertions","classes.html\/ActionController\/Assertions\/ModelAssertions.html#M001713","(record)","Ensures that the passed record is valid by Active Record standards and returns any error messages if",2],["assert_valid_keys","ActiveSupport::CoreExtensions::Hash::Keys","classes.html\/ActiveSupport\/CoreExtensions\/Hash\/Keys.html#M002989","(*valid_keys)","Validate all keys in a hash match *valid keys, raising ArgumentError on a mismatch. Note that keys are",2],["assign","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes.html\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M002341","(variable, value)","Assigns the JavaScript +variable+ the given +value+. Examples: # Generates: my_string = \"This is mine!\";",2],["assign_default_content_type_and_charset!","ActionController::Response","classes.html\/ActionController\/Response.html#M001907","()","",2],["assigns","ActionController::TestProcess","classes.html\/ActionController\/TestProcess.html#M001767","(key = nil)","",2],["assume_migrated_upto_version","ActiveRecord::ConnectionAdapters::SchemaStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000622","(version, migrations_path = ActiveRecord::Migrator.migrations_path)","",2],["at","ActiveSupport::TimeZone","classes.html\/ActiveSupport\/TimeZone.html#M002696","(secs)","Method for creating new ActiveSupport::TimeWithZone instance in time zone of +self+ from number of seconds",2],["at_beginning_of_day","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003170","()","Alias for #beginning_of_day",2],["at_beginning_of_day","ActiveSupport::CoreExtensions::DateTime::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Calculations.html#M002913","()","Alias for #beginning_of_day",2],["at_beginning_of_day","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003128","()","Alias for #beginning_of_day",2],["at_beginning_of_month","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003193","()","Alias for #beginning_of_month",2],["at_beginning_of_month","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003131","()","Alias for #beginning_of_month",2],["at_beginning_of_quarter","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003197","()","Alias for #beginning_of_quarter",2],["at_beginning_of_quarter","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003135","()","Alias for #beginning_of_quarter",2],["at_beginning_of_week","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003188","()","Alias for #beginning_of_week",2],["at_beginning_of_week","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003121","()","Alias for #beginning_of_week",2],["at_beginning_of_year","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003201","()","Alias for #beginning_of_year",2],["at_beginning_of_year","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003139","()","Alias for #beginning_of_year",2],["at_end_of_month","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003195","()","Alias for #end_of_month",2],["at_end_of_month","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003133","()","Alias for #end_of_month",2],["at_end_of_quarter","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003199","()","Alias for #end_of_quarter",2],["at_end_of_quarter","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003137","()","Alias for #end_of_quarter",2],["at_end_of_week","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003190","()","Alias for #end_of_week",2],["at_end_of_week","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003123","()","Alias for #end_of_week",2],["at_end_of_year","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003203","()","Alias for #end_of_year",2],["at_end_of_year","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003141","()","Alias for #end_of_year",2],["at_midnight","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003169","()","Alias for #beginning_of_day",2],["at_midnight","ActiveSupport::CoreExtensions::DateTime::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Calculations.html#M002912","()","Alias for #beginning_of_day",2],["at_midnight","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003127","()","Alias for #beginning_of_day",2],["atom_feed","ActionView::Helpers::AtomFeedHelper","classes.html\/ActionView\/Helpers\/AtomFeedHelper.html#M002288","(options = {}, &block)","Full usage example: config\/routes.rb: ActionController::Routing::Routes.draw do |map| map.resources :posts",2],["atomic_write","ActiveSupport::CoreExtensions::File::Atomic","classes.html\/ActiveSupport\/CoreExtensions\/File\/Atomic.html#M003002","(file_name, temp_dir = Dir.tmpdir)","Write to a file atomically.  Useful for situations where you don't want other processes or threads to",2],["attr_accessible","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000983","(*attributes)","Specifies a white list of model attributes that can be set via mass-assignment, such as <tt>new(attributes)<\/tt>,",2],["attr_accessor_with_default","Module","classes.html\/Module.html#M003008","(sym, default = nil, &block)","Declare an attribute accessor with an initial default return value. To give attribute <tt>:age<\/tt> the",2],["attr_internal","Module","classes.html\/Module.html#M003016","(*attrs)","Alias for #attr_internal_accessor",2],["attr_internal_accessor","Module","classes.html\/Module.html#M003015","(*attrs)","Declares an attribute reader and writer backed by an internally-named instance variable. ",2],["attr_internal_reader","Module","classes.html\/Module.html#M003013","(*attrs)","Declares an attribute reader backed by an internally-named instance variable. ",2],["attr_internal_writer","Module","classes.html\/Module.html#M003014","(*attrs)","Declares an attribute writer backed by an internally-named instance variable. ",2],["attr_protected","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000981","(*attributes)","Attributes named in this macro are protected from mass-assignment, such as <tt>new(attributes)<\/tt>,",2],["attr_readonly","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000985","(*attributes)","Attributes listed as readonly can be set for a new record, but will be ignored in database updates afterwards.",2],["attribute_for_inspect","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001129","(attr_name)","Returns an <tt>#inspect<\/tt>-like string for the value of the attribute +attr_name+. String attributes",2],["attribute_method_suffix","ActiveRecord::AttributeMethods::ClassMethods","classes.html\/ActiveRecord\/AttributeMethods\/ClassMethods.html#M001171","(*suffixes)","Declares a method available for all attributes with the given suffix. Uses +method_missing+ and <tt>respond_to?<\/tt>",2],["attribute_names","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001132","()","Returns an array of names for the attributes available on this object sorted alphabetically. ",2],["attribute_present?","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001130","(attribute)","Returns true if the specified +attribute+ has been set by the user or by a database load and is neither",2],["attributes","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001127","()","Returns a hash of all the attributes with their names as keys and the values of the attributes as values.",2],["attributes","Rails::Generator::NamedBase","classes.html\/Rails\/Generator\/NamedBase.html#M000349","()","",2],["attributes=","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001126","(new_attributes, guard_protected_attributes = true)","Allows you to set all the attributes at once by passing in a hash with keys matching the attribute names",2],["attributes_before_type_cast","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001128","()","Returns a hash of attributes before typecasting and deserialization. ",2],["authenticate","ActionController::HttpAuthentication::Basic","classes.html\/ActionController\/HttpAuthentication\/Basic.html#M001651","(controller, &login_procedure)","",2],["authenticate","ActionController::HttpAuthentication::Digest","classes.html\/ActionController\/HttpAuthentication\/Digest.html#M001660","(controller, realm, &password_procedure)","Returns false on a valid response, true otherwise ",2],["authenticate_or_request_with_http_basic","ActionController::HttpAuthentication::Basic::ControllerMethods","classes.html\/ActionController\/HttpAuthentication\/Basic\/ControllerMethods.html#M001648","(realm = \"Application\", &login_procedure)","",2],["authenticate_or_request_with_http_digest","ActionController::HttpAuthentication::Digest::ControllerMethods","classes.html\/ActionController\/HttpAuthentication\/Digest\/ControllerMethods.html#M001657","(realm = \"Application\", &password_procedure)","",2],["authenticate_with_http_basic","ActionController::HttpAuthentication::Basic::ControllerMethods","classes.html\/ActionController\/HttpAuthentication\/Basic\/ControllerMethods.html#M001649","(&login_procedure)","",2],["authenticate_with_http_digest","ActionController::HttpAuthentication::Digest::ControllerMethods","classes.html\/ActionController\/HttpAuthentication\/Digest\/ControllerMethods.html#M001658","(realm = \"Application\", &password_procedure)","Authenticate with HTTP Digest, returns true or false ",2],["authentication_header","ActionController::HttpAuthentication::Digest","classes.html\/ActionController\/HttpAuthentication\/Digest.html#M001668","(controller, realm)","",2],["authentication_request","ActionController::HttpAuthentication::Basic","classes.html\/ActionController\/HttpAuthentication\/Basic.html#M001656","(controller, realm)","",2],["authentication_request","ActionController::HttpAuthentication::Digest","classes.html\/ActionController\/HttpAuthentication\/Digest.html#M001669","(controller, realm, message = nil)","",2],["authorization","ActionController::HttpAuthentication::Basic","classes.html\/ActionController\/HttpAuthentication\/Basic.html#M001653","(request)","",2],["authorization","ActionController::HttpAuthentication::Digest","classes.html\/ActionController\/HttpAuthentication\/Digest.html#M001661","(request)","",2],["auto_discovery_link_tag","ActionView::Helpers::AssetTagHelper","classes.html\/ActionView\/Helpers\/AssetTagHelper.html#M002410","(type = :rss, url_options = {}, tag_options = {})","Returns a link tag that browsers and news readers can use to auto-detect an RSS or ATOM feed. The +type+",2],["auto_flush","ActiveSupport::BufferedLogger","classes.html\/ActiveSupport\/BufferedLogger.html#M002679","()","",2],["auto_flushing=","ActiveSupport::BufferedLogger","classes.html\/ActiveSupport\/BufferedLogger.html#M002676","(period)","Set the auto-flush period. Set to true to flush after every log message, to an integer to flush every",2],["auto_link","ActionView::Helpers::TextHelper","classes.html\/ActionView\/Helpers\/TextHelper.html#M002276","(text, *args, &block)","Turns all URLs and e-mail addresses into clickable links. The <tt>:link<\/tt> option will limit what should",2],["average","ActiveRecord::Calculations::ClassMethods","classes.html\/ActiveRecord\/Calculations\/ClassMethods.html#M001384","(column_name, options = {})","Calculates the average value on a given column. The value is returned as a float, or +nil+ if there's",2],["backend","ActiveSupport::JSON","classes.html\/ActiveSupport\/JSON.html#M002801","()","",2],["backend=","ActiveSupport::JSON","classes.html\/ActiveSupport\/JSON.html#M002802","(name)","",2],["backend=","ActiveSupport::XmlMini","classes.html\/ActiveSupport\/XmlMini.html#M002688","(name)","",2],["backtrace_cleaner","Rails","classes.html\/Rails.html#M000048","()","",2],["bang?","ActiveRecord::DynamicFinderMatch","classes.html\/ActiveRecord\/DynamicFinderMatch.html#M001251","()","",2],["banner","Rails::Generator::Base","classes.html\/Rails\/Generator\/Base.html#M000342","()","Override with your own usage banner. ",2],["banner","Rails::Generator::NamedBase","classes.html\/Rails\/Generator\/NamedBase.html#M000348","()","Override with your own usage banner. ",2],["banner","Rails::Generator::Options","classes.html\/Rails\/Generator\/Options.html#M000324","()","Override with your own usage banner. ",2],["banner","Rails::Generator::Scripts::Base","classes.html\/Rails\/Generator\/Scripts\/Base.html#M000345","()","Override with your own script usage banner. ",2],["base64","ActiveSupport::SecureRandom","classes.html\/ActiveSupport\/SecureRandom.html#M002796","(n=nil)","SecureRandom.base64 generates a random base64 string. The argument n specifies the length of the random",2],["base_class","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001022","()","Returns the base AR subclass that this class descends from. If A extends AR::Base, A.base_class will",2],["becomes","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001113","(klass)","Returns an instance of the specified +klass+ with the attributes of the current record. This is mostly",2],["before_create","ActiveRecord::Callbacks","classes.html\/ActiveRecord\/Callbacks.html#M001192","()","Is called _before_ <tt>Base.save<\/tt> on new objects that haven't been saved yet (no record exists).",2],["before_destroy","ActiveRecord::Callbacks","classes.html\/ActiveRecord\/Callbacks.html#M001205","()","Is called _before_ <tt>Base.destroy<\/tt>. Note: If you need to _destroy_ or _nullify_ associated records",2],["before_filter","ActionController::Filters::ClassMethods","classes.html\/ActionController\/Filters\/ClassMethods.html#M002055","(*filters, &block)","Alias for #append_before_filter",2],["before_save","ActiveRecord::Callbacks","classes.html\/ActiveRecord\/Callbacks.html#M001189","()","Is called _before_ <tt>Base.save<\/tt> (regardless of whether it's a +create+ or +update+ save). ",2],["before_update","ActiveRecord::Callbacks","classes.html\/ActiveRecord\/Callbacks.html#M001195","()","Is called _before_ <tt>Base.save<\/tt> on existing objects that have a record. ",2],["before_validation","ActiveRecord::Callbacks","classes.html\/ActiveRecord\/Callbacks.html#M001198","()","Is called _before_ <tt>Validations.validate<\/tt> (which is part of the <tt>Base.save<\/tt> call). ",2],["before_validation_on_create","ActiveRecord::Callbacks","classes.html\/ActiveRecord\/Callbacks.html#M001200","()","Is called _before_ <tt>Validations.validate<\/tt> (which is part of the <tt>Base.save<\/tt> call) on new",2],["before_validation_on_update","ActiveRecord::Callbacks","classes.html\/ActiveRecord\/Callbacks.html#M001202","()","Is called _before_ <tt>Validations.validate<\/tt> (which is part of the <tt>Base.save<\/tt> call) on existing",2],["begin_db_transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000652","()","Begins the transaction (and turns off auto-committing). ",2],["begin_db_transaction","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000750","()","Begins a transaction. ",2],["beginning_of_day","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003167","()","Converts Date to a Time (or DateTime if necessary) with the time portion set to the beginning of the",2],["beginning_of_day","ActiveSupport::CoreExtensions::DateTime::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Calculations.html#M002910","()","Returns a new DateTime representing the start of the day (0:00) ",2],["beginning_of_day","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003125","()","Returns a new Time representing the start of the day (0:00) ",2],["beginning_of_month","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003192","()","Returns a new ; DateTime objects will have time set to 0:00DateTime representing the start of the month",2],["beginning_of_month","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003130","()","Returns a new Time representing the start of the month (1st of the month, 0:00) ",2],["beginning_of_quarter","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003196","()","Returns a new Date\/DateTime representing the start of the quarter (1st of january, april, july, october;",2],["beginning_of_quarter","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003134","()","Returns  a new Time representing the start of the quarter (1st of january, april, july, october, 0:00)",2],["beginning_of_week","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003186","()","Returns a new Date\/DateTime representing the \"start\" of this week (i.e, Monday; DateTime objects will",2],["beginning_of_week","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003119","()","Returns a new Time representing the \"start\" of this week (Monday, 0:00) ",2],["beginning_of_year","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003200","()","Returns a new Date\/DateTime representing the start of the year (1st of january; DateTime objects will",2],["beginning_of_year","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003138","()","Returns  a new Time representing the start of the year (1st of january, 0:00) ",2],["belongs_to","ActiveRecord::Associations::ClassMethods","classes.html\/ActiveRecord\/Associations\/ClassMethods.html#M000907","(association_id, options = {})","Specifies a one-to-one association with another class. This method should only be used if this class",2],["belongs_to","ActiveRecord::ConnectionAdapters::Table","classes.html\/ActiveRecord\/ConnectionAdapters\/Table.html#M000590","(*args)","Alias for #references",2],["belongs_to","ActiveRecord::ConnectionAdapters::TableDefinition","classes.html\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M000576","(*args)","Alias for #references",2],["belongs_to?","ActiveRecord::Reflection::MacroReflection","classes.html\/ActiveRecord\/Reflection\/MacroReflection.html#M001063","()","Returns +true+ if +self+ is a +belongs_to+ reflection. ",2],["benchmark","ActionController::Benchmarking::ClassMethods","classes.html\/ActionController\/Benchmarking\/ClassMethods.html#M001646","(title, log_level = Logger::DEBUG, use_silence = true)","Log and benchmark the workings of a single block and silence whatever logging that may have happened",2],["benchmark","ActionView::Helpers::BenchmarkHelper","classes.html\/ActionView\/Helpers\/BenchmarkHelper.html#M002314","(message = \"Benchmarking\", options = {})","Allows you to measure the execution time of a block  in a template and records the result to the log.",2],["benchmark","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001019","(title, log_level = Logger::DEBUG, use_silence = true)","Log and benchmark multiple statements in a single block. Example: Project.benchmark(\"Creating project\")",2],["benchmark","ActiveSupport::Testing::Performance::Metrics::Base","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M003337","()","",2],["best_install_method","RailsEnvironment","classes.html\/RailsEnvironment.html#M000142","()","",2],["between?","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002565","(min, max)","",2],["binary_to_string","ActiveRecord::ConnectionAdapters::Column","classes.html\/ActiveRecord\/ConnectionAdapters\/Column.html#M000535","(value)","Used to convert from BLOBs to Strings ",2],["blank?","Object","classes.html\/Object.html#M003234","()","An object is blank if it's false, empty, or a whitespace string. For example, \"\", \"   \", +nil+, [], and",2],["body","ActionController::Request","classes.html\/ActionController\/Request.html#M002033","()","The request body is an IO input stream. If the RAW_POST_DATA environment variable is already set, wrap",2],["breakpoint","Kernel","classes.html\/Kernel.html#M002937","()","",2],["breakpoint_server","Rails::Configuration","classes.html\/Rails\/Configuration.html#M000098","(_ = nil)","Deprecated options: ",2],["breakpoint_server=","Rails::Configuration","classes.html\/Rails\/Configuration.html#M000099","(_ = nil)","Alias for #breakpoint_server",2],["browser_generated?","Mime::Type","classes.html\/Mime\/Type.html#M001951","()","",2],["buffer","ActiveSupport::BufferedLogger","classes.html\/ActiveSupport\/BufferedLogger.html#M002680","()","",2],["build","ActionController::MiddlewareStack","classes.html\/ActionController\/MiddlewareStack.html#M001935","(app)","",2],["build","ActionController::MiddlewareStack::Middleware","classes.html\/ActionController\/MiddlewareStack\/Middleware.html#M001926","(app)","",2],["build","ActiveSupport::Callbacks::CallbackChain","classes.html\/ActiveSupport\/Callbacks\/CallbackChain.html#M003265","(kind, *methods, &block)","",2],["build","Rails::GemDependency","classes.html\/Rails\/GemDependency.html#M000262","(options={})","",2],["build_callbacks","ActionView::Helpers::PrototypeHelper","classes.html\/ActionView\/Helpers\/PrototypeHelper.html#M002367","(options)","",2],["build_mem_cache","ActiveSupport::Cache::MemCacheStore","classes.html\/ActiveSupport\/Cache\/MemCacheStore.html#M002715","(*addresses)","",2],["build_observer","ActionView::Helpers::PrototypeHelper","classes.html\/ActionView\/Helpers\/PrototypeHelper.html#M002366","(klass, name, options = {})","",2],["build_request_uri","ActionController::TestProcess","classes.html\/ActionController\/TestProcess.html#M001772","(action, parameters)","",2],["built?","Rails::GemDependency","classes.html\/Rails\/GemDependency.html#M000254","()","",2],["builtin_directories","Rails::Configuration","classes.html\/Rails\/Configuration.html#M000110","()","",2],["button_to","ActionView::Helpers::UrlHelper","classes.html\/ActionView\/Helpers\/UrlHelper.html#M002457","(name, options = {}, html_options = {})","Generates a form containing a single button that submits to the URL created by the set of +options+.",2],["button_to_function","ActionView::Helpers::JavaScriptHelper","classes.html\/ActionView\/Helpers\/JavaScriptHelper.html#M002369","(name, *args, &block)","Returns a button with the given +name+ text that'll trigger a JavaScript +function+ using the onclick",2],["button_to_remote","ActionView::Helpers::PrototypeHelper","classes.html\/ActionView\/Helpers\/PrototypeHelper.html#M002316","(name, options = {}, html_options = {})","Creates a button with an onclick event which calls a remote action via XMLHttpRequest The options for",2],["byte","ActiveSupport::CoreExtensions::Numeric::Bytes","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Bytes.html#M003067","()","Alias for #bytes",2],["bytes","ActiveSupport::CoreExtensions::Numeric::Bytes","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Bytes.html#M003066","()","",2],["cache","ActionController::Caching","classes.html\/ActionController\/Caching.html#M001616","(key, options = {}, &block)","Convenience accessor ",2],["cache","ActionView::Helpers::CacheHelper","classes.html\/ActionView\/Helpers\/CacheHelper.html#M002378","(name = {}, options = nil, &block)","A method for caching fragments of a view rather than an entire action or page.  This technique is useful",2],["cache","ActiveRecord::ConnectionAdapters::QueryCache","classes.html\/ActiveRecord\/ConnectionAdapters\/QueryCache.html#M000671","()","Enable the query cache within the block. ",2],["cache","ActiveRecord::QueryCache::ClassMethods","classes.html\/ActiveRecord\/QueryCache\/ClassMethods.html#M001370","(&block)","Enable the query cache within the block if Active Record is configured. ",2],["cache","Rails","classes.html\/Rails.html#M000051","()","",2],["cache_asset_timestamps","ActionView::Helpers::AssetTagHelper","classes.html\/ActionView\/Helpers\/AssetTagHelper.html#M002425","()","",2],["cache_asset_timestamps=","ActionView::Helpers::AssetTagHelper","classes.html\/ActionView\/Helpers\/AssetTagHelper.html#M002426","(value)","You can enable or disable the asset tag timestamps cache. With the cache enabled, the asset tag helper",2],["cache_attribute?","ActiveRecord::AttributeMethods::ClassMethods","classes.html\/ActiveRecord\/AttributeMethods\/ClassMethods.html#M001180","(attr_name)","Returns +true+ if the provided attribute is being cached. ",2],["cache_attributes","ActiveRecord::AttributeMethods::ClassMethods","classes.html\/ActiveRecord\/AttributeMethods\/ClassMethods.html#M001178","(*attribute_names)","+cache_attributes+ allows you to declare which converted attribute values should be cached. Usually caching",2],["cache_configured?","ActionController::Caching","classes.html\/ActionController\/Caching.html#M001615","()","",2],["cache_fixtures","Fixtures","classes.html\/Fixtures.html#M000847","(connection, fixtures_map)","",2],["cache_for_connection","Fixtures","classes.html\/Fixtures.html#M000844","(connection)","",2],["cache_format","ActionController::Request","classes.html\/ActionController\/Request.html#M002008","()","",2],["cache_key","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001103","()","Returns a cache key that can be used to identify this record. ==== Examples Product.new.cache_key   ",2],["cache_page","ActionController::Caching::Pages","classes.html\/ActionController\/Caching\/Pages.html#M001593","(content = nil, options = nil)","Manually cache the +content+ in the key determined by +options+. If no content is provided, the contents",2],["cache_page","ActionController::Caching::Pages::ClassMethods","classes.html\/ActionController\/Caching\/Pages\/ClassMethods.html#M001588","(content, path)","Manually cache the +content+ in the key determined by +path+. Example: cache_page \"I'm the cached content\",",2],["cache_store=","ActionController::Caching","classes.html\/ActionController\/Caching.html#M001614","(store_option)","Defines the storage option for cached fragments ",2],["cache_template_loading?","ActionView::Base","classes.html\/ActionView\/Base.html#M002209","()","",2],["cached_attributes","ActiveRecord::AttributeMethods::ClassMethods","classes.html\/ActiveRecord\/AttributeMethods\/ClassMethods.html#M001179","()","Returns the attributes which are cached. By default time related columns with datatype <tt>:datetime,",2],["cached_fixtures","Fixtures","classes.html\/Fixtures.html#M000846","(connection, keys_to_fetch = nil)","",2],["caches_action","ActionController::Caching::Actions::ClassMethods","classes.html\/ActionController\/Caching\/Actions\/ClassMethods.html#M001579","(*actions)","Declares that +actions+ should be cached. See ActionController::Caching::Actions for details. ",2],["caches_page","ActionController::Caching::Pages::ClassMethods","classes.html\/ActionController\/Caching\/Pages\/ClassMethods.html#M001589","(*actions)","Caches the +actions+ using the page-caching approach that'll store the cache in a path within the page_cache_directory",2],["calculate","ActiveRecord::Calculations::ClassMethods","classes.html\/ActiveRecord\/Calculations\/ClassMethods.html#M001388","(operation, column_name, options = {})","This calculates aggregate values in the given column.  Methods for count, sum, average, minimum, and",2],["call","ActionController::Base","classes.html\/ActionController\/Base.html#M001779","(env)","",2],["call","ActionController::Dispatcher","classes.html\/ActionController\/Dispatcher.html#M001627","(env)","",2],["call","ActionController::Failsafe","classes.html\/ActionController\/Failsafe.html#M001885","(env)","",2],["call","ActionController::ParamsParser","classes.html\/ActionController\/ParamsParser.html#M002143","(env)","",2],["call","ActionController::Session::AbstractStore","classes.html\/ActionController\/Session\/AbstractStore.html#M001698","(env)","",2],["call","ActionController::Session::CookieStore","classes.html\/ActionController\/Session\/CookieStore.html#M001675","(env)","",2],["call","ActionController::StringCoercion","classes.html\/ActionController\/StringCoercion.html#M002077","(env)","",2],["call","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes.html\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M002340","(function, *arguments, &block)","Calls the JavaScript +function+, optionally with the given +arguments+. If a block is given, the block",2],["call","ActionView::TemplateHandler","classes.html\/ActionView\/TemplateHandler.html#M002479","(template)","",2],["call","ActionView::TemplateHandlers::Compilable::ClassMethods","classes.html\/ActionView\/TemplateHandlers\/Compilable\/ClassMethods.html#M002477","(template)","",2],["call","ActiveRecord::ConnectionAdapters::ConnectionManagement","classes.html\/ActiveRecord\/ConnectionAdapters\/ConnectionManagement.html#M000709","(env)","",2],["call","ActiveRecord::QueryCache","classes.html\/ActiveRecord\/QueryCache.html#M001373","(env)","",2],["call","ActiveSupport::Callbacks::Callback","classes.html\/ActiveSupport\/Callbacks\/Callback.html#M003277","(*args, &block)","",2],["call","Logger::Formatter","classes.html\/Logger\/Formatter.html#M003216","(severity, time, progname, msg)","",2],["call","Logger::SimpleFormatter","classes.html\/Logger\/SimpleFormatter.html#M003219","(severity, timestamp, progname, msg)","This method is invoked when a log event occurs ",2],["camelcase","ActiveSupport::CoreExtensions::String::Inflections","classes.html\/ActiveSupport\/CoreExtensions\/String\/Inflections.html#M002837","(first_letter = :upper)","Alias for #camelize",2],["camelize","ActiveSupport::CoreExtensions::String::Inflections","classes.html\/ActiveSupport\/CoreExtensions\/String\/Inflections.html#M002836","(first_letter = :upper)","By default, +camelize+ converts strings to UpperCamelCase. If the argument to camelize is set to <tt>:lower<\/tt>",2],["camelize","ActiveSupport::Inflector","classes.html\/ActiveSupport\/Inflector.html#M002778","(lower_case_and_underscored_word, first_letter_in_uppercase = true)","By default, +camelize+ converts strings to UpperCamelCase. If the argument to +camelize+ is set to <tt>:lower<\/tt>",2],["capitalize","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002638","()","Converts the first character to uppercase and the remainder to lowercase. Example: '\u00fcber'.mb_chars.capitalize.to_s",2],["capture","ActionView::Helpers::CaptureHelper","classes.html\/ActionView\/Helpers\/CaptureHelper.html#M002452","(*args, &block)","The capture method allows you to extract part of a template into a  variable. You can then use this variable",2],["case_sensitive_equality_operator","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000662","()","",2],["case_sensitive_equality_operator","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000480","()","",2],["catch_schema_changes","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000600","()","",2],["cdata_block","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes.html\/ActiveSupport\/XmlMini_NokogiriSAX\/HashBuilder.html#M002518","(string)","Alias for #characters",2],["cdata_section","ActionView::Helpers::TagHelper","classes.html\/ActionView\/Helpers\/TagHelper.html#M002470","(content)","Returns a CDATA section with the given +content+.  CDATA sections are used to escape blocks of text containing",2],["center","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002625","(integer, padstr=' ')","Works just like <tt>String#center<\/tt>, only integer specifies characters instead of bytes. Example:",2],["change","ActiveRecord::ConnectionAdapters::Table","classes.html\/ActiveRecord\/ConnectionAdapters\/Table.html#M000583","(column_name, type, options = {})","Changes the column's definition according to the new options. See TableDefinition#column for details",2],["change","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003175","(options)","Returns a new Date where one or more of the elements have been changed according to the +options+ parameter.",2],["change","ActiveSupport::CoreExtensions::DateTime::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Calculations.html#M002905","(options)","Returns a new DateTime where one or more of the elements have been changed according to the +options+",2],["change","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003104","(options)","Returns a new Time where one or more of the elements have been changed according to the +options+ parameter.",2],["change_column","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000775","(table_name, column_name, type, options = {})","Changes the column of a table. ",2],["change_column","ActiveRecord::ConnectionAdapters::SchemaStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000610","(table_name, column_name, type, options = {})","Changes the column's definition according to the new options. See TableDefinition#column for details",2],["change_column_default","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000776","(table_name, column_name, default)","Changes the default value of a table column. ",2],["change_column_default","ActiveRecord::ConnectionAdapters::SchemaStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000611","(table_name, column_name, default)","Sets a new default value for a column.  If you want to set the default value to +NULL+, you are out of",2],["change_column_null","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000472","(table_name, column_name, null, default = nil)","",2],["change_column_null","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000777","(table_name, column_name, null, default = nil)","",2],["change_column_null","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000564","(table_name, column_name, null, default = nil)","",2],["change_default","ActiveRecord::ConnectionAdapters::Table","classes.html\/ActiveRecord\/ConnectionAdapters\/Table.html#M000584","(column_name, default)","Sets a new default value for a column. See SchemaStatements#change_column_default ===== Examples t.change_default(:qualification,",2],["change_table","ActiveRecord::ConnectionAdapters::SchemaStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000604","(table_name)","A block for changing columns in +table+. === Example # change_table() yields a Table instance change_table(:suppliers)",2],["changed","ActiveRecord::Dirty","classes.html\/ActiveRecord\/Dirty.html#M001330","()","List of attributes with unsaved changes. person.changed # => [] person.name = 'bob' person.changed #",2],["changed?","ActiveRecord::Dirty","classes.html\/ActiveRecord\/Dirty.html#M001329","()","Do any attributes have unsaved changes? person.changed? # => false person.name = 'bob' person.changed?",2],["changed_for_autosave?","ActiveRecord::AutosaveAssociation","classes.html\/ActiveRecord\/AutosaveAssociation.html#M001403","()","Returns whether or not this record has been changed in any way (including whether any of its nested autosave",2],["changes","ActiveRecord::Dirty","classes.html\/ActiveRecord\/Dirty.html#M001331","()","Map of changed attrs => [original value, new value]. person.changes # => {} person.name = 'bob' person.changes",2],["characters","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes.html\/ActiveSupport\/XmlMini_NokogiriSAX\/HashBuilder.html#M002517","(string)","",2],["chars","ActiveSupport::CoreExtensions::String::Multibyte","classes.html\/ActiveSupport\/CoreExtensions\/String\/Multibyte.html#M002870","()","",2],["charset","ActionController::Response","classes.html\/ActionController\/Response.html#M001898","()","",2],["charset","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000462","()","Returns the database character set. ",2],["charset=","ActionController::Response","classes.html\/ActionController\/Response.html#M001897","(charset)","Set the charset of the Content-Type header. Set to nil to remove it. If no content type is set, it defaults",2],["check_box","ActionView::Helpers::FormHelper","classes.html\/ActionView\/Helpers\/FormHelper.html#M002394","(object_name, method, options = {}, checked_value = \"1\", unchecked_value = \"0\")","Returns a checkbox tag tailored for accessing a specified attribute (identified by +method+) on an object",2],["check_box_tag","ActionView::Helpers::FormTagHelper","classes.html\/ActionView\/Helpers\/FormTagHelper.html#M002303","(name, value = \"1\", checked = false, options = {})","Creates a check box form input tag. ==== Options * <tt>:disabled<\/tt> - If set to true, the user will",2],["check_for_unbuilt_gems","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000068","()","",2],["check_gem_dependencies","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000069","()","",2],["check_ruby_version","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000058","()","Check for valid Ruby version This is done in an external file, so we can use it from the `rails` program",2],["checkin","ActiveRecord::ConnectionAdapters::ConnectionPool","classes.html\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M000690","(conn)","Check-in a database connection back into the pool, indicating that you no longer need this connection.",2],["checkout","ActiveRecord::ConnectionAdapters::ConnectionPool","classes.html\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M000689","()","Check-out a database connection from the pool, indicating that you want to use it. You should call #checkin",2],["class_collisions","Rails::Generator::Commands::Base","classes.html\/Rails\/Generator\/Commands\/Base.html#M000380","(*class_names)","Does nothing for all commands except Create. ",2],["class_collisions","Rails::Generator::Commands::Create","classes.html\/Rails\/Generator\/Commands\/Create.html#M000394","(*class_names)","Check whether the given class names are already taken by Ruby or Rails.  In the future, expand to check",2],["class_collisions","Rails::Generator::Commands::List","classes.html\/Rails\/Generator\/Commands\/List.html#M000413","(*class_names)","",2],["class_eval","Object","classes.html\/Object.html#M003243","(*args, &block)","class_eval on an object acts like singleton_class_eval. ",2],["class_file","Rails::Generator::Spec","classes.html\/Rails\/Generator\/Spec.html#M000329","()","",2],["class_name","ActiveRecord::Reflection::MacroReflection","classes.html\/ActiveRecord\/Reflection\/MacroReflection.html#M001060","()","Returns the class name for the macro.  For example, <tt>composed_of :balance, :class_name => 'Money'<\/tt>",2],["class_name","Rails::Generator::Spec","classes.html\/Rails\/Generator\/Spec.html#M000330","()","",2],["class_of_active_record_descendant","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001083","(klass)","Returns the class descending directly from ActiveRecord::Base or an abstract class, if any, in the inheritance",2],["classify","ActiveSupport::CoreExtensions::String::Inflections","classes.html\/ActiveSupport\/CoreExtensions\/String\/Inflections.html#M002845","()","Create a class name from a plural table name like Rails does for table names to models. Note that this",2],["classify","ActiveSupport::Inflector","classes.html\/ActiveSupport\/Inflector.html#M002789","(table_name)","Create a class name from a plural table name like Rails does for table names to models. Note that this",2],["clean","ActiveSupport::BacktraceCleaner","classes.html\/ActiveSupport\/BacktraceCleaner.html#M002652","(backtrace)","Returns the backtrace after all filters and silencers has been run against it. Filters run first, then",2],["clean_backtrace","ActionController::TestCase::Assertions","classes.html\/ActionController\/TestCase\/Assertions.html#M001736","(&block)","",2],["clean_within","ActiveSupport::CoreExtensions::Pathname::CleanWithin","classes.html\/ActiveSupport\/CoreExtensions\/Pathname\/CleanWithin.html#M002999","(string)","Clean the paths contained in the provided string. ",2],["cleanup_application","ActionController::Dispatcher","classes.html\/ActionController\/Dispatcher.html#M001623","()","",2],["clear","ActiveRecord::Errors","classes.html\/ActiveRecord\/Errors.html#M001279","()","Removes all errors that have been added. ",2],["clear","ActiveResource::Errors","classes.html\/ActiveResource\/Errors.html#M001427","()","",2],["clear","ActiveSupport::Cache::MemCacheStore","classes.html\/ActiveSupport\/Cache\/MemCacheStore.html#M002725","()","",2],["clear","ActiveSupport::Cache::MemoryStore","classes.html\/ActiveSupport\/Cache\/MemoryStore.html#M002755","()","",2],["clear","ActiveSupport::Cache::Strategy::LocalCache","classes.html\/ActiveSupport\/Cache\/Strategy\/LocalCache.html#M002736","()","",2],["clear","ActiveSupport::Cache::SynchronizedMemoryStore","classes.html\/ActiveSupport\/Cache\/SynchronizedMemoryStore.html#M002765","()","",2],["clear","ActiveSupport::Inflector::Inflections","classes.html\/ActiveSupport\/Inflector\/Inflections.html#M002774","(scope = :all)","Clears the loaded inflections within a given scope (default is <tt>:all<\/tt>). Give the scope as a symbol",2],["clear_active_connections!","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes.html\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html#M000700","()","Returns any connections in use by the current thread back to the pool, and also returns connections to",2],["clear_all_connections!","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes.html\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html#M000702","()","",2],["clear_buffer","ActiveSupport::BufferedLogger","classes.html\/ActiveSupport\/BufferedLogger.html#M002681","()","",2],["clear_query_cache","ActiveRecord::ConnectionAdapters::QueryCache","classes.html\/ActiveRecord\/ConnectionAdapters\/QueryCache.html#M000673","()","Clears the query cache. One reason you may wish to call this method explicitly is between queries that",2],["clear_reloadable_connections!","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes.html\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html#M000701","()","Clears the cache which maps classes ",2],["clear_reloadable_connections!","ActiveRecord::ConnectionAdapters::ConnectionPool","classes.html\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M000686","()","Clears the cache which maps classes ",2],["clear_stale_cached_connections!","ActiveRecord::ConnectionAdapters::ConnectionPool","classes.html\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M000688","()","Return any checked-out connections back to the pool by threads that are no longer alive. ",2],["client_min_messages","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000767","()","Returns the current client message level. ",2],["client_min_messages=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000768","(level)","Set the client message level. ",2],["clone","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001112","()","Returns a clone of the record that hasn't been assigned an id yet and is treated as a new record.  Note",2],["clone","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001475","()","Returns a \\clone of the resource that hasn't been assigned an +id+ yet and is treated as a \\new resource.",2],["close","ActionController::Reloader::BodyWrapper","classes.html\/ActionController\/Reloader\/BodyWrapper.html#M002069","()","",2],["close","ActiveSupport::BufferedLogger","classes.html\/ActiveSupport\/BufferedLogger.html#M002678","()","",2],["close","ActiveSupport::Gzip::Stream","classes.html\/ActiveSupport\/Gzip\/Stream.html#M002831","()","",2],["close_connection","RailsFCGIHandler","classes.html\/RailsFCGIHandler.html#M000042","(request)","",2],["collation","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000463","()","Returns the database collation strategy. ",2],["collection_path","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001459","(prefix_options = {}, query_options = nil)","Gets the collection path for the REST resources.  If the +query_options+ parameter is omitted, Rails",2],["collection_path","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001501","(options = nil)","",2],["collection_select","ActionView::Helpers::FormOptionsHelper","classes.html\/ActionView\/Helpers\/FormOptionsHelper.html#M002250","(object, method, collection, value_method, text_method, options = {}, html_options = {})","Returns <tt><select><\/tt> and <tt><option><\/tt> tags for the collection of existing return values of",2],["colorize_logging","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000959","","Determines whether to use ANSI codes to colorize the logging statements committed by the connection adapter.",2],["column","ActiveRecord::ConnectionAdapters::Table","classes.html\/ActiveRecord\/ConnectionAdapters\/Table.html#M000580","(column_name, type, options = {})","Adds a new column to the named table. See TableDefinition#column for details of the options you can use.",2],["column","ActiveRecord::ConnectionAdapters::TableDefinition","classes.html\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M000573","(name, type, options = {})","Instantiates a new column for the table. The +type+ parameter is normally one of the migrations native",2],["column_for_attribute","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001133","(name)","Returns the column object for the named attribute. ",2],["column_name_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M000625","()","the maximum length of a column name ",2],["column_names","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001006","()","Returns an array of column names as strings. ",2],["columns","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001004","()","Returns an array of column objects for the table associated with this class. ",2],["columns","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000762","(table_name, name = nil)","Returns the list of all column definitions for a table. ",2],["columns","ActiveRecord::ConnectionAdapters::SchemaStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000598","(table_name, name = nil)","Returns an array of Column objects for the table specified by +table_name+. See the concrete implementation",2],["columns_hash","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001005","()","Returns a hash of column objects for the table associated with this class. ",2],["columns_per_multicolumn_index","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M000630","()","the maximum number of columns in a multicolumn index ",2],["columns_per_table","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M000628","()","the maximum number of columns per table ",2],["columns_with_query_cache","ActiveRecord::ConnectionAdapters::QueryCache","classes.html\/ActiveRecord\/ConnectionAdapters\/QueryCache.html#M000675","(*args)","",2],["commit_db_transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000653","()","Commits the transaction (and turns on auto-committing). ",2],["commit_db_transaction","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000751","()","Commits a transaction. ",2],["comparable_time","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002536","()","Alias for #utc",2],["compare_with_coercion","ActiveSupport::CoreExtensions::DateTime::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Calculations.html#M002919","(other)","Layers additional behavior on DateTime#<=> so that Time and ActiveSupport::TimeWithZone instances can",2],["compare_with_coercion","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003147","(other)","Layers additional behavior on Time#<=> so that DateTime and ActiveSupport::TimeWithZone instances can",2],["compile","ActionView::TemplateHandlers::Builder","classes.html\/ActionView\/TemplateHandlers\/Builder.html#M002147","(template)","",2],["compile","ActionView::TemplateHandlers::Compilable","classes.html\/ActionView\/TemplateHandlers\/Compilable.html#M002478","(template)","",2],["compile","ActionView::TemplateHandlers::ERB","classes.html\/ActionView\/TemplateHandlers\/ERB.html#M002149","(template)","",2],["compile","ActionView::TemplateHandlers::RJS","classes.html\/ActionView\/TemplateHandlers\/RJS.html#M002150","(template)","",2],["complex_template","Rails::Generator::Commands::Create","classes.html\/Rails\/Generator\/Commands\/Create.html#M000398","(relative_source, relative_destination, template_options = {})","",2],["complex_template","Rails::Generator::Commands::Destroy","classes.html\/Rails\/Generator\/Commands\/Destroy.html#M000409","(*args)","",2],["complex_template","Rails::Generator::Commands::List","classes.html\/Rails\/Generator\/Commands\/List.html#M000416","(relative_source, relative_destination, options = {})","",2],["complex_template","Rails::Generator::Commands::Update","classes.html\/Rails\/Generator\/Commands\/Update.html#M000423","(relative_source, relative_destination, template_options = {})","",2],["compose","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002641","()","Performs composition on all the characters. Example: '\u00e9'.length #=> 3 '\u00e9'.mb_chars.compose.to_s.length",2],["compose_codepoints","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002658","(codepoints)","Compose decomposed characters to the composed form. ",2],["composed_of","ActiveRecord::Aggregations::ClassMethods","classes.html\/ActiveRecord\/Aggregations\/ClassMethods.html#M001374","(part_id, options = {}, &block)","Adds reader and writer methods for manipulating a value object: <tt>composed_of :address<\/tt> adds <tt>address<\/tt>",2],["compress","ActiveSupport::Gzip","classes.html\/ActiveSupport\/Gzip.html#M002833","(source)","Compresses a string using gzip. ",2],["compute_type","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001082","(type_name)","Returns the class type of the record using the current module as a prefix. So descendants of MyApp::Business::Account",2],["concat","ActionView::Helpers::TextHelper","classes.html\/ActionView\/Helpers\/TextHelper.html#M002266","(string, unused_binding = nil)","The preferred method of outputting text in your views is to use the <%= \"text\" %> eRuby syntax. The regular",2],["concat","ActiveSupport::SafeBuffer","classes.html\/ActiveSupport\/SafeBuffer.html#M002855","(value)","",2],["configuration","Rails","classes.html\/Rails.html#M000043","()","The Configuration instance used to configure the Rails environment ",2],["configuration=","Rails","classes.html\/Rails.html#M000044","(configuration)","",2],["configurations","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000954","","Contains the database configuration - as is typically stored in config\/database.yml - as a Hash. For",2],["connect","ActionController::Routing::RouteSet::Mapper","classes.html\/ActionController\/Routing\/RouteSet\/Mapper.html#M002107","(path, options = {})","Create an unnamed route with the provided +path+ and +options+. See ActionController::Routing for an",2],["connected?","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000717","()","Returns true if +ActiveRecord+ is connected. ",2],["connected?","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes.html\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html#M000705","(klass)","Returns true if a connection that's accessible to this class has already been opened. ",2],["connected?","ActiveRecord::ConnectionAdapters::ConnectionPool","classes.html\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M000684","()","Returns true if a connection has already been opened. ",2],["connection","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000680","()","Returns the connection currently associated with the class. This can also be used to \"borrow\" the connection",2],["connection","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000714","()","Returns the connection currently associated with the class. This can also be used to \"borrow\" the connection",2],["connection","ActiveRecord::ConnectionAdapters::ConnectionPool","classes.html\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M000678","()","Retrieve the connection associated with the current thread, or call #checkout to obtain one if necessary.",2],["connection","ActiveRecord::Migration","classes.html\/ActiveRecord\/Migration.html#M000895","()","",2],["connection","ActiveRecord::SessionStore::SqlBypass","classes.html\/ActiveRecord\/SessionStore\/SqlBypass.html#M001227","","Use the ActiveRecord::Base.connection by default. ",2],["connection","ActiveRecord::SessionStore::SqlBypass","classes.html\/ActiveRecord\/SessionStore\/SqlBypass.html#M001231","()","",2],["connection","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001453","(refresh = false)","An instance of ActiveResource::Connection that is the base \\connection to the remote service. The +refresh+",2],["connection","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001495","(refresh = false)","",2],["connection_handler","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000679","","The connection handler ",2],["connection_pool","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000715","()","",2],["connection_pools","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes.html\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html#M000698","()","",2],["constantize","ActiveSupport::CoreExtensions::String::Inflections","classes.html\/ActiveSupport\/CoreExtensions\/String\/Inflections.html#M002848","()","+constantize+ tries to find a declared constant with the name specified in the string. It raises a NameError",2],["constantize","ActiveSupport::Inflector","classes.html\/ActiveSupport\/Inflector.html#M002791","(camel_cased_word)","Tries to find a constant with the name specified in the argument string: \"Module\".constantize     # =>",2],["construct_count_options_from_args","ActiveRecord::Calculations::ClassMethods","classes.html\/ActiveRecord\/Calculations\/ClassMethods.html#M001389","(*args)","",2],["consumes?","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002608","(string)","Returns +true+ when the proxy class can handle the string. Returns +false+ otherwise. ",2],["content_columns","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001007","()","Returns an array of column objects where the primary id, all columns ending in \"_id\" or \"_count\", and",2],["content_for","ActionView::Helpers::CaptureHelper","classes.html\/ActionView\/Helpers\/CaptureHelper.html#M002453","(name, content = nil, &block)","Calling content_for stores a block of markup in an identifier for later use. You can make subsequent",2],["content_length","ActionController::Request","classes.html\/ActionController\/Request.html#M001996","()","Returns the content length of the request as an integer. ",2],["content_tag","ActionView::Helpers::TagHelper","classes.html\/ActionView\/Helpers\/TagHelper.html#M002469","(name, content_or_options_with_block = nil, options = nil, escape = true, &block)","Returns an HTML block tag of type +name+ surrounding the +content+. Add HTML attributes by passing an",2],["content_tag_for","ActionView::Helpers::RecordTagHelper","classes.html\/ActionView\/Helpers\/RecordTagHelper.html#M002376","(tag_name, record, *args, &block)","content_tag_for creates an HTML element with id and class parameters that relate to the specified Active",2],["content_type","ActionController::Request","classes.html\/ActionController\/Request.html#M001997","()","The MIME type of the HTTP request, such as Mime::XML. For backward compatibility, the post \\format is",2],["content_type","ActionController::Response","classes.html\/ActionController\/Response.html#M001896","()","Returns the response's content MIME type, or nil if content type has been set. ",2],["content_type","ActionView::Template","classes.html\/ActionView\/Template.html#M002207","()","",2],["content_type=","ActionController::Response","classes.html\/ActionController\/Response.html#M001895","(mime_type)","Sets the HTTP response's content MIME type. For example, in the controller you could write this: response.content_type",2],["controller_class","ActionController::TestCase","classes.html\/ActionController\/TestCase.html#M001741","()","",2],["controller_class=","ActionController::TestCase","classes.html\/ActionController\/TestCase.html#M001740","(new_class)","",2],["controller_class_name","ActionController::Base","classes.html\/ActionController\/Base.html#M001781","()","Converts the class name from something like \"OneModule::TwoModule::NeatController\" to \"NeatController\".",2],["controller_class_name","ActionController::Base","classes.html\/ActionController\/Base.html#M001794","()","Converts the class name from something like \"OneModule::TwoModule::NeatController\" to \"NeatController\".",2],["controller_name","ActionController::Base","classes.html\/ActionController\/Base.html#M001782","()","Converts the class name from something like \"OneModule::TwoModule::NeatController\" to \"neat\". ",2],["controller_name","ActionController::Base","classes.html\/ActionController\/Base.html#M001795","()","Converts the class name from something like \"OneModule::TwoModule::NeatController\" to \"neat\". ",2],["controller_name","ActionMailer::Base","classes.html\/ActionMailer\/Base.html#M002485","(value = nil)","Alias for #mailer_name",2],["controller_path","ActionController::Base","classes.html\/ActionController\/Base.html#M001796","()","Converts the class name from something like \"OneModule::TwoModule::NeatController\" to \"one_module\/two_module\/neat\".",2],["controller_path","ActionController::Base","classes.html\/ActionController\/Base.html#M001783","()","Converts the class name from something like \"OneModule::TwoModule::NeatController\" to \"one_module\/two_module\/neat\".",2],["controller_path","ActionMailer::Base","classes.html\/ActionMailer\/Base.html#M002486","(value = nil)","Alias for #mailer_name",2],["controller_path","ActionView::TestCase::TestController","classes.html\/ActionView\/TestCase\/TestController.html#M002171","()","",2],["controller_path","Rails::Plugin","classes.html\/Rails\/Plugin.html#M000286","()","",2],["controller_relative_to","ActionController::Routing","classes.html\/ActionController\/Routing.html#M001635","(controller, previous)","Returns a controller path for a new +controller+ based on a +previous+ controller path. Handles 4 scenarios:",2],["convert_key","HashWithIndifferentAccess","classes.html\/HashWithIndifferentAccess.html#M002968","(key)","",2],["convert_value","HashWithIndifferentAccess","classes.html\/HashWithIndifferentAccess.html#M002969","(value)","",2],["cookies","ActionController::Cookies","classes.html\/ActionController\/Cookies.html#M001747","()","Returns the cookie container, which operates as described above. ",2],["cookies","ActionController::TestProcess","classes.html\/ActionController\/TestProcess.html#M001770","()","",2],["count","ActiveRecord::Calculations::ClassMethods","classes.html\/ActiveRecord\/Calculations\/ClassMethods.html#M001383","(*args)","Count operates using three different approaches. * Count all: By not passing any parameters to count,",2],["count","ActiveRecord::Errors","classes.html\/ActiveRecord\/Errors.html#M001281","()","Alias for #size",2],["count","ActiveResource::Errors","classes.html\/ActiveResource\/Errors.html#M001429","()","Alias for #size",2],["count_by_sql","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000976","(sql)","Returns the result of an SQL statement that should only include a COUNT(*) in the SELECT part. The use",2],["create","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000969","(attributes = nil, &block)","Creates an object (or multiple objects) and saves it to the database, if validations pass. The resulting",2],["create","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001460","(attributes = {})","Creates a new resource instance and makes a request to the remote service that it be saved, making it",2],["create","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001497","()","Create (i.e., \\save to the remote service) the \\new resource. ",2],["create","ActiveSupport::TimeZone","classes.html\/ActiveSupport\/TimeZone.html#M002706","(name)","Alias for #new",2],["create!","ActiveRecord::Validations::ClassMethods","classes.html\/ActiveRecord\/Validations\/ClassMethods.html#M001314","(attributes = nil, &block)","Creates an object just like Base.create but calls save! instead of save so an exception is raised if",2],["create_database","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000459","(name, options = {})","Create a new MySQL database with optional <tt>:charset<\/tt> and <tt>:collation<\/tt>. Charset defaults",2],["create_database","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000758","(name, options = {})","Create a new PostgreSQL database.  Options include <tt>:owner<\/tt>, <tt>:template<\/tt>, <tt>:encoding<\/tt>,",2],["create_fixtures","Fixtures","classes.html\/Fixtures.html#M000850","(fixtures_directory, table_names, class_names = {})","",2],["create_fixtures","Object","classes.html\/Object.html#M000009","(*table_names, &block)","",2],["create_reflection","ActiveRecord::Reflection::ClassMethods","classes.html\/ActiveRecord\/Reflection\/ClassMethods.html#M001048","(macro, name, options, active_record)","",2],["create_savepoint","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000814","()","",2],["create_savepoint","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000453","()","",2],["create_savepoint","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000754","()","",2],["create_table","ActiveRecord::ConnectionAdapters::SchemaStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000603","(table_name, options = {})","Creates a new table with the name +table_name+. +table_name+ may either be a String or a Symbol. There",2],["create_table!","ActiveRecord::SessionStore::Session","classes.html\/ActiveRecord\/SessionStore\/Session.html#M001218","()","",2],["create_table!","ActiveRecord::SessionStore::SqlBypass","classes.html\/ActiveRecord\/SessionStore\/SqlBypass.html#M001235","()","",2],["css_select","ActionController::Assertions::SelectorAssertions","classes.html\/ActionController\/Assertions\/SelectorAssertions.html#M001719","(*args)","Select and return all matching elements. If called with a single argument, uses that argument as a selector",2],["current","ActiveSupport::CoreExtensions::Date::Calculations::ClassMethods","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations\/ClassMethods.html#M003160","()","Returns Time.zone.today when config.time_zone is set, otherwise just returns Date.today. ",2],["current","ActiveSupport::CoreExtensions::DateTime::Calculations::ClassMethods","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Calculations\/ClassMethods.html#M002901","()","",2],["current","ActiveSupport::CoreExtensions::Time::Zones::ClassMethods","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Zones\/ClassMethods.html#M003084","()","Returns <tt>Time.zone.now<\/tt> when <tt>config.time_zone<\/tt> is set, otherwise just returns <tt>Time.now<\/tt>.",2],["current_cycle","ActionView::Helpers::TextHelper","classes.html\/ActionView\/Helpers\/TextHelper.html#M002278","(name = \"default\")","Returns the current cycle string after a cycle has been started. Useful for complex table highlighing",2],["current_database","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000461","()","",2],["current_database","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000763","()","Returns the current database name. ",2],["current_hash","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes.html\/ActiveSupport\/XmlMini_LibXMLSAX\/HashBuilder.html#M002524","()","",2],["current_hash","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes.html\/ActiveSupport\/XmlMini_NokogiriSAX\/HashBuilder.html#M002511","()","",2],["current_migration_number","Rails::Generator::Commands::Base","classes.html\/Rails\/Generator\/Commands\/Base.html#M000382","()","",2],["current_page?","ActionView::Helpers::UrlHelper","classes.html\/ActionView\/Helpers\/UrlHelper.html#M002462","(options)","True if the current request URI was generated by the given +options+. ==== Examples Let's say we're in",2],["current_savepoint_name","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000817","()","",2],["custom_method_collection_url","ActiveResource::CustomMethods::ClassMethods","classes.html\/ActiveResource\/CustomMethods\/ClassMethods.html#M001551","(method_name, options = {})","",2],["cycle","ActionView::Helpers::TextHelper","classes.html\/ActionView\/Helpers\/TextHelper.html#M002277","(first_value, *values)","Creates a Cycle object whose _to_s_ method cycles through elements of an array every time it is called.",2],["daemon","Process","classes.html\/Process.html#M002951","(nochdir = nil, noclose = nil)","",2],["daemonize","Kernel","classes.html\/Kernel.html#M002934","()","Turns the current script into a daemon process that detaches from the console. It can be shut down with",2],["dasherize","ActiveSupport::CoreExtensions::String::Inflections","classes.html\/ActiveSupport\/CoreExtensions\/String\/Inflections.html#M002841","()","Replaces underscores with dashes in the string. \"puni_puni\" # => \"puni-puni\" ",2],["dasherize","ActiveSupport::Inflector","classes.html\/ActiveSupport\/Inflector.html#M002781","(underscored_word)","Replaces underscores with dashes in the string. Example: \"puni_puni\" # => \"puni-puni\" ",2],["data","ActionController::Session::AbstractStore::SessionHash","classes.html\/ActionController\/Session\/AbstractStore\/SessionHash.html#M001692","()","",2],["data","ActiveRecord::SessionStore::Session","classes.html\/ActiveRecord\/SessionStore\/Session.html#M001223","()","Lazy-unmarshal session state. ",2],["data","ActiveRecord::SessionStore::SqlBypass","classes.html\/ActiveRecord\/SessionStore\/SqlBypass.html#M001239","()","Lazy-unmarshal session state. ",2],["data_column","ActiveRecord::SessionStore::SqlBypass","classes.html\/ActiveRecord\/SessionStore\/SqlBypass.html#M001230","","The data field defaults to 'data'. ",2],["data_column_name","ActiveRecord::SessionStore::Session","classes.html\/ActiveRecord\/SessionStore\/Session.html#M001213","","Customizable data column name.  Defaults to 'data'. ",2],["data_column_size_limit","ActiveRecord::SessionStore::Session","classes.html\/ActiveRecord\/SessionStore\/Session.html#M001214","()","",2],["database_configuration","Rails::Configuration","classes.html\/Rails\/Configuration.html#M000103","()","Loads and returns the contents of the #database_configuration_file. The contents of the file are processed",2],["date_select","ActionView::Helpers::DateHelper","classes.html\/ActionView\/Helpers\/DateHelper.html#M002409","(object_name, method, options = {}, html_options = {})","Returns a set of select tags (one for year, month, and day) pre-selected for accessing a specified date-based",2],["datetime_format","Logger","classes.html\/Logger.html#M003211","()","Get the logging datetime format. Returns nil if the formatter does not support datetime formatting. ",2],["datetime_format=","Logger","classes.html\/Logger.html#M003209","(datetime_format)","Logging date-time format (string passed to +strftime+). Ignored if the formatter does not respond to",2],["datetime_select","ActionView::Helpers::DateHelper","classes.html\/ActionView\/Helpers\/DateHelper.html#M002437","(object_name, method, options = {}, html_options = {})","Returns a set of select tags (one for year, month, day, hour, and minute) pre-selected for accessing",2],["day","ActiveSupport::CoreExtensions::Numeric::Time","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Time.html#M003057","()","Alias for #days",2],["days","ActiveSupport::CoreExtensions::Numeric::Time","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Time.html#M003056","()","",2],["days_in_month","ActiveSupport::CoreExtensions::Time::Calculations::ClassMethods","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations\/ClassMethods.html#M003096","(month, year = now.year)","Return the number of days in the given month. If no year is specified, it will use the current year.",2],["debug","ActionView::Helpers::DebugHelper","classes.html\/ActionView\/Helpers\/DebugHelper.html#M002287","(object)","Returns a YAML representation of +object+ wrapped with <pre> and <\/pre>. If the object cannot be converted",2],["debug_rjs","ActionView::Base","classes.html\/ActionView\/Base.html#M002201","","Specify whether RJS responses should be wrapped in a try\/catch block that alert()s the caught exception",2],["debugger","Kernel","classes.html\/Kernel.html#M002936","()","Starts a debugging session if ruby-debug has been loaded (call script\/server --debugger to do load it).",2],["decode","ActiveResource::Formats::JsonFormat","classes.html\/ActiveResource\/Formats\/JsonFormat.html#M001544","(json)","",2],["decode","ActiveResource::Formats::XmlFormat","classes.html\/ActiveResource\/Formats\/XmlFormat.html#M001539","(xml)","",2],["decode","ActiveSupport::JSON::Backends::JSONGem","classes.html\/ActiveSupport\/JSON\/Backends\/JSONGem.html#M002803","(json)","Converts a JSON string into a Ruby object. ",2],["decode","ActiveSupport::JSON::Backends::Yajl","classes.html\/ActiveSupport\/JSON\/Backends\/Yajl.html#M002807","(json)","Parses a JSON string or IO and convert it into an object ",2],["decode","ActiveSupport::JSON::Backends::Yaml","classes.html\/ActiveSupport\/JSON\/Backends\/Yaml.html#M002809","(json)","Converts a JSON string into a Ruby object. ",2],["decode64","ActiveSupport::Base64","classes.html\/ActiveSupport\/Base64.html#M002767","(data)","Decodes a base 64 encoded string to its original representation. ActiveSupport::Base64.decode64(\"T3JpZ2luYWwgdW5lbmNvZGVkIHN0cmluZw==\")",2],["decode_credentials","ActionController::HttpAuthentication::Basic","classes.html\/ActionController\/HttpAuthentication\/Basic.html#M001654","(request)","",2],["decode_credentials","ActionController::HttpAuthentication::Digest","classes.html\/ActionController\/HttpAuthentication\/Digest.html#M001667","(header)","",2],["decode_credentials_header","ActionController::HttpAuthentication::Digest","classes.html\/ActionController\/HttpAuthentication\/Digest.html#M001666","(request)","",2],["decompose","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002640","()","Performs canonical decomposition on all the characters. Example: '\u00e9'.length #=> 2 '\u00e9'.mb_chars.decompose.to_s.length",2],["decompose_codepoints","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002650","(type, codepoints)","Decompose composed characters to the decomposed form. ",2],["decompress","ActiveSupport::Gzip","classes.html\/ActiveSupport\/Gzip.html#M002832","(source)","Decompresses a gzipped string. ",2],["decrement","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001119","(attribute, by = 1)","Initializes +attribute+ to zero if +nil+ and subtracts the value passed as +by+ (default is 1). The decrement",2],["decrement","ActiveSupport::Cache::Store","classes.html\/ActiveSupport\/Cache\/Store.html#M003377","(key, amount = 1)","",2],["decrement","ActiveSupport::Cache::Strategy::LocalCache","classes.html\/ActiveSupport\/Cache\/Strategy\/LocalCache.html#M002735","(key, amount = 1)","",2],["decrement","ActiveSupport::Cache::SynchronizedMemoryStore","classes.html\/ActiveSupport\/Cache\/SynchronizedMemoryStore.html#M002764","(key, amount = 1)","",2],["decrement!","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001120","(attribute, by = 1)","Wrapper around +decrement+ that saves the record. This method differs from its non-bang version in that",2],["decrement_counter","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000980","(counter_name, id)","Decrement a number field by one, usually representing a count. This works the same as increment_counter",2],["decrement_open_transactions","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000812","()","",2],["decrypt","ActiveSupport::MessageEncryptor","classes.html\/ActiveSupport\/MessageEncryptor.html#M002592","(encrypted_message)","",2],["decrypt_and_verify","ActiveSupport::MessageEncryptor","classes.html\/ActiveSupport\/MessageEncryptor.html#M002594","(value)","",2],["deep_merge","ActiveSupport::CoreExtensions::Hash::DeepMerge","classes.html\/ActiveSupport\/CoreExtensions\/Hash\/DeepMerge.html#M002975","(other_hash)","Returns a new hash with +self+ and +other_hash+ merged recursively. ",2],["deep_merge!","ActiveSupport::CoreExtensions::Hash::DeepMerge","classes.html\/ActiveSupport\/CoreExtensions\/Hash\/DeepMerge.html#M002976","(other_hash)","Returns a new hash with +self+ and +other_hash+ merged recursively. Modifies the receiver in place. ",2],["default","HashWithIndifferentAccess","classes.html\/HashWithIndifferentAccess.html#M002953","(key = nil)","",2],["default","Rails::Generator::GeneratedAttribute","classes.html\/Rails\/Generator\/GeneratedAttribute.html#M000334","()","",2],["default","RailsEnvironment","classes.html\/RailsEnvironment.html#M000136","()","",2],["default=","RailsEnvironment","classes.html\/RailsEnvironment.html#M000137","(rails_env)","",2],["default_error_messages","ActiveRecord::Errors","classes.html\/ActiveRecord\/Errors.html#M001264","()","",2],["default_options","ActiveRecord::Error","classes.html\/ActiveRecord\/Error.html#M001263","()","Return user options with default options. ",2],["default_options","Rails::Generator::Options","classes.html\/Rails\/Generator\/Options.html#M000319","()","Convenient access to class default options. ",2],["default_options","Rails::Generator::Options::ClassMethods","classes.html\/Rails\/Generator\/Options\/ClassMethods.html#M000315","(options = nil)","",2],["default_primary_key_type","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000602","()","",2],["default_scope","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001077","(options = {})","Sets the default options for the model. The format of the <tt>options<\/tt> argument is the same as in",2],["default_sequence_name","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000658","(table, column)","",2],["default_timezone","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000960","","Determines whether to use Time.local (using :local) or Time.utc (using :utc) when pulling dates and times",2],["default_url_options","ActionController::Base","classes.html\/ActionController\/Base.html#M001809","(options = nil)","Overwrite to implement a number of default options that all url_for-based methods will use. The default",2],["defaults","Repositories","classes.html\/Repositories.html#M000174","()","",2],["define","ActiveRecord::Schema","classes.html\/ActiveRecord\/Schema.html#M000426","(info={}, &block)","Eval the given block. All methods available to the current connection adapter are available within the",2],["define_around_helper","Logger","classes.html\/Logger.html#M003206","(level)","",2],["define_attribute_methods","ActiveRecord::AttributeMethods::ClassMethods","classes.html\/ActiveRecord\/AttributeMethods\/ClassMethods.html#M001175","()","Generates all the attribute related methods for columns in the database accessors, mutators and query",2],["define_callbacks","ActiveSupport::Callbacks::ClassMethods","classes.html\/ActiveSupport\/Callbacks\/ClassMethods.html#M003281","(*callbacks)","",2],["define_dispatcher_callbacks","ActionController::Dispatcher","classes.html\/ActionController\/Dispatcher.html#M001618","(cache_classes)","",2],["define_read_methods","ActiveRecord::AttributeMethods::ClassMethods","classes.html\/ActiveRecord\/AttributeMethods\/ClassMethods.html#M001177","()","Alias for #define_attribute_methods",2],["delay","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes.html\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M002343","(seconds = 1)","Executes the content of the block after a delay of +seconds+. Example: # Generates: #     setTimeout(function()",2],["delegate","Module","classes.html\/Module.html#M003018","(*methods)","Provides a delegate class method to easily expose contained objects' methods as your own. Pass one or",2],["delete","ActionController::Integration::Session","classes.html\/ActionController\/Integration\/Session.html#M001838","(path, parameters = nil, headers = nil)","Performs a DELETE request with the given parameters. See get() for more details. ",2],["delete","ActionController::TestProcess","classes.html\/ActionController\/TestProcess.html#M001762","(action, parameters = nil, session = nil, flash = nil)","Executes a request simulating DELETE HTTP method and set\/volley the response ",2],["delete","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001110","()","Deletes the record in the database and freezes this instance to reflect that no changes should be made",2],["delete","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000971","(id)","Deletes the row with a primary key matching the +id+ argument, using a SQL +DELETE+ statement, and returns",2],["delete","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000649","(sql, name = nil)","Executes the delete statement and returns the number of rows affected. ",2],["delete","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001462","(id, options = {})","Deletes the resources with the ID in the +id+ parameter. ==== Options All options specify \\prefix and",2],["delete","ActiveResource::Connection","classes.html\/ActiveResource\/Connection.html#M001520","(path, headers = {})","Execute a DELETE request (see HTTP protocol documentation if unfamiliar). Used to delete resources. ",2],["delete","ActiveResource::CustomMethods","classes.html\/ActiveResource\/CustomMethods.html#M001549","(custom_method_name, options = {})","",2],["delete","ActiveResource::CustomMethods::InstanceMethods","classes.html\/ActiveResource\/CustomMethods\/InstanceMethods.html#M001555","(method_name, options = {})","",2],["delete","ActiveSupport::Cache::FileStore","classes.html\/ActiveSupport\/Cache\/FileStore.html#M002742","(name, options = nil)","",2],["delete","ActiveSupport::Cache::MemoryStore","classes.html\/ActiveSupport\/Cache\/MemoryStore.html#M002752","(name, options = nil)","",2],["delete","ActiveSupport::Cache::Store","classes.html\/ActiveSupport\/Cache\/Store.html#M003373","(key, options = nil)","",2],["delete","ActiveSupport::Cache::Strategy::LocalCache","classes.html\/ActiveSupport\/Cache\/Strategy\/LocalCache.html#M002732","(key, options = nil)","",2],["delete","ActiveSupport::Cache::SynchronizedMemoryStore","classes.html\/ActiveSupport\/Cache\/SynchronizedMemoryStore.html#M002760","(name, options = nil)","",2],["delete","ActiveSupport::Callbacks::CallbackChain","classes.html\/ActiveSupport\/Callbacks\/CallbackChain.html#M003269","(callback)","",2],["delete","HashWithIndifferentAccess","classes.html\/HashWithIndifferentAccess.html#M002963","(key)","Removes a specified key from the hash. ",2],["delete?","ActionController::Request","classes.html\/ActionController\/Request.html#M001993","()","Is this a DELETE request?  Equivalent to <tt>request.method == :delete<\/tt>. ",2],["delete_all","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000975","(conditions = nil)","Deletes the records matching +conditions+ without instantiating the records first, and hence not calling",2],["delete_existing_fixtures","Fixtures","classes.html\/Fixtures.html#M000853","()","",2],["delete_matched","ActiveSupport::Cache::FileStore","classes.html\/ActiveSupport\/Cache\/FileStore.html#M002743","(matcher, options = nil)","",2],["delete_matched","ActiveSupport::Cache::MemoryStore","classes.html\/ActiveSupport\/Cache\/MemoryStore.html#M002753","(matcher, options = nil)","",2],["delete_matched","ActiveSupport::Cache::Store","classes.html\/ActiveSupport\/Cache\/Store.html#M003374","(matcher, options = nil)","",2],["delete_matched","ActiveSupport::Cache::SynchronizedMemoryStore","classes.html\/ActiveSupport\/Cache\/SynchronizedMemoryStore.html#M002761","(matcher, options = nil)","",2],["delete_sql","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000667","(sql, name = nil)","Executes the delete statement and returns the number of rows affected. ",2],["delete_via_redirect","ActionController::Integration::Session","classes.html\/ActionController\/Integration\/Session.html#M001833","(path, parameters = nil, headers = nil)","Performs a DELETE request, following any subsequent redirect. See +request_via_redirect+ for more information.",2],["deliver","ActionMailer::Base","classes.html\/ActionMailer\/Base.html#M002490","(mail)","Deliver the given mail object directly. This can be used to deliver a preconstructed mail object, like:",2],["deliver!","ActionMailer::Base","classes.html\/ActionMailer\/Base.html#M002496","(mail = @mail)","Delivers a TMail::Mail object. By default, it delivers the cached mail object (from the <tt>create!<\/tt>",2],["demodulize","ActiveSupport::CoreExtensions::String::Inflections","classes.html\/ActiveSupport\/CoreExtensions\/String\/Inflections.html#M002842","()","Removes the module part from the constant expression in the string. \"ActiveRecord::CoreExtensions::String::Inflections\".demodulize",2],["demodulize","ActiveSupport::Inflector","classes.html\/ActiveSupport\/Inflector.html#M002783","(class_name_in_module)","Removes the module part from the expression in the string. Examples: \"ActiveRecord::CoreExtensions::String::Inflections\".demodulize",2],["dependencies","Rails::GemDependency","classes.html\/Rails\/GemDependency.html#M000249","()","",2],["dependency","Rails::Generator::Commands::Base","classes.html\/Rails\/Generator\/Commands\/Base.html#M000379","(generator_name, args, runtime_options = {})","",2],["dependency","Rails::Generator::Commands::List","classes.html\/Rails\/Generator\/Commands\/List.html#M000412","(generator_name, args, options = {})","",2],["descends_from_active_record?","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001014","()","True if this isn't a concrete subclass needing a STI type condition. ",2],["destination_path","Rails::Generator::Base","classes.html\/Rails\/Generator\/Base.html#M000339","(relative_destination)","Return the full path from the destination root for the given path. Example for destination_root = '\/dest':",2],["destroy","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000972","(id)","Destroy an object (or multiple objects) that has the given id, the object is instantiated first, therefore",2],["destroy","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001111","()","Deletes the record in the database and freezes this instance to reflect that no changes should be made",2],["destroy","ActiveRecord::SessionStore::SqlBypass","classes.html\/ActiveRecord\/SessionStore\/SqlBypass.html#M001242","()","",2],["destroy","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001486","()","Deletes the resource from the remote service. ==== Examples my_id = 3 my_person = Person.find(my_id)",2],["destroy_all","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000974","(conditions = nil)","Destroys the records matching +conditions+ by instantiating each record and calling its +destroy+ method.",2],["destroyed?","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001139","()","Returns +true+ if the record has been destroyed. ",2],["determine_default_controller_class","ActionController::TestCase","classes.html\/ActionController\/TestCase.html#M001742","(name)","",2],["determine_default_helper_class","ActionView::TestCase","classes.html\/ActionView\/TestCase.html#M002178","(name)","",2],["determine_install_method","Commands::Install","classes.html\/Commands\/Install.html#M000207","()","",2],["diff","ActiveSupport::CoreExtensions::Hash::Diff","classes.html\/ActiveSupport\/CoreExtensions\/Hash\/Diff.html#M002977","(h2)","Returns a hash that represents the difference between two hashes. Examples: {1 => 2}.diff(1 => 2)   ",2],["directory","Rails::Generator::Commands::Create","classes.html\/Rails\/Generator\/Commands\/Create.html#M000399","(relative_path)","Create a directory including any missing parent directories. Always skips directories which exist. ",2],["directory","Rails::Generator::Commands::Destroy","classes.html\/Rails\/Generator\/Commands\/Destroy.html#M000408","(relative_path)","Remove each directory in the given path from right to left. Remove each subdirectory if it exists and",2],["directory","Rails::Generator::Commands::List","classes.html\/Rails\/Generator\/Commands\/List.html#M000417","(relative_path)","",2],["directory","Rails::Generator::Commands::Update","classes.html\/Rails\/Generator\/Commands\/Update.html#M000424","(relative_path)","",2],["dirname","ActiveSupport::Multibyte::UnicodeDatabase","classes.html\/ActiveSupport\/Multibyte\/UnicodeDatabase.html#M002618","()","Returns the directory in which the data files are stored ",2],["dirties_query_cache","ActiveRecord::ConnectionAdapters::QueryCache","classes.html\/ActiveRecord\/ConnectionAdapters\/QueryCache.html#M000670","(base, *method_names)","",2],["disable_dependency_loading","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000094","()","",2],["disable_referential_integrity","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000796","(&block)","Override to turn off referential integrity while executing <tt>&block<\/tt>. ",2],["discard","ActionController::Flash::FlashHash","classes.html\/ActionController\/Flash\/FlashHash.html#M001969","(k = nil)","Marks the entire flash or a single flash entry to be discarded by the end of the current action: flash.discard",2],["disconnect!","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000799","()","Disconnects from the database if already connected. Otherwise, this method does nothing. ",2],["disconnect!","ActiveRecord::ConnectionAdapters::ConnectionPool","classes.html\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M000685","()","Disconnects all connections in the pool, and clears the pool. ",2],["disconnect!","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000444","()","",2],["disconnect!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000726","()","Close the connection. ",2],["disconnect!","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000500","()","",2],["dispatch","ActionController::Dispatcher","classes.html\/ActionController\/Dispatcher.html#M001625","()","",2],["dispatch","ActionController::Dispatcher","classes.html\/ActionController\/Dispatcher.html#M001619","(cgi = nil, session_options = CgiRequest::DEFAULT_SESSION_OPTIONS, output = $stdout)","DEPRECATE: Remove CGI support ",2],["dispatch","DispatchServlet","classes.html\/DispatchServlet.html#M000000","(options = {})","Start the WEBrick server with the given options, mounting the DispatchServlet at <tt>\/<\/tt>. ",2],["dispatch_cgi","ActionController::CGIHandler","classes.html\/ActionController\/CGIHandler.html#M001753","(app, cgi, out = $stdout)","",2],["dispatch_cgi","ActionController::Dispatcher","classes.html\/ActionController\/Dispatcher.html#M001626","(cgi, session_options)","DEPRECATE: Remove CGI support ",2],["dispatcher_error","RailsFCGIHandler","classes.html\/RailsFCGIHandler.html#M000028","(e, msg = \"\")","",2],["dispatcher_log","RailsFCGIHandler","classes.html\/RailsFCGIHandler.html#M000027","(level, msg)","",2],["display","SourceAnnotationExtractor","classes.html\/SourceAnnotationExtractor.html#M000016","(results, options={})","Prints the mapping from filenames to annotations in +results+ ordered by filename. The +options+ hash",2],["distance_of_time_in_words","ActionView::Helpers::DateHelper","classes.html\/ActionView\/Helpers\/DateHelper.html#M002406","(from_time, to_time = 0, include_seconds = false, options = {})","Reports the approximate distance in time between two Time or Date objects or integers as seconds. Set",2],["distance_of_time_in_words_to_now","ActionView::Helpers::DateHelper","classes.html\/ActionView\/Helpers\/DateHelper.html#M002408","(from_time, include_seconds = false)","Alias for #time_ago_in_words",2],["distinct","ActiveRecord::ConnectionAdapters::SchemaStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000635","(columns, order_by)","SELECT DISTINCT clause for a given set of columns and a given ORDER BY clause. Both PostgreSQL and Oracle",2],["div_for","ActionView::Helpers::RecordTagHelper","classes.html\/ActionView\/Helpers\/RecordTagHelper.html#M002375","(record, *args, &block)","Produces a wrapper DIV element with id and class parameters that relate to the specified Active Record",2],["dom_class","ActionController::RecordIdentifier","classes.html\/ActionController\/RecordIdentifier.html#M001982","(record_or_class, prefix = nil)","The DOM class convention is to use the singular form of an object or class. Examples: dom_class(post)",2],["dom_class","ActionView::Helpers::RecordIdentificationHelper","classes.html\/ActionView\/Helpers\/RecordIdentificationHelper.html#M002285","(*args, &block)","See ActionController::RecordIdentifier.dom_class -- this is just a delegate to that for convenient access",2],["dom_id","ActionController::RecordIdentifier","classes.html\/ActionController\/RecordIdentifier.html#M001983","(record, prefix = nil)","The DOM id convention is to use the singular form of an object or class with the id following an underscore.",2],["dom_id","ActionView::Helpers::RecordIdentificationHelper","classes.html\/ActionView\/Helpers\/RecordIdentificationHelper.html#M002286","(*args, &block)","See ActionController::RecordIdentifier.dom_id -- this is just a delegate to that for convenient access",2],["domain","ActionController::Request","classes.html\/ActionController\/Request.html#M002022","(tld_length = 1)","Returns the \\domain part of a \\host, such as \"rubyonrails.org\" in \"www.rubyonrails.org\". You can specify",2],["downcase","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002637","()","Convert characters in the string to lowercase. Example: 'V\u011aDA A V\u00ddZKUM'.mb_chars.downcase.to_s #=> \"v\u011bda",2],["download","RecursiveHTTPFetcher","classes.html\/RecursiveHTTPFetcher.html#M000223","(link)","",2],["draggable","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes.html\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M002352","(id, options = {})","Creates a script.aculo.us draggable element. See ActionView::Helpers::ScriptaculousHelper for more information.",2],["draggable_element","ActionView::Helpers::ScriptaculousHelper","classes.html\/ActionView\/Helpers\/ScriptaculousHelper.html#M002245","(element_id, options = {})","Makes the element with the DOM ID specified by +element_id+ draggable. Example: <%= draggable_element(\"my_image\",",2],["drop_receiving","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes.html\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M002353","(id, options = {})","Creates a script.aculo.us drop receiving element. See ActionView::Helpers::ScriptaculousHelper for more",2],["drop_receiving_element","ActionView::Helpers::ScriptaculousHelper","classes.html\/ActionView\/Helpers\/ScriptaculousHelper.html#M002247","(element_id, options = {})","Makes the element with the DOM ID specified by +element_id+ receive dropped draggable elements (created",2],["drop_table","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000465","(table_name, options = {})","",2],["drop_table","ActiveRecord::ConnectionAdapters::SchemaStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000606","(table_name, options = {})","Drops a table from the database. ",2],["drop_table!","ActiveRecord::SessionStore::Session","classes.html\/ActiveRecord\/SessionStore\/Session.html#M001219","()","",2],["drop_table!","ActiveRecord::SessionStore::SqlBypass","classes.html\/ActiveRecord\/SessionStore\/SqlBypass.html#M001236","()","",2],["dst?","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002544","()","",2],["dup","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001484","()","Duplicate the current resource without saving it. ==== Examples my_invoice = Invoice.create(:customer",2],["dup","ActiveSupport::Callbacks::Callback","classes.html\/ActiveSupport\/Callbacks\/Callback.html#M003275","()","",2],["dup","HashWithIndifferentAccess","classes.html\/HashWithIndifferentAccess.html#M002960","()","Returns an exact copy of the hash. ",2],["duplicable?","Object","classes.html\/Object.html#M003264","()","Can you safely .dup this object? False for nil, false, true, symbols, and numbers; true otherwise. ",2],["each","ActionController::CGIHandler::ProperStream","classes.html\/ActionController\/CGIHandler\/ProperStream.html#M001751","()","",2],["each","ActionController::Response","classes.html\/ActionController\/Response.html#M001909","(&callback)","",2],["each","ActionController::StringCoercion::UglyBody","classes.html\/ActionController\/StringCoercion\/UglyBody.html#M002074","()","",2],["each","ActiveRecord::Errors","classes.html\/ActiveRecord\/Errors.html#M001274","()","Yields each attribute and associated message per error added. class Company < ActiveRecord::Base validates_presence_of",2],["each","ActiveResource::Errors","classes.html\/ActiveResource\/Errors.html#M001424","()","Yields each attribute and associated message per error added. ==== Examples my_person = Person.new(params[:person])",2],["each","Rails::Generator::GemGeneratorSource","classes.html\/Rails\/Generator\/GemGeneratorSource.html#M000376","()","Yield latest versions of generator gems. ",2],["each","Rails::Generator::GemPathSource","classes.html\/Rails\/Generator\/GemPathSource.html#M000377","()","Yield each generator within rails_generator subdirectories. ",2],["each","Rails::Generator::PathSource","classes.html\/Rails\/Generator\/PathSource.html#M000374","()","Yield each eligible subdirectory. ",2],["each","Rails::Generator::Source","classes.html\/Rails\/Generator\/Source.html#M000371","()","The each method must be implemented in subclasses. The base implementation raises an error. ",2],["each","Rails::VendorGemSourceIndex","classes.html\/Rails\/VendorGemSourceIndex.html#M000237","(&block)","",2],["each","Repositories","classes.html\/Repositories.html#M000166","(&block)","",2],["each","Repositories","classes.html\/Repositories.html#M000177","(&block)","",2],["each","Repository","classes.html\/Repository.html#M000180","(&block)","",2],["each_char","ActiveSupport::CoreExtensions::String::Iterators","classes.html\/ActiveSupport\/CoreExtensions\/String\/Iterators.html#M002860","()","Yields a single-character string for each character in the string. When $KCODE = 'UTF8', multi-byte characters",2],["each_error","ActiveRecord::Errors","classes.html\/ActiveRecord\/Errors.html#M001275","()","Yields each attribute and associated error per error added. class Company < ActiveRecord::Base validates_presence_of",2],["each_full","ActiveRecord::Errors","classes.html\/ActiveRecord\/Errors.html#M001276","()","Yields each full error message added. So <tt>Person.errors.add(\"first_name\", \"can't be empty\")<\/tt> will",2],["each_full","ActiveResource::Errors","classes.html\/ActiveResource\/Errors.html#M001425","()","Yields each full error message added. So Person.errors.add(\"first_name\", \"can't be empty\") will be returned",2],["each_with_hack","RackLintPatch::AllowStringSubclass","classes.html\/RackLintPatch\/AllowStringSubclass.html#M001731","()","",2],["each_with_object","Enumerable","classes.html\/Enumerable.html#M003259","(memo, &block)","Iterates over a collection, passing the current element *and* the +memo+ to the block. Handy for building",2],["element_path","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001500","(options = nil)","",2],["element_path","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001458","(id, prefix_options = {}, query_options = nil)","Gets the element path for the given ID in +id+.  If the +query_options+ parameter is omitted, Rails will",2],["empty?","ActiveRecord::Errors","classes.html\/ActiveRecord\/Errors.html#M001278","()","Returns true if no errors have been added. ",2],["empty?","ActiveRecord::NamedScope::Scope","classes.html\/ActiveRecord\/NamedScope\/Scope.html#M000837","()","",2],["empty_insert_statement","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000661","(table_name)","",2],["empty_insert_statement","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000567","(table_name)","",2],["emulate_booleans","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000428","","By default, the MysqlAdapter will consider all columns of type <tt>tinyint(1)<\/tt> as boolean. If you",2],["enable_warnings","Kernel","classes.html\/Kernel.html#M002930","()","Sets $VERBOSE to true for the duration of the block and back to its original value afterwards. ",2],["encode","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001490","(options={})","Returns the serialized string representation of the resource in the configured serialization format specified",2],["encode","ActiveResource::Formats::JsonFormat","classes.html\/ActiveResource\/Formats\/JsonFormat.html#M001543","(hash, options = nil)","",2],["encode","ActiveResource::Formats::XmlFormat","classes.html\/ActiveResource\/Formats\/XmlFormat.html#M001538","(hash, options={})","",2],["encode64","ActiveSupport::Base64","classes.html\/ActiveSupport\/Base64.html#M002766","(data)","Encodes a string to its base 64 representation. Each 60 characters of output is separated by a newline",2],["encode64s","ActiveSupport::CoreExtensions::Base64::Encoding","classes.html\/ActiveSupport\/CoreExtensions\/Base64\/Encoding.html#M002950","(value)","Encodes the value as base64 without the newline breaks. This makes the base64 encoding readily usable",2],["encode_credentials","ActionController::HttpAuthentication::Basic","classes.html\/ActionController\/HttpAuthentication\/Basic.html#M001655","(user_name, password)","",2],["encode_credentials","ActionController::HttpAuthentication::Digest","classes.html\/ActionController\/HttpAuthentication\/Digest.html#M001665","(http_method, credentials, password, password_is_ha1)","",2],["encoding","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000764","()","Returns the current database encoding format. ",2],["encrypt","ActiveSupport::MessageEncryptor","classes.html\/ActiveSupport\/MessageEncryptor.html#M002591","(value)","",2],["encrypt_and_sign","ActiveSupport::MessageEncryptor","classes.html\/ActiveSupport\/MessageEncryptor.html#M002593","(value)","",2],["end_document","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes.html\/ActiveSupport\/XmlMini_NokogiriSAX\/HashBuilder.html#M002513","()","",2],["end_element","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes.html\/ActiveSupport\/XmlMini_NokogiriSAX\/HashBuilder.html#M002516","(name)","",2],["end_of_day","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003171","()","Converts Date to a Time (or DateTime if necessary) with the time portion set to the end of the day (23:59:59)",2],["end_of_day","ActiveSupport::CoreExtensions::DateTime::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Calculations.html#M002914","()","Returns a new DateTime representing the end of the day (23:59:59) ",2],["end_of_day","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003129","()","Returns a new Time representing the end of the day, 23:59:59.999999 (.999999999 in ruby1.9) ",2],["end_of_month","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003194","()","Returns a new Date\/DateTime representing the end of the month (last day of the month; DateTime objects",2],["end_of_month","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003132","()","Returns a new Time representing the end of the month (end of the last day of the month) ",2],["end_of_quarter","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003198","()","Returns a new Date\/DateTime representing the end of the quarter (last day of march, june, september,",2],["end_of_quarter","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003136","()","Returns a new Time representing the end of the quarter (end of the last day of march, june, september,",2],["end_of_week","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003189","()","Returns a new Date\/DateTime representing the end of this week (Sunday, DateTime objects will have time",2],["end_of_week","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003122","()","Returns a new Time representing the end of this week (Sunday, 23:59:59) ",2],["end_of_year","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003202","()","Returns a new Time representing the end of the year (31st of december; DateTime objects will have time",2],["end_of_year","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003140","()","Returns a new Time representing the end of the year (end of the 31st of december) ",2],["ends_with?","ActiveSupport::CoreExtensions::String::StartsEndsWith","classes.html\/ActiveSupport\/CoreExtensions\/String\/StartsEndsWith.html#M002879","(suffix)","Does the string end with the specified +suffix+? ",2],["engine?","Rails::Plugin","classes.html\/Rails\/Plugin.html#M000282","()","Engines are plugins with an app\/ directory. ",2],["entity_expansion_limit=","REXML::Document","classes.html\/REXML\/Document.html#M002940","(val)","",2],["entry","ActionView::Helpers::AtomFeedHelper::AtomFeedBuilder","classes.html\/ActionView\/Helpers\/AtomFeedHelper\/AtomFeedBuilder.html#M002294","(record, options = {})","Creates an entry tag for a specific record and prefills the id using class and id. Options: * <tt>:published<\/tt>:",2],["enumerate","SourceAnnotationExtractor","classes.html\/SourceAnnotationExtractor.html#M000011","(tag, options={})","Prints all annotations with tag +tag+ under the root directories +app+, +lib+, and +test+ (recursively).",2],["env","Rails","classes.html\/Rails.html#M000050","()","",2],["environment","ActiveSupport::Testing::Performance::Benchmarker","classes.html\/ActiveSupport\/Testing\/Performance\/Benchmarker.html#M003324","()","",2],["environment","Rails::Configuration","classes.html\/Rails\/Configuration.html#M000105","()","Return the currently selected environment. By default, it returns the value of the RAILS_ENV constant.",2],["environment=","Commands::Plugin","classes.html\/Commands\/Plugin.html#M000183","(value)","",2],["environment_path","Rails::Configuration","classes.html\/Rails\/Configuration.html#M000104","()","The path to the current environment's file (<tt>development.rb<\/tt>, etc.). By default the file is at",2],["eql?","ActionView::Template::Path","classes.html\/ActionView\/Template\/Path.html#M002191","(path)","",2],["eql?","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001135","(comparison_object)","Delegates to == ",2],["eql?","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001482","(other)","Tests for equality (delegates to ==). ",2],["eql?","ActiveSupport::Callbacks::Callback","classes.html\/ActiveSupport\/Callbacks\/Callback.html#M003274","(other)","",2],["eql?","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002569","(other)","",2],["erase","Rails::Generator::Manifest","classes.html\/Rails\/Generator\/Manifest.html#M000308","()","Erase recorded actions. ",2],["erb_trim_mode","ActionView::TemplateHandlers::ERB","classes.html\/ActionView\/TemplateHandlers\/ERB.html#M002148","","Specify trim mode for the ERB compiler. Defaults to '-'. See ERb documentation for suitable values. ",2],["error","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes.html\/ActiveSupport\/XmlMini_NokogiriSAX\/HashBuilder.html#M002514","(error_message)","",2],["error_message_on","ActionView::Helpers::ActiveRecordHelper","classes.html\/ActionView\/Helpers\/ActiveRecordHelper.html#M002347","(object, method, *args)","Returns a string containing the error message attached to the +method+ on the +object+ if one exists.",2],["error_messages_for","ActionView::Helpers::ActiveRecordHelper","classes.html\/ActionView\/Helpers\/ActiveRecordHelper.html#M002348","(*params)","Returns a string with a <tt>DIV<\/tt> containing all of the error messages for the objects located as",2],["errors","ActiveRecord::Validations","classes.html\/ActiveRecord\/Validations.html#M001320","()","Returns the Errors object that holds all information about attribute error messages. ",2],["errors","ActiveResource::Validations","classes.html\/ActiveResource\/Validations.html#M001437","()","Returns the Errors object that holds all information about attribute error messages. ",2],["escape_bytea","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000735","(original_value)","Escapes binary strings for bytea input to the database. ",2],["escape_javascript","ActionView::Helpers::JavaScriptHelper","classes.html\/ActionView\/Helpers\/JavaScriptHelper.html#M002370","(javascript)","Escape carrier returns and single and double quotes for JavaScript segments. ",2],["escape_once","ActionView::Helpers::TagHelper","classes.html\/ActionView\/Helpers\/TagHelper.html#M002471","(html)","Returns an escaped version of +html+ without affecting existing escaped entities. ==== Examples escape_once(\"1",2],["establish_connection","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000681","(spec = nil)","Establishes the connection to the database. Accepts a hash as input where the <tt>:adapter<\/tt> key must",2],["establish_connection","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes.html\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html#M000699","(name, spec)","",2],["etag","ActionController::Response","classes.html\/ActionController\/Response.html#M001902","()","",2],["etag=","ActionController::Response","classes.html\/ActionController\/Response.html#M001904","(etag)","",2],["etag?","ActionController::Response","classes.html\/ActionController\/Response.html#M001903","()","",2],["etag_matches?","ActionController::Request","classes.html\/ActionController\/Request.html#M002003","(etag)","",2],["evaluate_remote_response","ActionView::Helpers::PrototypeHelper","classes.html\/ActionView\/Helpers\/PrototypeHelper.html#M002322","()","Returns '<tt>eval(request.responseText)<\/tt>' which is the JavaScript function that +form_remote_tag+",2],["even?","ActiveSupport::CoreExtensions::Integer::EvenOdd","classes.html\/ActiveSupport\/CoreExtensions\/Integer\/EvenOdd.html#M002943","()","",2],["exabyte","ActiveSupport::CoreExtensions::Numeric::Bytes","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Bytes.html#M003079","()","Alias for #exabytes",2],["exabytes","ActiveSupport::CoreExtensions::Numeric::Bytes","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Bytes.html#M003078","()","",2],["except","ActiveSupport::CoreExtensions::Hash::Except","classes.html\/ActiveSupport\/CoreExtensions\/Hash\/Except.html#M002978","(*keys)","Returns a new hash without the given keys. ",2],["except!","ActiveSupport::CoreExtensions::Hash::Except","classes.html\/ActiveSupport\/CoreExtensions\/Hash\/Except.html#M002979","(*keys)","Replaces the hash without the given keys. ",2],["excerpt","ActionView::Helpers::TextHelper","classes.html\/ActionView\/Helpers\/TextHelper.html#M002269","(text, phrase, *args)","Extracts an excerpt from +text+ that matches the first instance of +phrase+. The <tt>:radius<\/tt> option",2],["exclude?","Enumerable","classes.html\/Enumerable.html#M003263","(object)","The negative of the Enumerable#include?. Returns true if the collection does not include the object.",2],["execute","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000646","(sql, name = nil, skip_logging = false)","Executes the SQL statement in the context of this connection. ",2],["execute","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000748","(sql, name = nil)","Executes an SQL statement, returning a PGresult object on success or raising a PGError exception otherwise.",2],["exempt_from_layout","ActionView::Template","classes.html\/ActionView\/Template.html#M002202","(*extensions)","Don't render layouts for templates with the given extensions. ",2],["exempt_from_layout?","ActionView::Template","classes.html\/ActionView\/Template.html#M002229","()","",2],["exist","ActiveSupport::Cache::Strategy::LocalCache","classes.html\/ActiveSupport\/Cache\/Strategy\/LocalCache.html#M002733","(key, options = nil)","",2],["exist?","ActiveSupport::Cache::FileStore","classes.html\/ActiveSupport\/Cache\/FileStore.html#M002744","(name, options = nil)","",2],["exist?","ActiveSupport::Cache::MemoryStore","classes.html\/ActiveSupport\/Cache\/MemoryStore.html#M002754","(name, options = nil)","",2],["exist?","ActiveSupport::Cache::Store","classes.html\/ActiveSupport\/Cache\/Store.html#M003375","(key, options = nil)","",2],["exist?","ActiveSupport::Cache::SynchronizedMemoryStore","classes.html\/ActiveSupport\/Cache\/SynchronizedMemoryStore.html#M002762","(name,options = nil)","",2],["exist?","Repositories","classes.html\/Repositories.html#M000169","(uri)","",2],["existing_migrations","Rails::Generator::Commands::Base","classes.html\/Rails\/Generator\/Commands\/Base.html#M000385","(file_name)","",2],["exists?","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000968","(id_or_conditions = {})","Returns true if a record exists in the table that matches the +id+ or conditions given, or false otherwise.",2],["exists?","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001487","()","Evaluates to <tt>true<\/tt> if this resource is not <tt>new?<\/tt> and is found on the remote service.",2],["exists?","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001463","(id, options = {})","Asserts the existence of a resource, returning <tt>true<\/tt> if the resource is found. ==== Examples",2],["exit_handler","RailsFCGIHandler","classes.html\/RailsFCGIHandler.html#M000033","(signal)","",2],["exit_now_handler","RailsFCGIHandler","classes.html\/RailsFCGIHandler.html#M000032","(signal)","",2],["expand_cache_key","ActiveSupport::Cache","classes.html\/ActiveSupport\/Cache.html#M003367","(key, namespace = nil)","",2],["expand_hash_conditions_for_aggregates","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001088","(attrs)","Accepts a hash of SQL conditions and replaces those attributes that correspond to a +composed_of+ relationship",2],["expected_response","ActionController::HttpAuthentication::Digest","classes.html\/ActionController\/HttpAuthentication\/Digest.html#M001663","(http_method, uri, credentials, password, password_is_ha1=true)","Returns the expected response for a request of +http_method+ to +uri+ with the decoded +credentials+",2],["expire_action","ActionController::Caching::Actions","classes.html\/ActionController\/Caching\/Actions.html#M001580","(options = {})","",2],["expire_fragment","ActionController::Caching::Fragments","classes.html\/ActionController\/Caching\/Fragments.html#M001577","(key, options = nil)","Removes fragments from the cache. +key+ can take one of three forms: * String - This would normally take",2],["expire_page","ActionController::Caching::Pages","classes.html\/ActionController\/Caching\/Pages.html#M001592","(options = {})","Expires the page that was cached with the +options+ as a key. Example: expire_page :controller => \"lists\",",2],["expire_page","ActionController::Caching::Pages::ClassMethods","classes.html\/ActionController\/Caching\/Pages\/ClassMethods.html#M001587","(path)","Expires the page that was cached with the +path+ as a key. Example: expire_page \"\/lists\/show\" ",2],["expires_in","ActionController::Base","classes.html\/ActionController\/Base.html#M001814","(seconds, options = {})","Sets a HTTP 1.1 Cache-Control header. Defaults to issuing a \"private\" instruction, so that intermediate",2],["expires_now","ActionController::Base","classes.html\/ActionController\/Base.html#M001815","()","Sets a HTTP 1.1 Cache-Control header of \"no-cache\" so no caching should occur by the browser or intermediate",2],["extended","ActionController::UploadedFile","classes.html\/ActionController\/UploadedFile.html#M001749","(object)","",2],["extended","ActiveRecord::Dirty::ClassMethods","classes.html\/ActiveRecord\/Dirty\/ClassMethods.html#M001343","(base)","",2],["extended","ActiveRecord::Locking::Optimistic::ClassMethods","classes.html\/ActiveRecord\/Locking\/Optimistic\/ClassMethods.html#M001351","(base)","",2],["extension","ActiveResource::Formats::JsonFormat","classes.html\/ActiveResource\/Formats\/JsonFormat.html#M001541","()","",2],["extension","ActiveResource::Formats::XmlFormat","classes.html\/ActiveResource\/Formats\/XmlFormat.html#M001536","()","",2],["externals","RailsEnvironment","classes.html\/RailsEnvironment.html#M000143","()","",2],["externals=","RailsEnvironment","classes.html\/RailsEnvironment.html#M000144","(items)","",2],["extract_annotations_from","SourceAnnotationExtractor","classes.html\/SourceAnnotationExtractor.html#M000015","(file, pattern)","If +file+ is the filename of a file that contains annotations this method returns a hash with a single",2],["extract_default","ActiveRecord::ConnectionAdapters::Column","classes.html\/ActiveRecord\/ConnectionAdapters\/Column.html#M000533","(default)","",2],["extract_options!","ActiveSupport::CoreExtensions::Array::ExtractOptions","classes.html\/ActiveSupport\/CoreExtensions\/Array\/ExtractOptions.html#M003032","()","Extracts options from a set of arguments. Removes and returns the last element in the array if it's a",2],["extract_repository_uri","Commands::Discover","classes.html\/Commands\/Discover.html#M000204","(uri)","",2],["extract_value","ActionController::Routing::OptionalFormatSegment","classes.html\/ActionController\/Routing\/OptionalFormatSegment.html#M002104","()","",2],["fallback_string_to_date","ActiveRecord::ConnectionAdapters::Column","classes.html\/ActiveRecord\/ConnectionAdapters\/Column.html#M000546","(string)","",2],["fallback_string_to_time","ActiveRecord::ConnectionAdapters::Column","classes.html\/ActiveRecord\/ConnectionAdapters\/Column.html#M000547","(string)","",2],["fast_string_to_date","ActiveRecord::ConnectionAdapters::Column","classes.html\/ActiveRecord\/ConnectionAdapters\/Column.html#M000544","(string)","",2],["fast_string_to_time","ActiveRecord::ConnectionAdapters::Column","classes.html\/ActiveRecord\/ConnectionAdapters\/Column.html#M000545","(string)","Doesn't handle time zones. ",2],["fetch","ActiveSupport::Cache::Store","classes.html\/ActiveSupport\/Cache\/Store.html#M003370","(key, options = {})","Fetches data from the cache, using the given key. If there is data in the cache with the given key, then",2],["fetch","ActiveSupport::Cache::SynchronizedMemoryStore","classes.html\/ActiveSupport\/Cache\/SynchronizedMemoryStore.html#M002757","(key, options = {})","",2],["fetch","HashWithIndifferentAccess","classes.html\/HashWithIndifferentAccess.html#M002958","(key, *extras)","Fetches the value for the specified key, same as doing hash[key] ",2],["fetch","RecursiveHTTPFetcher","classes.html\/RecursiveHTTPFetcher.html#M000224","(links = @urls_to_fetch)","",2],["fetch_dir","RecursiveHTTPFetcher","classes.html\/RecursiveHTTPFetcher.html#M000225","(url)","",2],["field_set_tag","ActionView::Helpers::FormTagHelper","classes.html\/ActionView\/Helpers\/FormTagHelper.html#M002307","(legend = nil, options = nil, &block)","Creates a field set for grouping HTML form elements. <tt>legend<\/tt> will become the fieldset's title",2],["field_type","Rails::Generator::GeneratedAttribute","classes.html\/Rails\/Generator\/GeneratedAttribute.html#M000333","()","",2],["fields_for","ActionView::Helpers::FormHelper","classes.html\/ActionView\/Helpers\/FormHelper.html#M002387","(record_or_name_or_array, *args, &block)","Creates a scope around a specific model object like form_for, but doesn't create the form tags themselves.",2],["fifth","ActiveSupport::CoreExtensions::Array::Access","classes.html\/ActiveSupport\/CoreExtensions\/Array\/Access.html#M003044","()","Equal to <tt>self[4]<\/tt>. ",2],["file","Rails::Generator::Commands::Create","classes.html\/Rails\/Generator\/Commands\/Create.html#M000395","(relative_source, relative_destination, file_options = {}, &block)","Copy a file from source to destination with collision checking. The file_options hash accepts :chmod",2],["file","Rails::Generator::Commands::Destroy","classes.html\/Rails\/Generator\/Commands\/Destroy.html#M000406","(relative_source, relative_destination, file_options = {})","Remove a file if it exists and is a file. ",2],["file","Rails::Generator::Commands::List","classes.html\/Rails\/Generator\/Commands\/List.html#M000414","(relative_source, relative_destination, options = {})","",2],["file","Rails::Generator::Commands::Update","classes.html\/Rails\/Generator\/Commands\/Update.html#M000421","(relative_source, relative_destination, options = {})","",2],["file_field","ActionView::Helpers::FormHelper","classes.html\/ActionView\/Helpers\/FormHelper.html#M002392","(object_name, method, options = {})","Returns an file upload input tag tailored for accessing a specified attribute (identified by +method+)",2],["file_field_tag","ActionView::Helpers::FormTagHelper","classes.html\/ActionView\/Helpers\/FormTagHelper.html#M002300","(name, options = {})","Creates a file upload field.  If you are using file uploads then you will also need to set the multipart",2],["filename","ActionView::Template","classes.html\/ActionView\/Template.html#M002230","()","",2],["filename","ActiveSupport::Multibyte::UnicodeDatabase","classes.html\/ActiveSupport\/Multibyte\/UnicodeDatabase.html#M002619","()","Returns the filename for the data file for this version ",2],["filter_chain","ActionController::Filters::ClassMethods","classes.html\/ActionController\/Filters\/ClassMethods.html#M002065","()","Returns an array of Filter objects for this controller. ",2],["filter_parameter_logging","ActionController::Base","classes.html\/ActionController\/Base.html#M001790","(*filter_words, &block)","Replace sensitive parameter data from the request log. Filters parameters that have any of the arguments",2],["find","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000963","(*args)","Find operates with four different retrieval approaches: * Find by id - This can either be a specific",2],["find","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001461","(*arguments)","Core method for finding resources.  Used similarly to Active Record's +find+ method. ==== Arguments The",2],["find","ActiveSupport::Callbacks::CallbackChain","classes.html\/ActiveSupport\/Callbacks\/CallbackChain.html#M003268","(callback, &block)","",2],["find","Plugin","classes.html\/Plugin.html#M000146","(name)","",2],["find","RailsEnvironment","classes.html\/RailsEnvironment.html#M000135","(dir=nil)","",2],["find","SourceAnnotationExtractor","classes.html\/SourceAnnotationExtractor.html#M000013","(dirs=%w(app lib test))","Returns a hash that maps filenames under +dirs+ (recursively) to arrays with their annotations. Only",2],["find_all_tag","ActionController::TestProcess","classes.html\/ActionController\/TestProcess.html#M001775","(conditions)","",2],["find_by_session_id","ActiveRecord::SessionStore::Session","classes.html\/ActiveRecord\/SessionStore\/Session.html#M001215","(session_id)","Hook to set up sessid compatibility. ",2],["find_by_session_id","ActiveRecord::SessionStore::SqlBypass","classes.html\/ActiveRecord\/SessionStore\/SqlBypass.html#M001232","(session_id)","Look up a session by id and unmarshal its data if found. ",2],["find_by_sql","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000967","(sql)","Executes a custom SQL query against your database and returns all the results.  The results will be returned",2],["find_cmd","Object","classes.html\/Object.html#M000150","(*commands)","",2],["find_each","ActiveRecord::Batches::ClassMethods","classes.html\/ActiveRecord\/Batches\/ClassMethods.html#M001252","(options = {})","Yields each record that was found by the find +options+. The find is performed by find_in_batches with",2],["find_home","Repositories","classes.html\/Repositories.html#M000175","()","",2],["find_in","SourceAnnotationExtractor","classes.html\/SourceAnnotationExtractor.html#M000014","(dir)","Returns a hash that maps filenames under +dir+ (recursively) to arrays with their annotations. Only files",2],["find_in_batches","ActiveRecord::Batches::ClassMethods","classes.html\/ActiveRecord\/Batches\/ClassMethods.html#M001253","(options = {})","Yields each batch of records that was found by the find +options+ as an array. The size of each batch",2],["find_name","Rails::VendorGemSourceIndex","classes.html\/Rails\/VendorGemSourceIndex.html#M000235","(*args)","",2],["find_plugin","Repositories","classes.html\/Repositories.html#M000171","(name)","",2],["find_tag","ActionController::TestProcess","classes.html\/ActionController\/TestProcess.html#M001774","(conditions)","",2],["find_tzinfo","ActiveSupport::TimeZone","classes.html\/ActiveSupport\/TimeZone.html#M002704","(name)","TODO: Preload instead of lazy load for thread safety ",2],["finder?","ActiveRecord::DynamicFinderMatch","classes.html\/ActiveRecord\/DynamicFinderMatch.html#M001249","()","",2],["first","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000964","(*args)","A convenience wrapper for <tt>find(:first, *args)<\/tt>. You can pass in all the same arguments to this",2],["first","ActiveRecord::NamedScope::Scope","classes.html\/ActiveRecord\/NamedScope\/Scope.html#M000834","(*args)","",2],["fixture_file_upload","ActionController::TestProcess","classes.html\/ActionController\/TestProcess.html#M001777","(path, mime_type = nil, binary = false)","Shortcut for <tt>ActionController::TestUploadedFile.new(ActionController::TestCase.fixture_path + path,",2],["fixture_is_cached?","Fixtures","classes.html\/Fixtures.html#M000845","(connection, table_name)","",2],["fixtures","ActiveRecord::TestFixtures::ClassMethods","classes.html\/ActiveRecord\/TestFixtures\/ClassMethods.html#M000871","(*table_names)","",2],["flash","ActionController::TestProcess","classes.html\/ActionController\/TestProcess.html#M001769","()","",2],["flush","ActiveSupport::BufferedLogger","classes.html\/ActiveSupport\/BufferedLogger.html#M002677","()","",2],["flush_cache","ActiveSupport::Memoizable::InstanceMethods","classes.html\/ActiveSupport\/Memoizable\/InstanceMethods.html#M002668","(*syms, &block)","",2],["flush_logger","ActionController::Dispatcher","classes.html\/ActionController\/Dispatcher.html#M001629","()","",2],["follow_redirect!","ActionController::Integration::Session","classes.html\/ActionController\/Integration\/Session.html#M001828","()","Follow a single redirect response. If the last response was not a redirect, an exception will be raised.",2],["foreign_key","ActiveSupport::CoreExtensions::String::Inflections","classes.html\/ActiveSupport\/CoreExtensions\/String\/Inflections.html#M002847","(separate_class_name_and_id_with_underscore = true)","Creates a foreign key name from a class name. +separate_class_name_and_id_with_underscore+ sets whether",2],["foreign_key","ActiveSupport::Inflector","classes.html\/ActiveSupport\/Inflector.html#M002790","(class_name, separate_class_name_and_id_with_underscore = true)","Creates a foreign key name from a class name. +separate_class_name_and_id_with_underscore+ sets whether",2],["form","ActionView::Helpers::ActiveRecordHelper","classes.html\/ActionView\/Helpers\/ActiveRecordHelper.html#M002346","(record_name, options = {})","Returns an entire form with all needed input tags for a specified Active Record object. For example,",2],["form_authenticity_param","ActionController::RequestForgeryProtection","classes.html\/ActionController\/RequestForgeryProtection.html#M001642","()","",2],["form_authenticity_token","ActionController::RequestForgeryProtection","classes.html\/ActionController\/RequestForgeryProtection.html#M001644","()","Sets the token value for the current session.  Pass a <tt>:secret<\/tt> option in +protect_from_forgery+",2],["form_data?","ActionController::Request","classes.html\/ActionController\/Request.html#M002034","()","",2],["form_for","ActionView::Helpers::FormHelper","classes.html\/ActionView\/Helpers\/FormHelper.html#M002385","(record_or_name_or_array, *args, &proc)","Creates a form and a scope around a specific model object that is used as a base for questioning about",2],["form_remote_for","ActionView::Helpers::PrototypeHelper","classes.html\/ActionView\/Helpers\/PrototypeHelper.html#M002320","(record_or_name_or_array, *args, &proc)","Alias for #remote_form_for",2],["form_remote_tag","ActionView::Helpers::PrototypeHelper","classes.html\/ActionView\/Helpers\/PrototypeHelper.html#M002318","(options = {}, &block)","Returns a form tag that will submit using XMLHttpRequest in the background instead of the regular reloading",2],["form_tag","ActionView::Helpers::FormTagHelper","classes.html\/ActionView\/Helpers\/FormTagHelper.html#M002295","(url_for_options = {}, options = {}, *parameters_for_url, &block)","Starts a form tag that points the action to an url configured with <tt>url_for_options<\/tt> just like",2],["format","ActionController::Request","classes.html\/ActionController\/Request.html#M002005","()","Returns the Mime type for the \\format used in the request. GET \/posts\/5.xml   | request.format => Mime::XML",2],["format","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001448","()","Returns the current format, default is ActiveResource::Formats::XmlFormat. ",2],["format","ActiveSupport::Testing::Performance::Metrics::GcRuns","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/GcRuns.html#M003362","(measurement)","",2],["format","ActiveSupport::Testing::Performance::Metrics::GcTime","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/GcTime.html#M003365","(measurement)","",2],["format","ActiveSupport::Testing::Performance::Metrics::Memory","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/Memory.html#M003354","(measurement)","",2],["format","ActiveSupport::Testing::Performance::Metrics::Objects","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/Objects.html#M003358","(measurement)","",2],["format","ActiveSupport::Testing::Performance::Metrics::Time","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/Time.html#M003343","(measurement)","",2],["format=","ActionController::Request","classes.html\/ActionController\/Request.html#M002006","(extension)","Sets the \\format by string extension, which can be used to force custom formats that are not controlled",2],["format=","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001447","(mime_type_reference_or_format)","Sets the format that attributes are sent and received in from a mime type reference: Person.format =",2],["format_and_extension","ActionView::Template","classes.html\/ActionView\/Template.html#M002205","()","",2],["format_log_entry","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000820","(message, dump = nil)","",2],["formatted_offset","ActiveSupport::CoreExtensions::DateTime::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Conversions.html#M002890","(colon = true, alternate_utc_string = nil)","Returns the +utc_offset+ as an +HH:MM formatted string. Examples: datetime = DateTime.civil(2000, 1,",2],["formatted_offset","ActiveSupport::CoreExtensions::Time::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Conversions.html#M003089","(colon = true, alternate_utc_string = nil)","Returns the UTC offset as an +HH:MM formatted string. Time.local(2000).formatted_offset         # =>",2],["formatted_offset","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002551","(colon = true, alternate_utc_string = nil)","",2],["formatted_offset","ActiveSupport::TimeZone","classes.html\/ActiveSupport\/TimeZone.html#M002691","(colon=true, alternate_utc_string = nil)","Returns the offset of this time zone as a formatted string, of the format \"+HH:MM\". ",2],["formatted_polymorphic_path","ActionController::PolymorphicRoutes","classes.html\/ActionController\/PolymorphicRoutes.html#M001605","(record_or_hash, options = {})","",2],["formatted_polymorphic_url","ActionController::PolymorphicRoutes","classes.html\/ActionController\/PolymorphicRoutes.html#M001604","(record_or_hash, options = {})","",2],["formatter","Logger","classes.html\/Logger.html#M003213","()","Get the current formatter. The default formatter is a SimpleFormatter which only displays the log message",2],["fortnight","ActiveSupport::CoreExtensions::Numeric::Time","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Time.html#M003061","()","Alias for #fortnights",2],["fortnights","ActiveSupport::CoreExtensions::Numeric::Time","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Time.html#M003060","()","",2],["forty_two","ActiveSupport::CoreExtensions::Array::Access","classes.html\/ActiveSupport\/CoreExtensions\/Array\/Access.html#M003045","()","Equal to <tt>self[41]<\/tt>. Also known as accessing \"the reddit\". ",2],["fourth","ActiveSupport::CoreExtensions::Array::Access","classes.html\/ActiveSupport\/CoreExtensions\/Array\/Access.html#M003043","()","Equal to <tt>self[3]<\/tt>. ",2],["fragment_cache_key","ActionController::Caching::Fragments","classes.html\/ActionController\/Caching\/Fragments.html#M001572","(key)","Given a key (as described in <tt>expire_fragment<\/tt>), returns a key suitable for use in reading, writing,",2],["fragment_exist?","ActionController::Caching::Fragments","classes.html\/ActionController\/Caching\/Fragments.html#M001576","(key, options = nil)","Check if a cached fragment from the location signified by <tt>key<\/tt> exists (see <tt>expire_fragment<\/tt>",2],["framework_gem?","Rails::GemDependency","classes.html\/Rails\/GemDependency.html#M000255","()","",2],["framework_paths","Rails::Configuration","classes.html\/Rails\/Configuration.html#M000111","()","",2],["freeze","ActionView::ReloadableTemplate::Unfreezable","classes.html\/ActionView\/ReloadableTemplate\/Unfreezable.html#M002161","()","",2],["freeze","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001137","()","Freeze the attributes hash such that associations are still accessible, even on destroyed records. ",2],["freeze","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002586","()","",2],["freeze_with_memoizable","ActiveSupport::Memoizable::InstanceMethods","classes.html\/ActiveSupport\/Memoizable\/InstanceMethods.html#M002664","()","",2],["fresh?","ActionController::Request","classes.html\/ActionController\/Request.html#M002004","(response)","Check response freshness (Last-Modified and ETag) against request If-Modified-Since and If-None-Match",2],["fresh_when","ActionController::Base","classes.html\/ActionController\/Base.html#M001813","(options)","Sets the etag, last_modified, or both on the response and renders a \"304 Not Modified\" response if the",2],["from","ActiveSupport::CoreExtensions::Array::Access","classes.html\/ActiveSupport\/CoreExtensions\/Array\/Access.html#M003039","(position)","Returns the tail of the array from +position+. %w( a b c d ).from(0)  # => %w( a b c d ) %w( a b c d",2],["from_array","ActiveResource::Errors","classes.html\/ActiveResource\/Errors.html#M001431","(messages)","Grabs errors from an array of messages (like ActiveRecord::Validations) ",2],["from_directory_name","Rails::GemDependency","classes.html\/Rails\/GemDependency.html#M000246","(directory_name, load_spec=true)","",2],["from_json","ActiveRecord::Serialization","classes.html\/ActiveRecord\/Serialization.html#M000902","(json)","",2],["from_json","ActiveResource::Errors","classes.html\/ActiveResource\/Errors.html#M001432","(json)","Grabs errors from the json response. ",2],["from_now","ActiveSupport::CoreExtensions::Numeric::Time","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Time.html#M003065","(time = ::Time.now)","Alias for #since",2],["from_now","ActiveSupport::Duration","classes.html\/ActiveSupport\/Duration.html#M003291","(time = ::Time.current)","Alias for #since",2],["from_xml","ActiveRecord::Serialization","classes.html\/ActiveRecord\/Serialization.html#M000904","(xml)","",2],["from_xml","ActiveResource::Errors","classes.html\/ActiveResource\/Errors.html#M001433","(xml)","Grabs errors from the XML response. ",2],["from_xml","ActiveSupport::CoreExtensions::Hash::ClassMethods","classes.html\/ActiveSupport\/CoreExtensions\/Hash\/ClassMethods.html#M002980","(xml)","",2],["frozen?","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001138","()","Returns +true+ if the attributes hash has been frozen. ",2],["frozen?","Rails::GemDependency","classes.html\/Rails\/GemDependency.html#M000256","()","",2],["full_message","ActiveRecord::Error","classes.html\/ActiveRecord\/Error.html#M001258","()","",2],["full_messages","ActiveRecord::Errors","classes.html\/ActiveRecord\/Errors.html#M001277","(options = {})","Returns all the full error messages in an array. class Company < ActiveRecord::Base validates_presence_of",2],["full_messages","ActiveResource::Errors","classes.html\/ActiveResource\/Errors.html#M001426","()","Returns all the full error messages in an array. ==== Examples my_person = Person.new(params[:person])",2],["full_options","Rails::Generator::Options","classes.html\/Rails\/Generator\/Options.html#M000320","(runtime_options = {})","Merge together our instance options.  In increasing precedence: default_options   (class default options)",2],["full_options","Rails::Generator::Options::ClassMethods","classes.html\/Rails\/Generator\/Options\/ClassMethods.html#M000316","(runtime_options = {})","Merge together our class options.  In increasing precedence: default_options   (class default options)",2],["full_test_name","ActiveSupport::Testing::Performance","classes.html\/ActiveSupport\/Testing\/Performance.html#M003314","()","",2],["future?","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003163","()","Tells whether the Date object's date lies in the future ",2],["future?","ActiveSupport::CoreExtensions::DateTime::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Calculations.html#M002903","()","Tells whether the DateTime object's datetime lies in the future ",2],["future?","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003102","()","Tells whether the Time object's time lies in the future ",2],["future?","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002568","()","",2],["g_length","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002642","()","Returns the number of grapheme clusters in the string. Example: '\u0915\u094d\u0937\u093f'.mb_chars.length #=> 4 '\u0915\u094d\u0937\u093f'.mb_chars.g_length",2],["g_pack","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002647","(unpacked)","Reverse operation of g_unpack. Example: Chars.g_pack(Chars.g_unpack('\u0915\u094d\u0937\u093f')) #=> '\u0915\u094d\u0937\u093f' ",2],["g_unpack","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002646","(string)","Unpack the string at grapheme boundaries. Returns a list of character lists. Example: Chars.g_unpack('\u0915\u094d\u0937\u093f')",2],["gc_countdown","RailsFCGIHandler","classes.html\/RailsFCGIHandler.html#M000041","()","",2],["gem","Rails::Configuration","classes.html\/Rails\/Configuration.html#M000097","(name, options = {})","Adds a single Gem dependency to the rails application. By default, it will require the library with the",2],["generate","ActiveSupport::MessageVerifier","classes.html\/ActiveSupport\/MessageVerifier.html#M002684","(value)","",2],["generate_full_message","ActiveRecord::Error","classes.html\/ActiveRecord\/Error.html#M001262","(options = {})","Wraps an error message into a full_message format. The default full_message format for any locale is",2],["generate_message","ActiveRecord::Error","classes.html\/ActiveRecord\/Error.html#M001261","(options = {})","Translates an error message in it's default scope (<tt>activerecord.errrors.messages<\/tt>). Error messages",2],["generate_message","ActiveRecord::Errors","classes.html\/ActiveRecord\/Errors.html#M001284","(attribute, message = :invalid, options = {})","",2],["generate_optimisation_block","ActionController::Routing::Optimisation","classes.html\/ActionController\/Routing\/Optimisation.html#M002089","(route, kind)","",2],["generate_secret","Rails::SecretKeyGenerator","classes.html\/Rails\/SecretKeyGenerator.html#M000311","()","Generate a random secret key with the best possible method available on the current platform. ",2],["generated_methods?","ActiveRecord::AttributeMethods::ClassMethods","classes.html\/ActiveRecord\/AttributeMethods\/ClassMethods.html#M001174","()","",2],["generation_code","ActionController::Routing::Optimisation::Optimiser","classes.html\/ActionController\/Routing\/Optimisation\/Optimiser.html#M002092","()","",2],["generation_code","ActionController::Routing::Optimisation::PositionalArguments","classes.html\/ActionController\/Routing\/Optimisation\/PositionalArguments.html#M002096","()","",2],["generation_code","ActionController::Routing::Optimisation::PositionalArgumentsWithAdditionalParams","classes.html\/ActionController\/Routing\/Optimisation\/PositionalArgumentsWithAdditionalParams.html#M002098","()","This case uses almost the same code as positional arguments, but add a question mark and args.last.to_query",2],["get","ActionController::Integration::Session","classes.html\/ActionController\/Integration\/Session.html#M001835","(path, parameters = nil, headers = nil)","Performs a GET request with the given parameters. - +path+: The URI (as a String) on which you want to",2],["get","ActionController::TestProcess","classes.html\/ActionController\/TestProcess.html#M001759","(action, parameters = nil, session = nil, flash = nil)","Executes a request simulating GET HTTP method and set\/volley the response ",2],["get","ActiveResource::Connection","classes.html\/ActiveResource\/Connection.html#M001519","(path, headers = {})","Execute a GET request. Used to get (find) resources. ",2],["get","ActiveResource::CustomMethods","classes.html\/ActiveResource\/CustomMethods.html#M001546","(custom_method_name, options = {})","Invokes a GET to a given custom REST method. For example: Person.get(:active)  # GET \/people\/active.xml",2],["get","ActiveResource::CustomMethods::InstanceMethods","classes.html\/ActiveResource\/CustomMethods\/InstanceMethods.html#M001552","(method_name, options = {})","",2],["get?","ActionController::Request","classes.html\/ActionController\/Request.html#M001990","()","Is this a GET (or HEAD) request?  Equivalent to <tt>request.method == :get<\/tt>. ",2],["get_via_redirect","ActionController::Integration::Session","classes.html\/ActionController\/Integration\/Session.html#M001830","(path, parameters = nil, headers = nil)","Performs a GET request, following any subsequent redirect. See +request_via_redirect+ for more information.",2],["getgm","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002537","()","Alias for #utc",2],["getlocal","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002543","()","Alias for #localtime",2],["getutc","ActiveSupport::CoreExtensions::DateTime::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Calculations.html#M002916","()","Alias for #utc",2],["getutc","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002538","()","Alias for #utc",2],["gigabyte","ActiveSupport::CoreExtensions::Numeric::Bytes","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Bytes.html#M003073","()","Alias for #gigabytes",2],["gigabytes","ActiveSupport::CoreExtensions::Numeric::Bytes","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Bytes.html#M003072","()","",2],["git_url?","Plugin","classes.html\/Plugin.html#M000149","()","",2],["gmt?","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002547","()","Alias for #utc?",2],["gmt_offset","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002549","()","Alias for #utc_offset",2],["gmtime","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002539","()","Alias for #utc",2],["gmtoff","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002550","()","Alias for #utc_offset",2],["group_by","Enumerable","classes.html\/Enumerable.html#M003257","()","Collect an enumerable into sets, grouped by the result of a block. Useful, for example, for grouping",2],["grouped_collection_select","ActionView::Helpers::FormOptionsHelper","classes.html\/ActionView\/Helpers\/FormOptionsHelper.html#M002251","(object, method, collection, group_method, group_label_method, option_key_method, option_value_method, options = {}, html_options = {})","Returns <tt><select><\/tt>, <tt><optgroup><\/tt> and <tt><option><\/tt> tags for the collection of existing",2],["grouped_options_for_select","ActionView::Helpers::FormOptionsHelper","classes.html\/ActionView\/Helpers\/FormOptionsHelper.html#M002256","(grouped_options, selected_key = nil, prompt = nil)","Returns a string of <tt><option><\/tt> tags, like <tt>options_for_select<\/tt>, but wraps them with <tt><optgroup><\/tt>",2],["gsub_file","Rails::Generator::Commands::Base","classes.html\/Rails\/Generator\/Commands\/Base.html#M000388","(relative_destination, regexp, *args, &block)","",2],["guard_conditions","ActionController::Routing::Optimisation::Optimiser","classes.html\/ActionController\/Routing\/Optimisation\/Optimiser.html#M002091","()","",2],["guard_conditions","ActionController::Routing::Optimisation::PositionalArguments","classes.html\/ActionController\/Routing\/Optimisation\/PositionalArguments.html#M002095","()","",2],["guard_conditions","ActionController::Routing::Optimisation::PositionalArgumentsWithAdditionalParams","classes.html\/ActionController\/Routing\/Optimisation\/PositionalArgumentsWithAdditionalParams.html#M002097","()","",2],["h","ERB::Util","classes.html\/ERB\/Util.html#M002850","(s)","Alias for #html_escape",2],["ha1","ActionController::HttpAuthentication::Digest","classes.html\/ActionController\/HttpAuthentication\/Digest.html#M001664","(credentials, password)","",2],["handler_for_rescue","ActiveSupport::Rescuable","classes.html\/ActiveSupport\/Rescuable.html#M003304","(exception)","",2],["has_and_belongs_to_many","ActiveRecord::Associations::ClassMethods","classes.html\/ActiveRecord\/Associations\/ClassMethods.html#M000908","(association_id, options = {}, &extension)","Specifies a many-to-many relationship with another class. This associates two classes via an intermediate",2],["has_attribute?","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001131","(attr_name)","Returns true if the given attribute is in the attributes hash ",2],["has_default?","ActiveRecord::ConnectionAdapters::Column","classes.html\/ActiveRecord\/ConnectionAdapters\/Column.html#M000528","()","",2],["has_many","ActiveRecord::Associations::ClassMethods","classes.html\/ActiveRecord\/Associations\/ClassMethods.html#M000905","(association_id, options = {}, &extension)","Specifies a one-to-many association. The following methods for retrieval and query of collections of",2],["has_one","ActiveRecord::Associations::ClassMethods","classes.html\/ActiveRecord\/Associations\/ClassMethods.html#M000906","(association_id, options = {})","Specifies a one-to-one association with another class. This method should only be used if the other class",2],["hash","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001136","()","Delegates to id in order to allow two records of the same type and id to work with something like: [",2],["hash","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001483","()","Delegates to id in order to allow two resources of the same type and \\id to work with something like:",2],["hash","ActiveSupport::Callbacks::Callback","classes.html\/ActiveSupport\/Callbacks\/Callback.html#M003276","()","",2],["hash","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002579","()","Alias for #to_i",2],["head","ActionController::Base","classes.html\/ActionController\/Base.html#M001804","(*args)","Return a response that has no content (merely headers). The options argument is interpreted to be a hash",2],["head","ActionController::Integration::Session","classes.html\/ActionController\/Integration\/Session.html#M001839","(path, parameters = nil, headers = nil)","Performs a HEAD request with the given parameters. See get() for more details. ",2],["head","ActionController::TestProcess","classes.html\/ActionController\/TestProcess.html#M001763","(action, parameters = nil, session = nil, flash = nil)","Executes a request simulating HEAD HTTP method and set\/volley the response ",2],["head","ActiveResource::Connection","classes.html\/ActiveResource\/Connection.html#M001523","(path, headers = {})","Execute a HEAD request. Used to obtain meta-information about resources, such as whether they exist and",2],["head?","ActionController::Request","classes.html\/ActionController\/Request.html#M001994","()","Is this a HEAD request? Since <tt>request.method<\/tt> sees HEAD as <tt>:get<\/tt>, this \\method checks",2],["headers","ActionController::Request","classes.html\/ActionController\/Request.html#M001995","()","Provides access to the request's HTTP headers, for example: request.headers[\"Content-Type\"] # => \"text\/plain\"",2],["headers","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001454","()","",2],["helper","ActionController::Helpers::ClassMethods","classes.html\/ActionController\/Helpers\/ClassMethods.html#M001974","(*args, &block)","The +helper+ class method can take a series of helper module names, a block, or both. * <tt>*args<\/tt>:",2],["helper","Object","classes.html\/Object.html#M000017","()","",2],["helper_attr","ActionController::Helpers::ClassMethods","classes.html\/ActionController\/Helpers\/ClassMethods.html#M001976","(*attrs)","Declares helper accessors for controller attributes. For example, the following adds new +name+ and <tt>name=<\/tt>",2],["helper_class","ActionView::TestCase","classes.html\/ActionView\/TestCase.html#M002177","()","",2],["helper_method","ActionController::Helpers::ClassMethods","classes.html\/ActionController\/Helpers\/ClassMethods.html#M001975","(*methods)","Declare a controller method as a helper. For example, the following makes the +current_user+ controller",2],["helper_method","ActionView::TestCase","classes.html\/ActionView\/TestCase.html#M002179","(*methods)","",2],["helpers","ActionController::Helpers::ClassMethods","classes.html\/ActionController\/Helpers\/ClassMethods.html#M001977","()","Provides a proxy to access helpers methods from outside the view. ",2],["hex","ActiveSupport::SecureRandom","classes.html\/ActiveSupport\/SecureRandom.html#M002795","(n=nil)","SecureRandom.hex generates a random hex string. The argument n specifies the length of the random length.",2],["hidden_actions","ActionController::Base","classes.html\/ActionController\/Base.html#M001784","()","Return an array containing the names of public methods that have been marked hidden from the action processor.",2],["hidden_field","ActionView::Helpers::FormHelper","classes.html\/ActionView\/Helpers\/FormHelper.html#M002391","(object_name, method, options = {})","Returns a hidden input tag tailored for accessing a specified attribute (identified by +method+) on an",2],["hidden_field_tag","ActionView::Helpers::FormTagHelper","classes.html\/ActionView\/Helpers\/FormTagHelper.html#M002299","(name, value = nil, options = {})","Creates a hidden form input field used to transmit data that would be lost due to HTTP's statelessness",2],["hide","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes.html\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M002335","(*ids)","Hides the visible DOM elements with the given +ids+. Example: # Hide a few people # Generates: [\"person_29\",",2],["hide_action","ActionController::Base","classes.html\/ActionController\/Base.html#M001785","(*names)","Hide each of the given methods from being callable as actions. ",2],["highlight","ActionView::Helpers::TextHelper","classes.html\/ActionView\/Helpers\/TextHelper.html#M002268","(text, phrases, *args)","Highlights one or more +phrases+ everywhere in +text+ by inserting it into a <tt>:highlighter<\/tt> string.",2],["host","ActionController::Request","classes.html\/ActionController\/Request.html#M002017","()","Returns the host for this request, such as example.com. ",2],["host!","ActionController::Integration::Session","classes.html\/ActionController\/Integration\/Session.html#M001827","(name)","Set the host name to use in the next request. session.host! \"www.example.com\" ",2],["host_with_port","ActionController::Request","classes.html\/ActionController\/Request.html#M002018","()","Returns a \\host:\\port string for this request, such as \"example.com\" or \"example.com:8080\". ",2],["hour","ActiveSupport::CoreExtensions::Numeric::Time","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Time.html#M003055","()","Alias for #hours",2],["hours","ActiveSupport::CoreExtensions::Numeric::Time","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Time.html#M003054","()","",2],["html?","Mime::Type","classes.html\/Mime\/Type.html#M001950","()","",2],["html_document","ActionController::TestProcess","classes.html\/ActionController\/TestProcess.html#M001773","()","",2],["html_escape","ERB::Util","classes.html\/ERB\/Util.html#M002849","(s)","A utility method for escaping HTML tag characters. This method is also aliased as <tt>h<\/tt>. In your",2],["html_safe","ActiveSupport::SafeBuffer","classes.html\/ActiveSupport\/SafeBuffer.html#M002862","()","",2],["html_safe?","ActiveSupport::SafeBuffer","classes.html\/ActiveSupport\/SafeBuffer.html#M002861","()","",2],["html_safe?","Fixnum","classes.html\/Fixnum.html#M002854","()","",2],["html_safe?","Object","classes.html\/Object.html#M002853","()","",2],["http_only=","CGI::Cookie","classes.html\/CGI\/Cookie.html#M001956","(val)","Sets whether the Cookie is an HTTP only cookie or not. ",2],["httpdate","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002558","()","",2],["https!","ActionController::Integration::Session","classes.html\/ActionController\/Integration\/Session.html#M001825","(flag = true)","Specify whether or not the session should mimic a secure HTTPS request. session.https! session.https!(false)",2],["https?","ActionController::Integration::Session","classes.html\/ActionController\/Integration\/Session.html#M001826","()","Return +true+ if the session is mimicking a secure HTTPS request. if session.https? ... end ",2],["human","ActiveSupport::Inflector::Inflections","classes.html\/ActiveSupport\/Inflector\/Inflections.html#M002773","(rule, replacement)","Specifies a humanized form of a string by a regular expression rule or by a string mapping. When using",2],["human_attribute_name","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001012","(attribute_key_name, options = {})","Transforms attribute key names into a more humane format, such as \"First name\" instead of \"first_name\".",2],["human_name","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001013","(options = {})","Transform the modelname into a more humane format, using I18n. Defaults to the basic humanize method.",2],["human_name","ActiveRecord::ConnectionAdapters::Column","classes.html\/ActiveRecord\/ConnectionAdapters\/Column.html#M000532","()","Returns the human name of the column name. ===== Examples Column.new('sales_stage', ...).human_name #",2],["humanize","ActiveSupport::CoreExtensions::String::Inflections","classes.html\/ActiveSupport\/CoreExtensions\/String\/Inflections.html#M002846","()","Capitalizes the first word, turns underscores into spaces, and strips '_id'. Like +titleize+, this is",2],["humanize","ActiveSupport::Inflector","classes.html\/ActiveSupport\/Inflector.html#M002782","(lower_case_and_underscored_word)","Capitalizes the first word and turns underscores into spaces and strips a trailing \"_id\", if any. Like",2],["id","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001101","()","A model instance's primary key is always available as model.id whether you name it the default 'id' or",2],["id","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001478","()","Gets the <tt>\\id<\/tt> attribute of the resource. ",2],["id=","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001106","(value)","Sets the primary ID. ",2],["id=","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001479","(id)","Sets the <tt>\\id<\/tt> attribute of the resource. ",2],["id_from_response","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001499","(response)","Takes a response from a typical create post and pulls the ID out ",2],["identical?","Rails::Generator::Commands::Create","classes.html\/Rails\/Generator\/Commands\/Create.html#M000396","(source, destination, &block)","Checks if the source and the destination file are identical. If passed a block then the source file is",2],["identify","Fixtures","classes.html\/Fixtures.html#M000851","(label)","Returns a consistent, platform-independent identifier for +label+. Identifiers are positive integers",2],["if_modified_since","ActionController::Request","classes.html\/ActionController\/Request.html#M002000","()","",2],["if_none_match","ActionController::Request","classes.html\/ActionController\/Request.html#M002001","()","",2],["image_path","ActionView::Helpers::AssetTagHelper","classes.html\/ActionView\/Helpers\/AssetTagHelper.html#M002421","(source)","Computes the path to an image asset in the public images directory. Full paths from the document root",2],["image_submit_tag","ActionView::Helpers::FormTagHelper","classes.html\/ActionView\/Helpers\/FormTagHelper.html#M002306","(source, options = {})","Displays an image which when clicked will submit the form. <tt>source<\/tt> is passed to AssetTagHelper#image_path",2],["image_tag","ActionView::Helpers::AssetTagHelper","classes.html\/ActionView\/Helpers\/AssetTagHelper.html#M002424","(source, options = {})","Returns an html image tag for the +source+. The +source+ can be a full path or a file that exists in",2],["in","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003166","(seconds)","Alias for #since",2],["in","ActiveSupport::CoreExtensions::DateTime::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Calculations.html#M002909","(seconds)","Alias for #since",2],["in","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003108","(seconds)","Alias for #since",2],["in_char_class?","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002645","(codepoint, classes)","Detect whether the codepoint is in a certain character class. Returns +true+ when it's in the specified",2],["in_clause_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M000631","()","the maximum number of elements in an IN (x,y,z) clause ",2],["in_groups","ActiveSupport::CoreExtensions::Array::Grouping","classes.html\/ActiveSupport\/CoreExtensions\/Array\/Grouping.html#M003029","(number, fill_with = nil)","Splits or iterates over the array in +number+ of groups, padding any remaining slots with +fill_with+",2],["in_groups_of","ActiveSupport::CoreExtensions::Array::Grouping","classes.html\/ActiveSupport\/CoreExtensions\/Array\/Grouping.html#M003028","(number, fill_with = nil)","Splits or iterates over the array in groups of size +number+, padding any remaining slots with +fill_with+",2],["in_time_zone","ActiveSupport::CoreExtensions::Time::Zones","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Zones.html#M003086","(zone = ::Time.zone)","Returns the simultaneous time in <tt>Time.zone<\/tt>. Time.zone = 'Hawaii'         # => 'Hawaii' Time.utc(2000).in_time_zone",2],["in_time_zone","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002541","(new_zone = ::Time.zone)","Returns the simultaneous time in <tt>Time.zone<\/tt>, or the specified zone. ",2],["include","ActionView::Base::ProxyModule","classes.html\/ActionView\/Base\/ProxyModule.html#M002212","(*args)","",2],["include?","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002614","(other)","Returns +true+ if contained string contains _other_. Returns +false+ otherwise. Example: 'Caf\u00e9'.mb_chars.include?('\u00e9')",2],["include_with_range?","ActiveSupport::CoreExtensions::Range::IncludeRange","classes.html\/ActiveSupport\/CoreExtensions\/Range\/IncludeRange.html#M002927","(value)","Extends the default Range#include? to support range comparisons. (1..5).include?(1..5) # => true (1..5).include?(2..3)",2],["included","ActionController::CgiExt::Stdinput","classes.html\/ActionController\/CgiExt\/Stdinput.html#M001960","(base)","",2],["included","ActionController::Cookies","classes.html\/ActionController\/Cookies.html#M001746","(base)","",2],["included","ActionController::Flash","classes.html\/ActionController\/Flash.html#M001962","(base)","",2],["included","ActionController::RequestForgeryProtection","classes.html\/ActionController\/RequestForgeryProtection.html#M001638","(base)","",2],["included","ActionController::TestCase::RaiseActionExceptions","classes.html\/ActionController\/TestCase\/RaiseActionExceptions.html#M001737","(base)","",2],["included","ActionController::TestProcess","classes.html\/ActionController\/TestProcess.html#M001758","(base)","",2],["included","ActionController::UploadedFile","classes.html\/ActionController\/UploadedFile.html#M001748","(base)","",2],["included","ActionView::TemplateHandlers::Compilable","classes.html\/ActionView\/TemplateHandlers\/Compilable.html#M002476","(base)","",2],["included","ActiveRecord::AutosaveAssociation","classes.html\/ActiveRecord\/AutosaveAssociation.html#M001398","(base)","",2],["included","ActiveRecord::ConnectionAdapters::QueryCache","classes.html\/ActiveRecord\/ConnectionAdapters\/QueryCache.html#M000669","(base)","",2],["included","ActiveRecord::Dirty","classes.html\/ActiveRecord\/Dirty.html#M001328","(base)","",2],["included","ActiveRecord::NamedScope","classes.html\/ActiveRecord\/NamedScope.html#M000829","(base)","All subclasses of ActiveRecord::Base have one named scope: * <tt>scoped<\/tt> - which allows for the creation",2],["included","ActiveRecord::Serialization","classes.html\/ActiveRecord\/Serialization.html#M000899","(base)","",2],["included","ActiveRecord::TestFixtures","classes.html\/ActiveRecord\/TestFixtures.html#M000869","(base)","",2],["included","ActiveRecord::Transactions","classes.html\/ActiveRecord\/Transactions.html#M000821","(base)","",2],["included","ActiveResource::CustomMethods","classes.html\/ActiveResource\/CustomMethods.html#M001545","(base)","",2],["included","ActiveSupport::Callbacks","classes.html\/ActiveSupport\/Callbacks.html#M003280","(base)","",2],["included","ActiveSupport::Memoizable::InstanceMethods","classes.html\/ActiveSupport\/Memoizable\/InstanceMethods.html#M002663","(base)","",2],["included","ActiveSupport::Testing::Performance","classes.html\/ActiveSupport\/Testing\/Performance.html#M003313","(base)","",2],["included","ActiveSupport::Testing::SetupAndTeardown","classes.html\/ActiveSupport\/Testing\/SetupAndTeardown.html#M003310","(base)","",2],["included","RackLintPatch::AllowStringSubclass","classes.html\/RackLintPatch\/AllowStringSubclass.html#M001730","(base)","",2],["included","Rails::Generator::Commands","classes.html\/Rails\/Generator\/Commands.html#M000354","(base)","Even more convenient access to commands.  Include Commands in the generator Base class to get a nice",2],["included","Rails::Generator::Lookup","classes.html\/Rails\/Generator\/Lookup.html#M000358","(base)","",2],["included","Rails::Generator::Options","classes.html\/Rails\/Generator\/Options.html#M000312","(base)","",2],["included_in_classes","Module","classes.html\/Module.html#M003009","()","Returns the classes in the current ObjectSpace where this module has been mixed in according to Module#included_modules.",2],["increment","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001117","(attribute, by = 1)","Initializes +attribute+ to zero if +nil+ and adds the value passed as +by+ (default is 1). The increment",2],["increment","ActiveSupport::Cache::Store","classes.html\/ActiveSupport\/Cache\/Store.html#M003376","(key, amount = 1)","",2],["increment","ActiveSupport::Cache::Strategy::LocalCache","classes.html\/ActiveSupport\/Cache\/Strategy\/LocalCache.html#M002734","(key, amount = 1)","",2],["increment","ActiveSupport::Cache::SynchronizedMemoryStore","classes.html\/ActiveSupport\/Cache\/SynchronizedMemoryStore.html#M002763","(key, amount = 1)","",2],["increment!","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001118","(attribute, by = 1)","Wrapper around +increment+ that saves the record. This method differs from its non-bang version in that",2],["increment_counter","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000979","(counter_name, id)","Increment a number field by one, usually representing a count. This is used for caching aggregate values,",2],["increment_open_transactions","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000811","()","",2],["index","ActiveRecord::ConnectionAdapters::Table","classes.html\/ActiveRecord\/ConnectionAdapters\/Table.html#M000581","(column_name, options = {})","Adds a new index to the table. +column_name+ can be a single Symbol, or an Array of Symbols. See SchemaStatements#add_index",2],["index","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002620","(needle, offset=0)","Returns the position _needle_ in the string, counting in codepoints. Returns +nil+ if _needle_ isn't",2],["index_by","Enumerable","classes.html\/Enumerable.html#M003260","()","Convert an enumerable to a hash. Examples: people.index_by(&:login) => { \"nextangle\" => <Person ...>,",2],["index_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000618","(table_name, index_name, default)","Verify the existence of an index. The default argument is returned if the underlying implementation does",2],["index_name_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M000627","()","the maximum length of an index name ",2],["index_name_length","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000780","()","",2],["indexes","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000761","(table_name, name = nil)","Returns the list of all indexes for a table. ",2],["indexes_per_table","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M000629","()","the maximum number of indexes per table ",2],["inflections","ActiveSupport::Inflector","classes.html\/ActiveSupport\/Inflector.html#M002775","()","Yields a singleton instance of Inflector::Inflections so you can specify additional inflector rules.",2],["inflections_with_route_reloading","ActionController::Routing","classes.html\/ActionController\/Routing.html#M001636","(&block)","Ensures that routes are reloaded when Rails inflections are updated. ",2],["info","Plugin","classes.html\/Plugin.html#M000154","()","",2],["inheritance_column","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000995","()","Defines the column name for use with single table inheritance -- can be set in subclasses like so: self.inheritance_column",2],["inherited","ActiveRecord::Observing::ClassMethods","classes.html\/ActiveRecord\/Observing\/ClassMethods.html#M001361","(subclass)","Notify observers when the observed class is subclassed. ",2],["inherited_with_options","Rails::Generator::Options::ClassMethods","classes.html\/Rails\/Generator\/Options\/ClassMethods.html#M000313","(sub)","",2],["init_path","Rails::GemPlugin","classes.html\/Rails\/GemPlugin.html#M000303","()","",2],["initialize_cache","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000079","()","",2],["initialize_database","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000077","()","This initialization routine does nothing unless <tt>:active_record<\/tt> is one of the frameworks to load",2],["initialize_database_middleware","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000078","()","",2],["initialize_dependency_mechanism","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000085","()","Sets the dependency loading mechanism based on the value of Configuration#cache_classes. ",2],["initialize_encoding","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000076","()","For Ruby 1.8, this initialization sets $KCODE to 'u' to enable the multibyte safe operations. Plugin",2],["initialize_framework_caches","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000080","()","",2],["initialize_framework_logging","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000082","()","Sets the logger for Active Record, Action Controller, and Action Mailer (but only for those frameworks",2],["initialize_framework_settings","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000090","()","Initializes framework-specific settings for each of the loaded frameworks (Configuration#frameworks).",2],["initialize_framework_views","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000083","()","Sets +ActionController::Base#view_paths+ and +ActionMailer::Base#template_root+ (but only for those frameworks",2],["initialize_i18n","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000088","()","Set the i18n configuration from config.i18n but special-case for the load_path which should be appended",2],["initialize_logger","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000081","()","If the RAILS_DEFAULT_LOGGER constant is already set, this initialization routine does nothing. If the",2],["initialize_metal","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000089","()","",2],["initialize_query","CGI::QueryExtension","classes.html\/CGI\/QueryExtension.html#M001953","()","Neuter CGI parameter parsing. ",2],["initialize_routing","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000084","()","If Action Controller is not one of the loaded frameworks (Configuration#frameworks) this does nothing.",2],["initialize_schema_migrations_table","ActiveRecord::ConnectionAdapters::SchemaStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000621","()","Should not be called normally, but this operation is non-destructive. The migrations module handles this",2],["initialize_time_zone","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000087","()","Sets the default value for Time.zone, and turns on ActiveRecord::Base#time_zone_aware_attributes. If",2],["initialize_whiny_nils","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000086","()","Loads support for \"whiny nil\" (noisy warnings when methods are invoked on +nil+ values) if Configuration#whiny_nils",2],["initialize_with_stdinput","ActionController::CgiExt::Stdinput","classes.html\/ActionController\/CgiExt\/Stdinput.html#M001961","(type = nil, stdinput = $stdin)","",2],["initialize_without_template_tracking","ActionView::Base","classes.html\/ActionView\/Base.html#M002168","(*args)","Alias for #initialize",2],["initialized=","Rails","classes.html\/Rails.html#M000046","(initialized)","",2],["initialized?","Rails","classes.html\/Rails.html#M000045","()","",2],["input","ActionView::Helpers::ActiveRecordHelper","classes.html\/ActionView\/Helpers\/ActiveRecordHelper.html#M002345","(record_name, method, options = {})","Returns a default input tag for the type of object returned by the method. For example, if <tt>@post<\/tt>",2],["insert","ActionController::MiddlewareStack","classes.html\/ActionController\/MiddlewareStack.html#M001929","(index, *args, &block)","",2],["insert","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000647","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","Returns the last auto-generated ID from the affected table. ",2],["insert","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000745","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","Executes an INSERT query and returns the new record's ID ",2],["insert","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002613","(offset, fragment)","Inserts the passed string at specified codepoint offsets. Example: 'Caf\u00e9'.mb_chars.insert(4, ' p\u00e9rifer\u00f4l').to_s",2],["insert_after","ActionController::MiddlewareStack","classes.html\/ActionController\/MiddlewareStack.html#M001931","(index, *args, &block)","",2],["insert_before","ActionController::MiddlewareStack","classes.html\/ActionController\/MiddlewareStack.html#M001930","(index, *args, &block)","Alias for #insert",2],["insert_fixture","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000660","(fixture, table_name)","Inserts the given fixture into the table. Overridden in adapters that require something beyond a simple",2],["insert_fixtures","Fixtures","classes.html\/Fixtures.html#M000854","()","",2],["insert_html","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes.html\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M002330","(position, id, *options_for_render)","Inserts HTML at the specified +position+ relative to the DOM element identified by the given +id+. +position+",2],["insert_sql","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000665","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","Returns the last auto-generated ID from the affected table. ",2],["inspect","ActionController::MiddlewareStack::Middleware","classes.html\/ActionController\/MiddlewareStack\/Middleware.html#M001925","()","",2],["inspect","ActionController::Session::AbstractStore::SessionHash","classes.html\/ActionController\/Session\/AbstractStore\/SessionHash.html#M001693","()","",2],["inspect","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001016","()","Returns a string like 'Post id:integer, title:string, body:text' ",2],["inspect","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001142","()","Returns the contents of the record as a nicely formatted string. ",2],["inspect","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002553","()","",2],["install","Plugin","classes.html\/Plugin.html#M000152","(method=nil, options = {})","",2],["install","Rails::GemDependency","classes.html\/Rails\/GemDependency.html#M000263","()","",2],["install","RailsEnvironment","classes.html\/RailsEnvironment.html#M000138","(name_uri_or_plugin)","",2],["install_gem_spec_stubs","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000059","()","If Rails is vendored and RubyGems is available, install stub GemSpecs for Rails, Active Support, Active",2],["install_signal_handler","RailsFCGIHandler","classes.html\/RailsFCGIHandler.html#M000030","(signal, handler = nil)","",2],["install_signal_handlers","RailsFCGIHandler","classes.html\/RailsFCGIHandler.html#M000029","()","",2],["installed?","Plugin","classes.html\/Plugin.html#M000151","()","",2],["installed?","Rails::GemDependency","classes.html\/Rails\/GemDependency.html#M000257","()","",2],["instance","Rails::Generator::Commands","classes.html\/Rails\/Generator\/Commands.html#M000353","(command, generator)","Here's a convenient way to get a handle on generator commands. Command.instance('destroy', my_generator)",2],["instance","Rails::Generator::Lookup","classes.html\/Rails\/Generator\/Lookup.html#M000359","(generator_name, args, runtime_options = {})","Convenience method to instantiate another generator. ",2],["instance","Rails::Generator::Lookup::ClassMethods","classes.html\/Rails\/Generator\/Lookup\/ClassMethods.html#M000367","(generator_name, args = [], runtime_options = {})","Convenience method to lookup and instantiate a generator. ",2],["instance","Repositories","classes.html\/Repositories.html#M000176","()","",2],["instance_exec","Object","classes.html\/Object.html#M003240","(*args, &block)","Evaluate the block with the given arguments within the context of this object, so self is set to the",2],["instance_method_already_implemented?","ActiveRecord::AttributeMethods::ClassMethods","classes.html\/ActiveRecord\/AttributeMethods\/ClassMethods.html#M001176","(method_name)","Checks whether the method is defined in the model or any of its subclasses that also derive from Active",2],["instance_variable_defined?","Object","classes.html\/Object.html#M003244","(variable)","",2],["instance_variable_names","Object","classes.html\/Object.html#M003246","()","",2],["instantiate_all_loaded_fixtures","Fixtures","classes.html\/Fixtures.html#M000849","(object, load_instances = true)","",2],["instantiate_fixtures","Fixtures","classes.html\/Fixtures.html#M000848","(object, table_name, fixtures, load_instances = true)","",2],["instantiate_observers","ActiveRecord::Observing::ClassMethods","classes.html\/ActiveRecord\/Observing\/ClassMethods.html#M001360","()","Instantiate the global Active Record observers. ",2],["instantiator?","ActiveRecord::DynamicFinderMatch","classes.html\/ActiveRecord\/DynamicFinderMatch.html#M001250","()","",2],["interpolation_chunk","ActionController::Routing::OptionalFormatSegment","classes.html\/ActionController\/Routing\/OptionalFormatSegment.html#M002101","()","",2],["invalid?","ActiveRecord::Errors","classes.html\/ActiveRecord\/Errors.html#M001270","(attribute)","Returns true if the specified +attribute+ has errors associated with it. class Company < ActiveRecord::Base",2],["invalid?","ActiveRecord::Validations","classes.html\/ActiveRecord\/Validations.html#M001319","()","Performs the opposite of <tt>valid?<\/tt>. Returns true if errors were added, false otherwise. ",2],["invalid?","ActiveResource::Errors","classes.html\/ActiveResource\/Errors.html#M001420","(attribute)","Returns true if the specified +attribute+ has errors associated with it. ==== Examples my_resource =",2],["invoke!","Rails::Generator::Commands::Base","classes.html\/Rails\/Generator\/Commands\/Base.html#M000355","()","Replay action manifest.  RewindBase subclass rewinds manifest. ",2],["invoke!","Rails::Generator::Commands::RewindBase","classes.html\/Rails\/Generator\/Commands\/RewindBase.html#M000393","()","Rewind action manifest. ",2],["irregular","ActiveSupport::Inflector::Inflections","classes.html\/ActiveSupport\/Inflector\/Inflections.html#M002771","(singular, plural)","Specifies a new irregular that applies to both pluralization and singularization at the same time. This",2],["is_a?","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002584","(klass)","Say we're a Time to thwart type checking. ",2],["is_utf8?","ActiveSupport::CoreExtensions::String::Multibyte","classes.html\/ActiveSupport\/CoreExtensions\/String\/Multibyte.html#M002869","()","Returns true if the string has UTF-8 semantics (a String used for purely byte resources is unlikely to",2],["is_utf8?","ActiveSupport::CoreExtensions::String::Multibyte","classes.html\/ActiveSupport\/CoreExtensions\/String\/Multibyte.html#M002872","()","",2],["isdst","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002545","()","Alias for #dst?",2],["iso8601","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002555","(fraction_digits = 0)","Alias for #xmlschema",2],["j","ERB::Util","classes.html\/ERB\/Util.html#M002852","(s)","Alias for #json_escape",2],["javascript_include_tag","ActionView::Helpers::AssetTagHelper","classes.html\/ActionView\/Helpers\/AssetTagHelper.html#M002413","(*sources)","Returns an html script tag for each of the +sources+ provided. You can pass in the filename (.js extension",2],["javascript_path","ActionView::Helpers::AssetTagHelper","classes.html\/ActionView\/Helpers\/AssetTagHelper.html#M002411","(source)","Computes the path to a javascript asset in the public javascripts directory. If the +source+ filename",2],["javascript_tag","ActionView::Helpers::JavaScriptHelper","classes.html\/ActionView\/Helpers\/JavaScriptHelper.html#M002371","(content_or_options_with_block = nil, html_options = {}, &block)","Returns a JavaScript tag with the +content+ inside. Example: javascript_tag \"alert('All is good')\" Returns:",2],["joins_per_query","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M000633","()","maximum number of joins in a single query ",2],["json_escape","ERB::Util","classes.html\/ERB\/Util.html#M002851","(s)","A utility method for escaping HTML entities in JSON strings. This method is also aliased as <tt>j<\/tt>.",2],["keep","ActionController::Flash::FlashHash","classes.html\/ActionController\/Flash\/FlashHash.html#M001968","(k = nil)","Keeps either the entire current flash or a specific flash entry available for the next action: flash.keep",2],["key?","ActionController::Request","classes.html\/ActionController\/Request.html#M001987","(key)","",2],["key?","HashWithIndifferentAccess","classes.html\/HashWithIndifferentAccess.html#M002957","(key)","Checks the hash for a key matching the argument passed in: hash = HashWithIndifferentAccess.new hash[\"key\"]",2],["kilobyte","ActiveSupport::CoreExtensions::Numeric::Bytes","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Bytes.html#M003069","()","Alias for #kilobytes",2],["kilobytes","ActiveSupport::CoreExtensions::Numeric::Bytes","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Bytes.html#M003068","()","",2],["kind_of?","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002585","(klass)","Alias for #is_a?",2],["klass","ActionController::MiddlewareStack::Middleware","classes.html\/ActionController\/MiddlewareStack\/Middleware.html#M001922","()","",2],["klass","ActiveRecord::ConnectionAdapters::Column","classes.html\/ActiveRecord\/ConnectionAdapters\/Column.html#M000529","()","Returns the Ruby class that corresponds to the abstract data type. ",2],["klass","ActiveRecord::Reflection::MacroReflection","classes.html\/ActiveRecord\/Reflection\/MacroReflection.html#M001059","()","Returns the class for the macro.  For example, <tt>composed_of :balance, :class_name => 'Money'<\/tt>",2],["klass","Rails::Generator::Spec","classes.html\/Rails\/Generator\/Spec.html#M000328","()","Look up the generator class.  Require its class file, find the class in ObjectSpace, tag it with this",2],["l","ActionController::Translation","classes.html\/ActionController\/Translation.html#M001882","(*args)","Alias for #localize",2],["l","ActionView::Helpers::TranslationHelper","classes.html\/ActionView\/Helpers\/TranslationHelper.html#M002382","(*args)","Alias for #localize",2],["label","ActionView::Helpers::FormHelper","classes.html\/ActionView\/Helpers\/FormHelper.html#M002388","(object_name, method, text = nil, options = {})","Returns a label tag tailored for labelling an input field for a specified attribute (identified by +method+)",2],["label_tag","ActionView::Helpers::FormTagHelper","classes.html\/ActionView\/Helpers\/FormTagHelper.html#M002298","(name, text = nil, options = {})","Creates a label field ==== Options   * Creates standard HTML attributes for the tag. ==== Examples label_tag",2],["last","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000965","(*args)","A convenience wrapper for <tt>find(:last, *args)<\/tt>. You can pass in all the same arguments to this",2],["last","ActiveRecord::NamedScope::Scope","classes.html\/ActiveRecord\/NamedScope\/Scope.html#M000835","(*args)","",2],["last_modified","ActionController::Response","classes.html\/ActionController\/Response.html#M001899","()","",2],["last_modified=","ActionController::Response","classes.html\/ActionController\/Response.html#M001901","(utc_time)","",2],["last_modified?","ActionController::Response","classes.html\/ActionController\/Response.html#M001900","()","",2],["layout","ActionController::Layout::ClassMethods","classes.html\/ActionController\/Layout\/ClassMethods.html#M001596","(template_name, conditions = {}, auto = false)","If a layout is specified, all rendered actions will have their result rendered when the layout <tt>yield<\/tt>s.",2],["length","ActiveRecord::Errors","classes.html\/ActiveRecord\/Errors.html#M001282","()","Alias for #size",2],["length","ActiveResource::Errors","classes.html\/ActiveResource\/Errors.html#M001430","()","Alias for #size",2],["length","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002630","()","Alias for #size",2],["limited_update_conditions","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000663","(where_sql, quoted_table_name, quoted_primary_key)","",2],["limited_update_conditions","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000481","(where_sql, quoted_table_name, quoted_primary_key)","",2],["link_to","ActionView::Helpers::UrlHelper","classes.html\/ActionView\/Helpers\/UrlHelper.html#M002456","(*args, &block)","Creates a link tag of the given +name+ using a URL created by the set of +options+. See the valid options",2],["link_to_function","ActionView::Helpers::JavaScriptHelper","classes.html\/ActionView\/Helpers\/JavaScriptHelper.html#M002368","(name, *args, &block)","Returns a link of the given +name+ that will trigger a JavaScript +function+ using the onclick handler",2],["link_to_if","ActionView::Helpers::UrlHelper","classes.html\/ActionView\/Helpers\/UrlHelper.html#M002460","(condition, name, options = {}, html_options = {}, &block)","Creates a link tag of the given +name+ using a URL created by the set of +options+ if +condition+ is",2],["link_to_remote","ActionView::Helpers::PrototypeHelper","classes.html\/ActionView\/Helpers\/PrototypeHelper.html#M002315","(name, options = {}, html_options = nil)","Returns a link to a remote action defined by <tt>options[:url]<\/tt> (using the url_for format) that's",2],["link_to_unless","ActionView::Helpers::UrlHelper","classes.html\/ActionView\/Helpers\/UrlHelper.html#M002459","(condition, name, options = {}, html_options = {}, &block)","Creates a link tag of the given +name+ using a URL created by the set of +options+ unless +condition+",2],["link_to_unless_current","ActionView::Helpers::UrlHelper","classes.html\/ActionView\/Helpers\/UrlHelper.html#M002458","(name, options = {}, html_options = {}, &block)","Creates a link tag of the given +name+ using a URL created by the set of +options+ unless the current",2],["links","RecursiveHTTPFetcher","classes.html\/RecursiveHTTPFetcher.html#M000222","(base_url, contents)","",2],["literal","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes.html\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M002328","(code)","Returns an object whose <tt>to_json<\/tt> evaluates to +code+. Use this to pass a literal JavaScript expression",2],["ljust","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002624","(integer, padstr=' ')","Works just like <tt>String#ljust<\/tt>, only integer specifies characters instead of bytes. Example: \"\u00be",2],["load","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001492","(attributes)","A method to manually load attributes from a \\hash. Recursively loads collections of resources.  This",2],["load","ActiveSupport::Multibyte::UnicodeDatabase","classes.html\/ActiveSupport\/Multibyte\/UnicodeDatabase.html#M002616","()","Loads the Unicode database and returns all the internal objects of UnicodeDatabase. ",2],["load","Rails::GemDependency","classes.html\/Rails\/GemDependency.html#M000264","()","",2],["load","Rails::Plugin","classes.html\/Rails\/Plugin.html#M000278","(initializer)","Evaluates a plugin's init.rb file. ",2],["load!","ActionView::ReloadableTemplate::ReloadablePath","classes.html\/ActionView\/ReloadableTemplate\/ReloadablePath.html#M002153","()","Alias for #new_request!",2],["load!","ActionView::Template","classes.html\/ActionView\/Template.html#M002234","()","",2],["load!","ActionView::Template::EagerPath","classes.html\/ActionView\/Template\/EagerPath.html#M002197","()","",2],["load!","ActionView::Template::Path","classes.html\/ActionView\/Template\/Path.html#M002193","()","",2],["load!","Repositories","classes.html\/Repositories.html#M000172","()","",2],["load_application_classes","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000075","()","Eager load application classes ",2],["load_application_initializers","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000092","()","",2],["load_attributes_from_response","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001498","(response)","",2],["load_environment","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000072","()","Loads the environment specified by Configuration#environment_path, which is typically one of development,",2],["load_gems","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000067","()","",2],["load_observers","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000073","()","",2],["load_paths","Rails::Plugin","classes.html\/Rails\/Plugin.html#M000277","()","Returns a list of paths this plugin wishes to make available in <tt>$LOAD_PATH<\/tt>. ",2],["load_paths_added?","Rails::GemDependency","classes.html\/Rails\/GemDependency.html#M000258","()","",2],["load_plugins","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000070","()","Loads all plugins in <tt>config.plugin_paths<\/tt>.  <tt>plugin_paths<\/tt> defaults to <tt>vendor\/plugins<\/tt>",2],["load_specification","Rails::VendorGemSourceIndex","classes.html\/Rails\/VendorGemSourceIndex.html#M000234","(gem_dir)","",2],["load_view_paths","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000074","()","",2],["loaded?","ActiveRecord::SessionStore::Session","classes.html\/ActiveRecord\/SessionStore\/Session.html#M001224","()","Has the session been loaded yet? ",2],["loaded?","ActiveRecord::SessionStore::SqlBypass","classes.html\/ActiveRecord\/SessionStore\/SqlBypass.html#M001240","()","",2],["loaded?","Rails::GemDependency","classes.html\/Rails\/GemDependency.html#M000259","()","",2],["loaded?","Rails::Plugin","classes.html\/Rails\/Plugin.html#M000279","()","",2],["local","ActiveSupport::TimeZone","classes.html\/ActiveSupport\/TimeZone.html#M002695","(*args)","Method for creating new ActiveSupport::TimeWithZone instance in time zone of +self+ from given values.",2],["local_constant_names","ActiveSupport::CoreExtensions::Module","classes.html\/ActiveSupport\/CoreExtensions\/Module.html#M003025","()","Returns the names of the constants defined locally rather than the constants themselves. See <tt>local_constants<\/tt>.",2],["local_constants","ActiveSupport::CoreExtensions::Module","classes.html\/ActiveSupport\/CoreExtensions\/Module.html#M003023","()","Returns the constants that have been defined locally by this object and not in an ancestor. This method",2],["local_offset","ActiveSupport::CoreExtensions::DateTime::Calculations::ClassMethods","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Calculations\/ClassMethods.html#M002900","()","DateTimes aren't aware of DST rules, so use a consistent non-DST offset when creating a DateTime with",2],["local_request?","ActionController::Rescue","classes.html\/ActionController\/Rescue.html#M002134","()","True if the request came from localhost, 127.0.0.1. Override this method if you wish to redefine the",2],["local_time","ActiveSupport::CoreExtensions::Time::Calculations::ClassMethods","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations\/ClassMethods.html#M003099","(*args)","Wraps class method +time_with_datetime_fallback+ with +utc_or_local+ set to <tt>:local<\/tt>. ",2],["local_to_utc","ActiveSupport::TimeZone","classes.html\/ActiveSupport\/TimeZone.html#M002701","(time, dst=true)","Adjust the given time to the simultaneous time in UTC. Returns a Time.utc() instance. ",2],["locale_files","Rails::Plugin","classes.html\/Rails\/Plugin.html#M000290","()","",2],["locale_path","Rails::Plugin","classes.html\/Rails\/Plugin.html#M000289","()","",2],["localize","ActionController::Translation","classes.html\/ActionController\/Translation.html#M001881","(*args)","",2],["localize","ActionView::Helpers::TranslationHelper","classes.html\/ActionView\/Helpers\/TranslationHelper.html#M002381","(*args)","Delegates to I18n.localize with no additional functionality. ",2],["localized?","Rails::Plugin","classes.html\/Rails\/Plugin.html#M000284","()","Returns true if there is any localization file in locale_path ",2],["localtime","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002542","()","Returns a <tt>Time.local()<\/tt> instance of the simultaneous time in your system's <tt>ENV['TZ']<\/tt>",2],["location","ActionController::Response","classes.html\/ActionController\/Response.html#M001893","()","",2],["location=","ActionController::Response","classes.html\/ActionController\/Response.html#M001894","(url)","",2],["lock!","ActiveRecord::Locking::Pessimistic","classes.html\/ActiveRecord\/Locking\/Pessimistic.html#M001345","(lock = true)","Obtain a row lock on this record. Reloads the record to obtain the requested lock. Pass an SQL locking",2],["locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","classes.html\/ActiveRecord\/Locking\/Optimistic\/ClassMethods.html#M001354","()","The version column used for optimistic locking. Defaults to +lock_version+. ",2],["locking_enabled?","ActiveRecord::Locking::Optimistic::ClassMethods","classes.html\/ActiveRecord\/Locking\/Optimistic\/ClassMethods.html#M001352","()","Is optimistic locking enabled for this table? Returns true if the +lock_optimistically+ flag is set to",2],["log","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000819","(sql, name)","",2],["log_error","ActionController::Rescue","classes.html\/ActionController\/Rescue.html#M002131","(exception)","Overwrite to implement custom logging of errors. By default logs as fatal. ",2],["log_info","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000818","(sql, name, ms)","",2],["logger","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001438","","The logger for diagnosing and tracing Active Resource calls. ",2],["logger","Rails","classes.html\/Rails.html#M000047","()","",2],["logger","RailsFCGIHandler","classes.html\/RailsFCGIHandler.html#M000026","()","",2],["lookup","Mime::Type","classes.html\/Mime\/Type.html#M001937","(string)","",2],["lookup","Rails::Generator::Lookup::ClassMethods","classes.html\/Rails\/Generator\/Lookup\/ClassMethods.html#M000366","(generator_name)","Lookup knows how to find generators' Specs from a list of Sources. Searches the sources, in order, for",2],["lookup_by_extension","Mime::Type","classes.html\/Mime\/Type.html#M001938","(extension)","",2],["lookup_missing_generator","Object","classes.html\/Object.html#M000356","(class_id)","Lookup missing generators using const_missing.  This allows any generator to reference another without",2],["lookup_store","ActiveSupport::Cache","classes.html\/ActiveSupport\/Cache.html#M003366","(*store_option)","Creates a new CacheStore object according to the given options. If no arguments are passed to this method,",2],["ls","RecursiveHTTPFetcher","classes.html\/RecursiveHTTPFetcher.html#M000219","()","",2],["lstrip","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002627","()","Strips entire range of Unicode whitespace from the left of the string. ",2],["macro","ActiveRecord::Reflection::MacroReflection","classes.html\/ActiveRecord\/Reflection\/MacroReflection.html#M001057","()","Returns the macro type. For example, <tt>composed_of :balance, :class_name => 'Money'<\/tt> will return",2],["mail_to","ActionView::Helpers::UrlHelper","classes.html\/ActionView\/Helpers\/UrlHelper.html#M002461","(email_address, name = nil, html_options = {})","Creates a mailto link tag to the specified +email_address+, which is also used as the name of the link",2],["mailer_name","ActionMailer::Base","classes.html\/ActionMailer\/Base.html#M002484","()","",2],["mailer_name","ActionMailer::Base","classes.html\/ActionMailer\/Base.html#M002482","(value = nil)","Override the mailer name, which defaults to an inflected version of the mailer's class name. If you want",2],["mailer_name=","ActionMailer::Base","classes.html\/ActionMailer\/Base.html#M002483","(value)","",2],["mandatory_options","Rails::Generator::Options","classes.html\/Rails\/Generator\/Options.html#M000318","()","Convenient access to class mandatory options. ",2],["mandatory_options","Rails::Generator::Options::ClassMethods","classes.html\/Rails\/Generator\/Options\/ClassMethods.html#M000314","(options = nil)","",2],["manifest","Rails::Generator::Base","classes.html\/Rails\/Generator\/Base.html#M000337","()","Generators must provide a manifest.  Use the +record+ method to create a new manifest and record your",2],["many?","Enumerable","classes.html\/Enumerable.html#M003261","(&block)","Returns true if the collection has more than 1 element. Functionally equivalent to collection.size >",2],["mark_features!","RailsFCGIHandler","classes.html\/RailsFCGIHandler.html#M000038","()","Make a note of $\" so we can safely reload this instance. ",2],["mark_for_destruction","ActiveRecord::AutosaveAssociation","classes.html\/ActiveRecord\/AutosaveAssociation.html#M001401","()","Marks this record to be destroyed as part of the parents save transaction. This does _not_ actually destroy",2],["markdown","ActionView::Helpers::TextHelper","classes.html\/ActionView\/Helpers\/TextHelper.html#M002274","(text)","Returns the text with all the Markdown codes turned into HTML tags. <i>This method requires BlueCloth[http:\/\/www.deveiate.org\/projects\/BlueCloth]",2],["marked_for_destruction?","ActiveRecord::AutosaveAssociation","classes.html\/ActiveRecord\/AutosaveAssociation.html#M001402","()","Returns whether or not this record will be destroyed as part of the parents save transaction. Only useful",2],["marshal","ActiveRecord::SessionStore::Session","classes.html\/ActiveRecord\/SessionStore\/Session.html#M001216","(data)","",2],["marshal","ActiveRecord::SessionStore::SqlBypass","classes.html\/ActiveRecord\/SessionStore\/SqlBypass.html#M001233","(data)","",2],["marshal_dump","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002587","()","",2],["marshal_load","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002588","(variables)","",2],["match","ActiveRecord::DynamicFinderMatch","classes.html\/ActiveRecord\/DynamicFinderMatch.html#M001247","(method)","",2],["match","ActiveRecord::DynamicScopeMatch","classes.html\/ActiveRecord\/DynamicScopeMatch.html#M000883","(method)","",2],["match_attribute_method?","ActiveRecord::AttributeMethods::ClassMethods","classes.html\/ActiveRecord\/AttributeMethods\/ClassMethods.html#M001172","(method_name)","Returns MatchData if method_name is an attribute method. ",2],["match_extraction","ActionController::Routing::OptionalFormatSegment","classes.html\/ActionController\/Routing\/OptionalFormatSegment.html#M002105","(next_capture)","the value should not include the period (.) ",2],["mattr_accessor","Module","classes.html\/Module.html#M003007","(*syms)","",2],["mattr_reader","Module","classes.html\/Module.html#M003005","(*syms)","",2],["mattr_writer","Module","classes.html\/Module.html#M003006","(*syms)","",2],["maximum","ActiveRecord::Calculations::ClassMethods","classes.html\/ActiveRecord\/Calculations\/ClassMethods.html#M001386","(column_name, options = {})","Calculates the maximum value on a given column. The value is returned with the same data type of the",2],["mb_chars","ActiveSupport::CoreExtensions::String::Multibyte","classes.html\/ActiveSupport\/CoreExtensions\/String\/Multibyte.html#M002871","()","",2],["mb_chars","ActiveSupport::CoreExtensions::String::Multibyte","classes.html\/ActiveSupport\/CoreExtensions\/String\/Multibyte.html#M002868","()","== Multibyte proxy +mb_chars+ is a multibyte safe proxy for string methods. In Ruby 1.8 and older it",2],["measure","ActiveSupport::Testing::Performance::Metrics::Base","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M003336","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::CpuTime","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/CpuTime.html#M003347","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcRuns","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/GcRuns.html#M003361","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcRuns","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/GcRuns.html#M003359","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcRuns","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/GcRuns.html#M003360","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcTime","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/GcTime.html#M003363","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcTime","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/GcTime.html#M003364","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Memory","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/Memory.html#M003349","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Memory","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/Memory.html#M003348","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Memory","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/Memory.html#M003351","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Memory","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/Memory.html#M003352","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Memory","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/Memory.html#M003350","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Memory","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/Memory.html#M003353","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Objects","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/Objects.html#M003355","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Objects","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/Objects.html#M003357","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Objects","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/Objects.html#M003356","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::ProcessTime","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/ProcessTime.html#M003344","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Time","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/Time.html#M003342","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::WallTime","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/WallTime.html#M003345","()","",2],["measure_mode","ActiveSupport::Testing::Performance::Metrics::Base","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M003335","()","",2],["media_type","ActionController::Request","classes.html\/ActionController\/Request.html#M001998","()","",2],["megabyte","ActiveSupport::CoreExtensions::Numeric::Bytes","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Bytes.html#M003071","()","Alias for #megabytes",2],["megabytes","ActiveSupport::CoreExtensions::Numeric::Bytes","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Bytes.html#M003070","()","",2],["memoize","ActiveSupport::Memoizable","classes.html\/ActiveSupport\/Memoizable.html#M002669","(*symbols)","",2],["memoize_all","ActiveSupport::Memoizable::InstanceMethods","classes.html\/ActiveSupport\/Memoizable\/InstanceMethods.html#M002665","()","",2],["memoized_ivar_for","ActiveSupport::Memoizable","classes.html\/ActiveSupport\/Memoizable.html#M002662","(symbol)","",2],["merge","HashWithIndifferentAccess","classes.html\/HashWithIndifferentAccess.html#M002961","(hash)","Merges the instantized and the specified hashes together, giving precedence to the values from the second",2],["merge_conditions","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001026","(*conditions)","Merges conditions so that the result is a valid +condition+ ",2],["message","ActiveRecord::Error","classes.html\/ActiveRecord\/Error.html#M001257","()","",2],["metaclass","Object","classes.html\/Object.html#M003241","()","Get object's meta (ghost, eigenclass, singleton) class. Deprecated in favor of Object#singleton_class.",2],["metal_path","Rails::Plugin","classes.html\/Rails\/Plugin.html#M000287","()","",2],["method","ActionController::Request","classes.html\/ActionController\/Request.html#M001989","()","Returns the HTTP request \\method used for action processing as a lowercase symbol, such as <tt>:post<\/tt>.",2],["method_missing","ActionController::Integration::Runner","classes.html\/ActionController\/Integration\/Runner.html#M001872","(sym, *args, &block)","Delegate unhandled messages to the current session instance. ",2],["method_missing","ActionController::Reloader::BodyWrapper","classes.html\/ActionController\/Reloader\/BodyWrapper.html#M002070","(*args, &block)","",2],["method_missing","ActionController::TestProcess","classes.html\/ActionController\/TestProcess.html#M001776","(selector, *args, &block)","",2],["method_missing","ActiveRecord::ConnectionAdapters::TableDefinition","classes.html\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M000553","(symbol, *args)","Handles non supported datatypes - e.g. XML ",2],["method_missing","ActiveRecord::Migration","classes.html\/ActiveRecord\/Migration.html#M000896","(method, *arguments, &block)","",2],["method_missing","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002604","(method, *args, &block)","Forward all undefined methods to the wrapped string. ",2],["method_missing","ActiveSupport::StringInquirer","classes.html\/ActiveSupport\/StringInquirer.html#M003300","(method_name, *arguments)","",2],["method_missing","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002597","(sym, *args, &block)","Send the missing method to +time+ instance, and wrap result in a new TimeWithZone with the existing +time_zone+.",2],["method_missing","Rails::Generator::Manifest","classes.html\/Rails\/Generator\/Manifest.html#M000305","(action, *args, &block)","Record an action. ",2],["method_option_to_s","ActionView::Helpers::PrototypeHelper","classes.html\/ActionView\/Helpers\/PrototypeHelper.html#M002365","(method)","",2],["method_segment","ActionView::Template","classes.html\/ActionView\/Template.html#M002232","()","",2],["microseconds","ActiveRecord::ConnectionAdapters::Column","classes.html\/ActiveRecord\/ConnectionAdapters\/Column.html#M000541","(time)","'0.123456' -> 123456 '1.123456' -> 123456 ",2],["middleware","ActiveSupport::Cache::Strategy::LocalCache","classes.html\/ActiveSupport\/Cache\/Strategy\/LocalCache.html#M002729","()","",2],["middleware","Rails::Configuration","classes.html\/Rails\/Configuration.html#M000109","()","",2],["midnight","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003168","()","Alias for #beginning_of_day",2],["midnight","ActiveSupport::CoreExtensions::DateTime::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Calculations.html#M002911","()","Alias for #beginning_of_day",2],["midnight","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003126","()","Alias for #beginning_of_day",2],["migrate","ActiveRecord::Migration","classes.html\/ActiveRecord\/Migration.html#M000888","(direction)","Execute this migration in the named direction ",2],["migration_directory","Rails::Generator::Commands::Base","classes.html\/Rails\/Generator\/Commands\/Base.html#M000384","(relative_path)","",2],["migration_exists?","Rails::Generator::Commands::Base","classes.html\/Rails\/Generator\/Commands\/Base.html#M000386","(file_name)","",2],["migration_template","Rails::Generator::Commands::Create","classes.html\/Rails\/Generator\/Commands\/Create.html#M000401","(relative_source, relative_destination, template_options = {})","When creating a migration, it knows to find the first available file in db\/migrate and use the migration.rb",2],["migration_template","Rails::Generator::Commands::Destroy","classes.html\/Rails\/Generator\/Commands\/Destroy.html#M000410","(relative_source, relative_destination, template_options = {})","When deleting a migration, it knows to delete every file named \"[0-9]*_#{file_name}\". ",2],["migration_template","Rails::Generator::Commands::List","classes.html\/Rails\/Generator\/Commands\/List.html#M000419","(relative_source, relative_destination, options = {})","",2],["migrations_path","ActiveRecord::Schema","classes.html\/ActiveRecord\/Schema.html#M000425","()","",2],["mime_type","ActionView::Template","classes.html\/ActionView\/Template.html#M002224","()","",2],["mime_type","ActiveResource::Formats::JsonFormat","classes.html\/ActiveResource\/Formats\/JsonFormat.html#M001542","()","",2],["mime_type","ActiveResource::Formats::XmlFormat","classes.html\/ActiveResource\/Formats\/XmlFormat.html#M001537","()","",2],["minimum","ActiveRecord::Calculations::ClassMethods","classes.html\/ActiveRecord\/Calculations\/ClassMethods.html#M001385","(column_name, options = {})","Calculates the minimum value on a given column.  The value is returned with the same data type of the",2],["minus_with_coercion","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003146","(other)","Time#- can also be used to determine the number of seconds between two Time instances. We're layering",2],["minute","ActiveSupport::CoreExtensions::Numeric::Time","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Time.html#M003053","()","Alias for #minutes",2],["minutes","ActiveSupport::CoreExtensions::Numeric::Time","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Time.html#M003052","()","",2],["model_name","ActiveSupport::CoreExtensions::Module","classes.html\/ActiveSupport\/CoreExtensions\/Module.html#M003004","()","Returns an ActiveSupport::ModelName object for module. It can be used to retrieve all kinds of naming-related",2],["monday","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003187","()","Alias for #beginning_of_week",2],["monday","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003120","()","Alias for #beginning_of_week",2],["month","ActiveSupport::CoreExtensions::Float::Time","classes.html\/ActiveSupport\/CoreExtensions\/Float\/Time.html#M002993","()","Alias for #months",2],["month","ActiveSupport::CoreExtensions::Integer::Time","classes.html\/ActiveSupport\/CoreExtensions\/Integer\/Time.html#M002946","()","Alias for #months",2],["months","ActiveSupport::CoreExtensions::Float::Time","classes.html\/ActiveSupport\/CoreExtensions\/Float\/Time.html#M002991","()","",2],["months","ActiveSupport::CoreExtensions::Integer::Time","classes.html\/ActiveSupport\/CoreExtensions\/Integer\/Time.html#M002945","()","",2],["months_ago","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003176","(months)","Returns a new Date\/DateTime representing the time a number of specified months ago ",2],["months_ago","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003109","(months)","Returns a new Time representing the time a number of specified months ago ",2],["months_since","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003177","(months)","Returns a new Date\/DateTime representing the time a number of specified months in the future ",2],["months_since","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003110","(months)","Returns a new Time representing the time a number of specified months in the future ",2],["months_without_deprecation","ActiveSupport::CoreExtensions::Float::Time","classes.html\/ActiveSupport\/CoreExtensions\/Float\/Time.html#M002992","()","",2],["mtime","ActionView::ReloadableTemplate","classes.html\/ActionView\/ReloadableTemplate.html#M002163","()","",2],["multipart?","ActionView::Template","classes.html\/ActionView\/Template.html#M002206","()","",2],["multiple_of?","ActiveSupport::CoreExtensions::Integer::EvenOdd","classes.html\/ActiveSupport\/CoreExtensions\/Integer\/EvenOdd.html#M002942","(number)","",2],["mute","ActiveSupport::Cache::Store","classes.html\/ActiveSupport\/Cache\/Store.html#M003369","()","",2],["name","ActiveRecord::Reflection::MacroReflection","classes.html\/ActiveRecord\/Reflection\/MacroReflection.html#M001056","()","Returns the name of the macro.  For example, <tt>composed_of :balance, :class_name => 'Money'<\/tt> will",2],["name","ActiveSupport::Testing::Performance::Metrics::Base","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M003334","()","",2],["named_scope","ActiveRecord::NamedScope::ClassMethods","classes.html\/ActiveRecord\/NamedScope\/ClassMethods.html#M000831","(name, options = {}, &block)","Adds a class method for retrieving and querying objects. A scope represents a narrowing of a database",2],["names","Rails::Generator::Source","classes.html\/Rails\/Generator\/Source.html#M000372","()","Return a convenient sorted list of all generator names. ",2],["namespace","ActionController::Routing::RouteSet::Mapper","classes.html\/ActionController\/Routing\/RouteSet\/Mapper.html#M002110","(name, options = {}, &block)","Enables the use of resources in a module by setting the name_prefix, path_prefix, and namespace for the",2],["native_database_types","ActiveRecord::ConnectionAdapters::SchemaStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000595","()","Returns a Hash of mappings from the abstract data types to the native database types.  See TableDefinition#column",2],["new","ActionController::Assertions::SelectorAssertions","classes.html\/ActionController\/Assertions\/SelectorAssertions.html#M001718","(*args)","",2],["new","ActionController::Caching::Actions::ActionCachePath","classes.html\/ActionController\/Caching\/Actions\/ActionCachePath.html#M001582","(controller, options = {}, infer_extension = true)","When true, infer_extension will look up the cache path extension from the request's path & format. This",2],["new","ActionController::Dispatcher","classes.html\/ActionController\/Dispatcher.html#M001624","(output = $stdout, request = nil, response = nil)","DEPRECATE: Remove arguments, since they are only used by CGI ",2],["new","ActionController::Failsafe","classes.html\/ActionController\/Failsafe.html#M001884","(app)","",2],["new","ActionController::Http::Headers","classes.html\/ActionController\/Http\/Headers.html#M001732","(*args)","",2],["new","ActionController::Integration::Runner","classes.html\/ActionController\/Integration\/Runner.html#M001868","(*args)","",2],["new","ActionController::Integration::Session","classes.html\/ActionController\/Integration\/Session.html#M001823","(app = nil)","Create and initialize a new Session instance. ",2],["new","ActionController::MiddlewareStack","classes.html\/ActionController\/MiddlewareStack.html#M001928","(*args, &block)","",2],["new","ActionController::MiddlewareStack::Middleware","classes.html\/ActionController\/MiddlewareStack\/Middleware.html#M001921","(klass, *args, &block)","",2],["new","ActionController::MiddlewareStack::Middleware","classes.html\/ActionController\/MiddlewareStack\/Middleware.html#M001920","(klass, *args, &block)","",2],["new","ActionController::ParamsParser","classes.html\/ActionController\/ParamsParser.html#M002142","(app)","",2],["new","ActionController::Reloader::BodyWrapper","classes.html\/ActionController\/Reloader\/BodyWrapper.html#M002068","(body, lock)","",2],["new","ActionController::Response","classes.html\/ActionController\/Response.html#M001892","()","",2],["new","ActionController::Routing::Optimisation::Optimiser","classes.html\/ActionController\/Routing\/Optimisation\/Optimiser.html#M002090","(route, kind)","",2],["new","ActionController::Routing::OptionalFormatSegment","classes.html\/ActionController\/Routing\/OptionalFormatSegment.html#M002100","(key = nil, options = {})","",2],["new","ActionController::Session::AbstractStore","classes.html\/ActionController\/Session\/AbstractStore.html#M001697","(app, options = {})","",2],["new","ActionController::Session::AbstractStore::SessionHash","classes.html\/ActionController\/Session\/AbstractStore\/SessionHash.html#M001687","(by, env)","",2],["new","ActionController::Session::CookieStore","classes.html\/ActionController\/Session\/CookieStore.html#M001674","(app, options = {})","",2],["new","ActionController::Session::MemCacheStore","classes.html\/ActionController\/Session\/MemCacheStore.html#M001708","(app, options = {})","",2],["new","ActionController::StringCoercion","classes.html\/ActionController\/StringCoercion.html#M002076","(app)","",2],["new","ActionController::StringCoercion::UglyBody","classes.html\/ActionController\/StringCoercion\/UglyBody.html#M002073","(body)","",2],["new","ActionController::TestCase","classes.html\/ActionController\/TestCase.html#M001735","(*args)","",2],["new","ActionController::TestUploadedFile","classes.html\/ActionController\/TestUploadedFile.html#M001755","(path, content_type = Mime::TEXT, binary = false)","",2],["new","ActionView::Base","classes.html\/ActionView\/Base.html#M002167","(*args)","",2],["new","ActionView::Base::ProxyModule","classes.html\/ActionView\/Base\/ProxyModule.html#M002211","(receiver)","",2],["new","ActionView::Helpers::AtomFeedHelper::AtomBuilder","classes.html\/ActionView\/Helpers\/AtomFeedHelper\/AtomBuilder.html#M002289","(xml)","",2],["new","ActionView::Helpers::AtomFeedHelper::AtomFeedBuilder","classes.html\/ActionView\/Helpers\/AtomFeedHelper\/AtomFeedBuilder.html#M002292","(xml, view, feed_options = {})","",2],["new","ActionView::ReloadableTemplate","classes.html\/ActionView\/ReloadableTemplate.html#M002162","(*args)","",2],["new","ActionView::ReloadableTemplate::ReloadablePath","classes.html\/ActionView\/ReloadableTemplate\/ReloadablePath.html#M002151","(path)","",2],["new","ActionView::Template","classes.html\/ActionView\/Template.html#M002203","(template_path, load_path = nil)","",2],["new","ActionView::Template::EagerPath","classes.html\/ActionView\/Template\/EagerPath.html#M002196","(path)","",2],["new","ActionView::Template::Path","classes.html\/ActionView\/Template\/Path.html#M002187","(path)","",2],["new","ActionView::TemplateHandler","classes.html\/ActionView\/TemplateHandler.html#M002480","(view = nil)","",2],["new","ActionView::TestCase::TestController","classes.html\/ActionView\/TestCase\/TestController.html#M002172","()","",2],["new","ActiveRecord::AttributeAssignmentError","classes.html\/ActiveRecord\/AttributeAssignmentError.html#M000950","(message, exception, attribute)","",2],["new","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001100","(attributes = nil)","New objects can be instantiated as either empty (pass no construction parameter) or pre-set with attributes",2],["new","ActiveRecord::ConnectionAdapters::Column","classes.html\/ActiveRecord\/ConnectionAdapters\/Column.html#M000525","(name, default, sql_type = nil, null = true)","Instantiates a new column in the table. +name+ is the column's name, such as <tt>supplier_id<\/tt> in",2],["new","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes.html\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html#M000697","(pools = {})","",2],["new","ActiveRecord::ConnectionAdapters::ConnectionManagement","classes.html\/ActiveRecord\/ConnectionAdapters\/ConnectionManagement.html#M000708","(app)","",2],["new","ActiveRecord::ConnectionAdapters::ConnectionPool","classes.html\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M000677","(spec)","Creates a new ConnectionPool object. +spec+ is a ConnectionSpecification object which describes database",2],["new","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000429","(connection, logger, connection_options, config)","",2],["new","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000723","(connection, logger, connection_parameters, config)","Initializes and connects a PostgreSQL adapter. ",2],["new","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000493","(connection, logger, config)","",2],["new","ActiveRecord::ConnectionAdapters::SQLiteAdapter::Version","classes.html\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter\/Version.html#M000486","(version_string)","",2],["new","ActiveRecord::ConnectionAdapters::Table","classes.html\/ActiveRecord\/ConnectionAdapters\/Table.html#M000579","(table_name, base)","",2],["new","ActiveRecord::ConnectionAdapters::TableDefinition","classes.html\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M000552","(base)","",2],["new","ActiveRecord::DynamicFinderMatch","classes.html\/ActiveRecord\/DynamicFinderMatch.html#M001248","(method)","",2],["new","ActiveRecord::DynamicScopeMatch","classes.html\/ActiveRecord\/DynamicScopeMatch.html#M000884","(method)","",2],["new","ActiveRecord::Error","classes.html\/ActiveRecord\/Error.html#M001256","(base, attribute, type = nil, options = {})","",2],["new","ActiveRecord::MultiparameterAssignmentErrors","classes.html\/ActiveRecord\/MultiparameterAssignmentErrors.html#M000951","(errors)","",2],["new","ActiveRecord::NamedScope::Scope","classes.html\/ActiveRecord\/NamedScope\/Scope.html#M000832","(proxy_scope, options, &block)","",2],["new","ActiveRecord::Observer","classes.html\/ActiveRecord\/Observer.html#M001364","()","Start observing the declared classes and their subclasses. ",2],["new","ActiveRecord::QueryCache","classes.html\/ActiveRecord\/QueryCache.html#M001372","(app)","",2],["new","ActiveRecord::RecordInvalid","classes.html\/ActiveRecord\/RecordInvalid.html#M001255","(record)","",2],["new","ActiveRecord::Reflection::MacroReflection","classes.html\/ActiveRecord\/Reflection\/MacroReflection.html#M001055","(macro, name, options, active_record)","",2],["new","ActiveRecord::SessionStore::SqlBypass","classes.html\/ActiveRecord\/SessionStore\/SqlBypass.html#M001237","(attributes)","Look for normal and marshaled data, self.find_by_session_id's way of telling us to postpone unmarshaling",2],["new","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001474","(attributes = {})","Constructor method for \\new resources; the optional +attributes+ parameter takes a \\hash of attributes",2],["new","ActiveResource::Connection","classes.html\/ActiveResource\/Connection.html#M001512","(site, format = ActiveResource::Formats[:xml])","The +site+ parameter is required and will set the +site+ attribute to the URI for the remote resource",2],["new","ActiveResource::Request","classes.html\/ActiveResource\/Request.html#M001563","(method, path, body = nil, headers = {})","",2],["new","ActiveResource::Response","classes.html\/ActiveResource\/Response.html#M001566","(body, message = 200, headers = {})","",2],["new","ActiveResource::SSLError","classes.html\/ActiveResource\/SSLError.html#M001415","(message)","",2],["new","ActiveResource::SSLError","classes.html\/ActiveResource\/SSLError.html#M001509","(message)","",2],["new","ActiveResource::TimeoutError","classes.html\/ActiveResource\/TimeoutError.html#M001413","(message)","",2],["new","ActiveResource::TimeoutError","classes.html\/ActiveResource\/TimeoutError.html#M001507","(message)","",2],["new","ActiveSupport::BacktraceCleaner","classes.html\/ActiveSupport\/BacktraceCleaner.html#M002651","()","",2],["new","ActiveSupport::BufferedLogger","classes.html\/ActiveSupport\/BufferedLogger.html#M002674","(log, level = DEBUG)","",2],["new","ActiveSupport::Cache::FileStore","classes.html\/ActiveSupport\/Cache\/FileStore.html#M002739","(cache_path)","",2],["new","ActiveSupport::Cache::MemCacheStore","classes.html\/ActiveSupport\/Cache\/MemCacheStore.html#M002716","(*addresses)","Creates a new MemCacheStore object, with the given memcached server addresses. Each address is either",2],["new","ActiveSupport::Cache::MemoryStore","classes.html\/ActiveSupport\/Cache\/MemoryStore.html#M002748","()","",2],["new","ActiveSupport::Cache::SynchronizedMemoryStore","classes.html\/ActiveSupport\/Cache\/SynchronizedMemoryStore.html#M002756","()","",2],["new","ActiveSupport::Callbacks::Callback","classes.html\/ActiveSupport\/Callbacks\/Callback.html#M003272","(kind, method, options = {})","",2],["new","ActiveSupport::Deprecation::DeprecatedObjectProxy","classes.html\/ActiveSupport\/Deprecation\/DeprecatedObjectProxy.html#M003297","(object, message)","",2],["new","ActiveSupport::Inflector::Inflections","classes.html\/ActiveSupport\/Inflector\/Inflections.html#M002768","()","",2],["new","ActiveSupport::MessageEncryptor","classes.html\/ActiveSupport\/MessageEncryptor.html#M002590","(secret, cipher = 'aes-256-cbc')","",2],["new","ActiveSupport::MessageVerifier","classes.html\/ActiveSupport\/MessageVerifier.html#M002682","(secret, digest = 'SHA1')","",2],["new","ActiveSupport::ModelName","classes.html\/ActiveSupport\/ModelName.html#M003003","(name)","",2],["new","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002602","(string)","Creates a new Chars instance by wrapping _string_. ",2],["new","ActiveSupport::Multibyte::UnicodeDatabase","classes.html\/ActiveSupport\/Multibyte\/UnicodeDatabase.html#M002615","()","",2],["new","ActiveSupport::Testing::Performance::Metrics::Base","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M003333","()","",2],["new","ActiveSupport::Testing::Performance::Metrics::CpuTime","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/CpuTime.html#M003346","(*args)","",2],["new","ActiveSupport::Testing::Performance::Performer","classes.html\/ActiveSupport\/Testing\/Performance\/Performer.html#M003319","(harness, metric)","",2],["new","ActiveSupport::Testing::Performance::Profiler","classes.html\/ActiveSupport\/Testing\/Performance\/Profiler.html#M003327","(*args)","",2],["new","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002533","(utc_time, time_zone, local_time = nil, period = nil)","",2],["new","ActiveSupport::TimeZone","classes.html\/ActiveSupport\/TimeZone.html#M002689","(name, utc_offset = nil, tzinfo = nil)","Create a new TimeZone object with the given name and offset. The offset is the number of seconds that",2],["new","ActiveSupport::TimeZone","classes.html\/ActiveSupport\/TimeZone.html#M002705","(name)","Return a TimeZone instance with the given name, or +nil+ if no such TimeZone instance exists. (This exists",2],["new","CGI::Cookie","classes.html\/CGI\/Cookie.html#M001954","(name = '', *value)","Creates a new CGI::Cookie object. The contents of the cookie can be specified as a +name+ and one or",2],["new","Commands::Discover","classes.html\/Commands\/Discover.html#M000200","(base_command)","",2],["new","Commands::Info","classes.html\/Commands\/Info.html#M000215","(base_command)","",2],["new","Commands::Install","classes.html\/Commands\/Install.html#M000205","(base_command)","",2],["new","Commands::List","classes.html\/Commands\/List.html#M000188","(base_command)","",2],["new","Commands::Plugin","classes.html\/Commands\/Plugin.html#M000182","()","",2],["new","Commands::Remove","classes.html\/Commands\/Remove.html#M000212","(base_command)","",2],["new","Commands::Source","classes.html\/Commands\/Source.html#M000194","(base_command)","",2],["new","Commands::Sources","classes.html\/Commands\/Sources.html#M000191","(base_command)","",2],["new","Commands::Unsource","classes.html\/Commands\/Unsource.html#M000197","(base_command)","",2],["new","Commands::Update","classes.html\/Commands\/Update.html#M000209","(base_command)","",2],["new","Fixtures","classes.html\/Fixtures.html#M000852","(connection, table_name, class_name, fixture_path, file_filter = DEFAULT_FILTER_RE)","",2],["new","HashWithIndifferentAccess","classes.html\/HashWithIndifferentAccess.html#M002952","(constructor = {})","",2],["new","Logger::Formatter","classes.html\/Logger\/Formatter.html#M003215","()","",2],["new","Mime::Type","classes.html\/Mime\/Type.html#M001942","(string, symbol = nil, synonyms = [])","",2],["new","Plugin","classes.html\/Plugin.html#M000145","(uri, name=nil)","",2],["new","Rails::BacktraceCleaner","classes.html\/Rails\/BacktraceCleaner.html#M000226","()","",2],["new","Rails::Configuration","classes.html\/Rails\/Configuration.html#M000100","()","Create a new Configuration instance, initialized with the default values. ",2],["new","Rails::GemBuilder","classes.html\/Rails\/GemBuilder.html#M000241","(spec, gem_dir)","",2],["new","Rails::GemDependency","classes.html\/Rails\/GemDependency.html#M000247","(name, options = {})","",2],["new","Rails::GemPlugin","classes.html\/Rails\/GemPlugin.html#M000302","(spec, gem)","Initialize this plugin from a Gem::Specification. ",2],["new","Rails::Generator::AbstractGemSource","classes.html\/Rails\/Generator\/AbstractGemSource.html#M000375","()","",2],["new","Rails::Generator::Base","classes.html\/Rails\/Generator\/Base.html#M000336","(runtime_args, runtime_options = {})","",2],["new","Rails::Generator::GeneratedAttribute","classes.html\/Rails\/Generator\/GeneratedAttribute.html#M000332","(name, type)","",2],["new","Rails::Generator::Manifest","classes.html\/Rails\/Generator\/Manifest.html#M000304","(target = nil)","Take a default action target.  Yield self if block given. ",2],["new","Rails::Generator::NamedBase","classes.html\/Rails\/Generator\/NamedBase.html#M000347","(runtime_args, runtime_options = {})","",2],["new","Rails::Generator::PathSource","classes.html\/Rails\/Generator\/PathSource.html#M000373","(label, path)","",2],["new","Rails::Generator::Source","classes.html\/Rails\/Generator\/Source.html#M000370","(label)","",2],["new","Rails::Generator::Spec","classes.html\/Rails\/Generator\/Spec.html#M000327","(name, path, source)","",2],["new","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000056","(configuration)","Create a new Initializer instance that references the given Configuration instance. ",2],["new","Rails::Plugin","classes.html\/Rails\/Plugin.html#M000275","(directory)","",2],["new","Rails::SecretKeyGenerator","classes.html\/Rails\/SecretKeyGenerator.html#M000310","(identifier)","",2],["new","Rails::VendorGemSourceIndex","classes.html\/Rails\/VendorGemSourceIndex.html#M000230","(installed_index, vendor_dir=Rails::GemDependency.unpacked_path)","",2],["new","RailsEnvironment","classes.html\/RailsEnvironment.html#M000134","(dir)","",2],["new","RailsFCGIHandler","classes.html\/RailsFCGIHandler.html#M000022","(log_file_path = nil, gc_request_period = nil)","Initialize the FastCGI instance with the path to a crash log detailing unhandled exceptions (default",2],["new","RecursiveHTTPFetcher","classes.html\/RecursiveHTTPFetcher.html#M000218","(urls_to_fetch, level = 1, cwd = \".\")","",2],["new","Repositories","classes.html\/Repositories.html#M000165","(cache_file = File.join(find_home, \".rails-plugin-sources\"))","",2],["new","Repository","classes.html\/Repository.html#M000178","(uri)","",2],["new","SourceAnnotationExtractor","classes.html\/SourceAnnotationExtractor.html#M000012","(tag)","",2],["new?","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001476","()","A method to determine if the resource a \\new object (i.e., it has not been POSTed to the remote service",2],["new_and_loaded","ActionView::Template::Path","classes.html\/ActionView\/Template\/Path.html#M002194","(path)","",2],["new_date","ActiveRecord::ConnectionAdapters::Column","classes.html\/ActiveRecord\/ConnectionAdapters\/Column.html#M000542","(year, mon, mday)","",2],["new_record?","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001107","()","Returns true if this object hasn't been saved yet -- that is, a record for the object doesn't exist yet;",2],["new_record?","ActiveRecord::SessionStore::SqlBypass","classes.html\/ActiveRecord\/SessionStore\/SqlBypass.html#M001238","()","",2],["new_record?","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001477","()","Alias for #new?",2],["new_request!","ActionView::ReloadableTemplate::ReloadablePath","classes.html\/ActionView\/ReloadableTemplate\/ReloadablePath.html#M002152","()","",2],["new_session","Object","classes.html\/Object.html#M000019","()","create a new session. If a block is given, the new session will be yielded to the block before being",2],["new_time","ActiveRecord::ConnectionAdapters::Column","classes.html\/ActiveRecord\/ConnectionAdapters\/Column.html#M000543","(year, mon, mday, hour, min, sec, microsec)","",2],["next_migration_number","Rails::Generator::Commands::Base","classes.html\/Rails\/Generator\/Commands\/Base.html#M000383","()","",2],["next_migration_string","Rails::Generator::Commands::Base","classes.html\/Rails\/Generator\/Commands\/Base.html#M000387","(padding = 3)","",2],["next_month","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003185","()","Short-hand for months_since(1) ",2],["next_month","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003118","()","Short-hand for months_since(1) ",2],["next_week","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003191","(day = :monday)","Returns a new Date\/DateTime representing the start of the given day in next week (default is Monday).",2],["next_week","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003124","(day = :monday)","Returns a new Time representing the start of the given day in next week (default is Monday). ",2],["next_year","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003182","()","Short-hand for years_since(1) ",2],["next_year","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003115","()","Short-hand for years_since(1) ",2],["nonce","ActionController::HttpAuthentication::Digest","classes.html\/ActionController\/HttpAuthentication\/Digest.html#M001670","(time = Time.now)","Uses an MD5 digest based on time to generate a value to be used only once. A server-specified data string",2],["none?","Enumerable","classes.html\/Enumerable.html#M003262","(&block)","Returns true if none of the elements match the given block. success = responses.none? {|r| r.status \/",2],["normalize","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002639","(form=ActiveSupport::Multibyte.default_normalization_form)","Returns the KC normalization of the string by default. NFKC is considered the best normalization form",2],["normalize_paths","ActionController::Routing","classes.html\/ActionController\/Routing.html#M001632","(paths)","Returns an array of paths, cleaned of double-slashes and relative path references. * \"\\\\\\\" and \"\/\/\" ",2],["normalize_translation_keys","I18n","classes.html\/I18n.html#M002799","(*args)","",2],["not_modified?","ActionController::Request","classes.html\/ActionController\/Request.html#M002002","(modified_at)","",2],["now","ActionController::Flash::FlashHash","classes.html\/ActionController\/Flash\/FlashHash.html#M001967","()","Sets a flash that will not be available to the next action, only to the current. flash.now[:message]",2],["now","ActiveSupport::TimeZone","classes.html\/ActiveSupport\/TimeZone.html#M002698","()","Returns an ActiveSupport::TimeWithZone instance representing the current time in the time zone represented",2],["number?","ActiveRecord::ConnectionAdapters::Column","classes.html\/ActiveRecord\/ConnectionAdapters\/Column.html#M000527","()","Returns +true+ if the column is either of type integer, float or decimal. ",2],["number_to_currency","ActionView::Helpers::NumberHelper","classes.html\/ActionView\/Helpers\/NumberHelper.html#M002397","(number, options = {})","Formats a +number+ into a currency string (e.g., $13.65). You can customize the format in the +options+",2],["number_to_human_size","ActionView::Helpers::NumberHelper","classes.html\/ActionView\/Helpers\/NumberHelper.html#M002401","(number, *args)","Formats the bytes in +size+ into a more understandable representation (e.g., giving it 1500 yields 1.5",2],["number_to_percentage","ActionView::Helpers::NumberHelper","classes.html\/ActionView\/Helpers\/NumberHelper.html#M002398","(number, options = {})","Formats a +number+ as a percentage string (e.g., 65%). You can customize the format in the +options+",2],["number_to_phone","ActionView::Helpers::NumberHelper","classes.html\/ActionView\/Helpers\/NumberHelper.html#M002396","(number, options = {})","Formats a +number+ into a US phone number (e.g., (555) 123-9876). You can customize the format in the",2],["number_with_delimiter","ActionView::Helpers::NumberHelper","classes.html\/ActionView\/Helpers\/NumberHelper.html#M002399","(number, *args)","Formats a +number+ with grouped thousands using +delimiter+ (e.g., 12,324). You can customize the format",2],["number_with_precision","ActionView::Helpers::NumberHelper","classes.html\/ActionView\/Helpers\/NumberHelper.html#M002400","(number, *args)","Formats a +number+ with the specified level of <tt>:precision<\/tt> (e.g., 112.32 has a precision of 2).",2],["observe","ActiveRecord::Observer","classes.html\/ActiveRecord\/Observer.html#M001362","(*models)","Attaches the observer to the supplied model classes. ",2],["observe_field","ActionView::Helpers::PrototypeHelper","classes.html\/ActionView\/Helpers\/PrototypeHelper.html#M002324","(field_id, options = {})","Observes the field with the DOM ID specified by +field_id+ and calls a callback when its contents have",2],["observe_form","ActionView::Helpers::PrototypeHelper","classes.html\/ActionView\/Helpers\/PrototypeHelper.html#M002325","(form_id, options = {})","Observes the form with the DOM ID specified by +form_id+ and calls a callback when its contents have",2],["observed_class","ActiveRecord::Observer","classes.html\/ActiveRecord\/Observer.html#M001363","()","The class observed by default is inferred from the observer's class name: assert_equal Person, PersonObserver.observed_class",2],["observed_classes","ActiveRecord::Observer","classes.html\/ActiveRecord\/Observer.html#M001367","()","",2],["observed_subclasses","ActiveRecord::Observer","classes.html\/ActiveRecord\/Observer.html#M001368","()","",2],["observers","ActiveRecord::Observing::ClassMethods","classes.html\/ActiveRecord\/Observing\/ClassMethods.html#M001359","()","Gets the current observers. ",2],["observers=","ActiveRecord::Observing::ClassMethods","classes.html\/ActiveRecord\/Observing\/ClassMethods.html#M001358","(*observers)","Activates the observers assigned. Examples: # Calls PersonObserver.instance ActiveRecord::Base.observers",2],["odd?","ActiveSupport::CoreExtensions::Integer::EvenOdd","classes.html\/ActiveSupport\/CoreExtensions\/Integer\/EvenOdd.html#M002944","()","",2],["old_datetime_format","Logger","classes.html\/Logger.html#M003212","()","Alias for #datetime_format",2],["old_datetime_format=","Logger","classes.html\/Logger.html#M003210","(datetime_format)","Alias for #datetime_format=",2],["old_formatter","Logger","classes.html\/Logger.html#M003214","()","Alias for #formatter",2],["on","ActiveRecord::Errors","classes.html\/ActiveRecord\/Errors.html#M001271","(attribute)","Returns +nil+, if no errors are associated with the specified +attribute+. Returns the error message,",2],["on","ActiveResource::Errors","classes.html\/ActiveResource\/Errors.html#M001421","(attribute)","A method to return the errors associated with +attribute+, which returns nil, if no errors are  associated",2],["on_base","ActiveRecord::Errors","classes.html\/ActiveRecord\/Errors.html#M001273","()","Returns errors assigned to the base object through +add_to_base+ according to the normal rules of <tt>on(attribute)<\/tt>.",2],["on_base","ActiveResource::Errors","classes.html\/ActiveResource\/Errors.html#M001423","()","A method to return errors assigned to +base+ object through add_to_base, which returns nil, if no errors",2],["on_cdata_block","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes.html\/ActiveSupport\/XmlMini_LibXMLSAX\/HashBuilder.html#M002530","(string)","Alias for #on_characters",2],["on_characters","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes.html\/ActiveSupport\/XmlMini_LibXMLSAX\/HashBuilder.html#M002529","(string)","",2],["on_end_document","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes.html\/ActiveSupport\/XmlMini_LibXMLSAX\/HashBuilder.html#M002526","()","",2],["on_end_element","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes.html\/ActiveSupport\/XmlMini_LibXMLSAX\/HashBuilder.html#M002528","(name)","",2],["on_start_document","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes.html\/ActiveSupport\/XmlMini_LibXMLSAX\/HashBuilder.html#M002525","()","",2],["on_start_element","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes.html\/ActiveSupport\/XmlMini_LibXMLSAX\/HashBuilder.html#M002527","(name, attrs = {})","",2],["opaque","ActionController::HttpAuthentication::Digest","classes.html\/ActionController\/HttpAuthentication\/Digest.html#M001672","()","Opaque based on random generation - but changing each request? ",2],["open_session","ActionController::Integration::Runner","classes.html\/ActionController\/Integration\/Runner.html#M001870","(application = nil)","Open a new session instance. If a block is given, the new session is yielded to the block before being",2],["open_transactions","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000810","()","",2],["option_groups_from_collection_for_select","ActionView::Helpers::FormOptionsHelper","classes.html\/ActionView\/Helpers\/FormOptionsHelper.html#M002255","(collection, group_method, group_label_method, option_key_method, option_value_method, selected_key = nil)","Returns a string of <tt><option><\/tt> tags, like <tt>options_from_collection_for_select<\/tt>, but groups",2],["options","ActiveRecord::Reflection::MacroReflection","classes.html\/ActiveRecord\/Reflection\/MacroReflection.html#M001058","()","Returns the hash of options used for the macro.  For example, it would return <tt>{ :class_name => \"Money\"",2],["options","Commands::Discover","classes.html\/Commands\/Discover.html#M000201","()","",2],["options","Commands::Info","classes.html\/Commands\/Info.html#M000216","()","",2],["options","Commands::Install","classes.html\/Commands\/Install.html#M000206","()","",2],["options","Commands::List","classes.html\/Commands\/List.html#M000189","()","",2],["options","Commands::Plugin","classes.html\/Commands\/Plugin.html#M000184","()","",2],["options","Commands::Remove","classes.html\/Commands\/Remove.html#M000213","()","",2],["options","Commands::Source","classes.html\/Commands\/Source.html#M000195","()","",2],["options","Commands::Sources","classes.html\/Commands\/Sources.html#M000192","()","",2],["options","Commands::Unsource","classes.html\/Commands\/Unsource.html#M000198","()","",2],["options","Commands::Update","classes.html\/Commands\/Update.html#M000210","()","",2],["options","Rails::Generator::Options","classes.html\/Rails\/Generator\/Options.html#M000317","()","Each instance has an options hash that's populated by #parse. ",2],["options_for_ajax","ActionView::Helpers::PrototypeHelper","classes.html\/ActionView\/Helpers\/PrototypeHelper.html#M002364","(options)","",2],["options_for_javascript","ActionView::Helpers::JavaScriptHelper","classes.html\/ActionView\/Helpers\/JavaScriptHelper.html#M002373","(options)","",2],["options_for_select","ActionView::Helpers::FormOptionsHelper","classes.html\/ActionView\/Helpers\/FormOptionsHelper.html#M002253","(container, selected = nil)","Accepts a container (hash, array, enumerable, your type) and returns a string of option tags. Given a",2],["options_from_collection_for_select","ActionView::Helpers::FormOptionsHelper","classes.html\/ActionView\/Helpers\/FormOptionsHelper.html#M002254","(collection, value_method, text_method, selected = nil)","Returns a string of option tags that have been compiled by iterating over the +collection+ and assigning",2],["options_include_default?","ActiveRecord::ConnectionAdapters::SchemaStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000640","(options)","",2],["ord","ActiveSupport::CoreExtensions::String::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/String\/Conversions.html#M002873","()","'a'.ord == 'a'[0] for Ruby 1.9 forward compatibility. ",2],["ord","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002635","()","Returns the codepoint of the first character in the string. Example: '\u3053\u3093\u306b\u3061\u306f'.mb_chars.ord #=> 12371 ",2],["ordinalize","ActiveSupport::CoreExtensions::Integer::Inflections","classes.html\/ActiveSupport\/CoreExtensions\/Integer\/Inflections.html#M002938","()","Ordinalize turns a number into an ordinal string used to denote the position in an ordered sequence such",2],["ordinalize","ActiveSupport::Inflector","classes.html\/ActiveSupport\/Inflector.html#M002793","(number)","Turns a number into an ordinal string used to denote the position in an ordered sequence such as 1st,",2],["orig_delete","ActiveResource::CustomMethods","classes.html\/ActiveResource\/CustomMethods.html#M001550","(custom_method_name, options = {})","Alias for #delete",2],["original_filename","ActionController::UploadedFile","classes.html\/ActionController\/UploadedFile.html#M001750","()","Take the basename of the upload's original filename. This handles the full Windows paths given by Internet",2],["output_filename","ActiveSupport::Testing::Performance::Benchmarker","classes.html\/ActiveSupport\/Testing\/Performance\/Benchmarker.html#M003326","()","",2],["output_filename","ActiveSupport::Testing::Performance::Performer","classes.html\/ActiveSupport\/Testing\/Performance\/Performer.html#M003321","()","",2],["output_filename","ActiveSupport::Testing::Performance::Profiler","classes.html\/ActiveSupport\/Testing\/Performance\/Profiler.html#M003331","(printer_class)","",2],["outside_transaction?","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000650","()","Checks whether there is currently no transaction active. This is done by querying the database driver,",2],["outside_transaction?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000753","()","The ruby-pg driver supports inspecting the transaction status, while the ruby-postgres driver does not.",2],["overlaps?","ActiveSupport::CoreExtensions::Range::Overlaps","classes.html\/ActiveSupport\/CoreExtensions\/Range\/Overlaps.html#M002923","(other)","Compare two ranges and see if they overlap eachother (1..5).overlaps?(4..6) # => true (1..5).overlaps?(7..9)",2],["parameterize","ActiveSupport::CoreExtensions::String::Inflections","classes.html\/ActiveSupport\/CoreExtensions\/String\/Inflections.html#M002843","(sep = '-')","Replaces special characters in a string so that it may be used as part of a 'pretty' URL. ==== Examples",2],["parameterize","ActiveSupport::Inflector","classes.html\/ActiveSupport\/Inflector.html#M002784","(string, sep = '-')","Replaces special characters in a string so that it may be used as part of a 'pretty' URL. ==== Examples",2],["parameters","ActionController::Request","classes.html\/ActionController\/Request.html#M002028","()","Returns both GET and POST \\parameters in a single hash. ",2],["params","ActionController::Request","classes.html\/ActionController\/Request.html#M002029","()","Alias for #parameters",2],["parent","ActiveSupport::CoreExtensions::Module","classes.html\/ActiveSupport\/CoreExtensions\/Module.html#M003021","()","Returns the module which contains this one according to its name. module M module N end end X = M::N",2],["parent_name","ActiveSupport::CoreExtensions::Module","classes.html\/ActiveSupport\/CoreExtensions\/Module.html#M003020","()","Returns the name of the module containing this one. p M::N.parent_name # => \"M\" ",2],["parents","ActiveSupport::CoreExtensions::Module","classes.html\/ActiveSupport\/CoreExtensions\/Module.html#M003022","()","Returns all the parents of this module according to its name, ordered from nested outwards. The receiver",2],["parse","ActiveSupport::TimeZone","classes.html\/ActiveSupport\/TimeZone.html#M002697","(str, now=now)","Method for creating new ActiveSupport::TimeWithZone instance in time zone of +self+ from parsed string.",2],["parse","ActiveSupport::XmlMini_LibXMLSAX","classes.html\/ActiveSupport\/XmlMini_LibXMLSAX.html#M002531","(string)","",2],["parse","ActiveSupport::XmlMini_NokogiriSAX","classes.html\/ActiveSupport\/XmlMini_NokogiriSAX.html#M002519","(string)","",2],["parse","CGI::Cookie","classes.html\/CGI\/Cookie.html#M001959","(raw_cookie)","Parses a raw cookie string into a hash of <tt>cookie-name => cookie-object<\/tt> pairs. cookies = CGI::Cookie::parse(\"raw_cookie_string\")",2],["parse","Mime::Type","classes.html\/Mime\/Type.html#M001941","(accept_header)","",2],["parse!","Commands::Discover","classes.html\/Commands\/Discover.html#M000202","(args)","",2],["parse!","Commands::Info","classes.html\/Commands\/Info.html#M000217","(args)","",2],["parse!","Commands::Install","classes.html\/Commands\/Install.html#M000208","(args)","",2],["parse!","Commands::List","classes.html\/Commands\/List.html#M000190","(args)","",2],["parse!","Commands::Plugin","classes.html\/Commands\/Plugin.html#M000187","(args=ARGV)","",2],["parse!","Commands::Plugin","classes.html\/Commands\/Plugin.html#M000185","(args=ARGV)","",2],["parse!","Commands::Remove","classes.html\/Commands\/Remove.html#M000214","(args)","",2],["parse!","Commands::Source","classes.html\/Commands\/Source.html#M000196","(args)","",2],["parse!","Commands::Sources","classes.html\/Commands\/Sources.html#M000193","(args)","",2],["parse!","Commands::Unsource","classes.html\/Commands\/Unsource.html#M000199","(args)","",2],["parse!","Commands::Update","classes.html\/Commands\/Update.html#M000211","(args)","",2],["parse!","Rails::Generator::Options","classes.html\/Rails\/Generator\/Options.html#M000321","(args, runtime_options = {})","Parse arguments into the options hash.  Classes may customize parsing behavior by overriding these methods:",2],["partial_path","ActionController::RecordIdentifier","classes.html\/ActionController\/RecordIdentifier.html#M001981","(record_or_class, controller_path = nil)","Returns plural\/singular for a record or class. Example: partial_path(post)                   # => \"posts\/post\"",2],["partial_path","ActionView::Helpers::RecordIdentificationHelper","classes.html\/ActionView\/Helpers\/RecordIdentificationHelper.html#M002284","(*args, &block)","See ActionController::RecordIdentifier.partial_path -- this is just a delegate to that for convenient",2],["password","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001445","()","Gets the \\password for REST HTTP authentication. ",2],["password=","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001446","(password)","Sets the \\password for REST HTTP authentication. ",2],["password=","ActiveResource::Connection","classes.html\/ActiveResource\/Connection.html#M001516","(password)","Set password for remote service. ",2],["password_field","ActionView::Helpers::FormHelper","classes.html\/ActionView\/Helpers\/FormHelper.html#M002390","(object_name, method, options = {})","Returns an input tag of the \"password\" type tailored for accessing a specified attribute (identified",2],["password_field_tag","ActionView::Helpers::FormTagHelper","classes.html\/ActionView\/Helpers\/FormTagHelper.html#M002301","(name = \"password\", value = nil, options = {})","Creates a password field, a masked text field that will hide the users input behind a mask character.",2],["past?","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003161","()","Tells whether the Date object's date lies in the past ",2],["past?","ActiveSupport::CoreExtensions::DateTime::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Calculations.html#M002902","()","Tells whether the DateTime object's datetime lies in the past ",2],["past?","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003100","()","Tells whether the Time object's time lies in the past ",2],["past?","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002566","()","",2],["path","ActionController::Request","classes.html\/ActionController\/Request.html#M002026","()","Returns the interpreted \\path to requested resource after all the installation directory of this application",2],["path","ActionView::Template","classes.html\/ActionView\/Template.html#M002225","()","",2],["path_for","ActionController::Caching::Actions::ActionCachePath","classes.html\/ActionController\/Caching\/Actions\/ActionCachePath.html#M001581","(controller, options, infer_extension = true)","",2],["path_parameters","ActionController::Request","classes.html\/ActionController\/Request.html#M002032","()","Returns a hash with the \\parameters used to form the \\path of the request. Returned hash keys are strings:",2],["path_to_image","ActionView::Helpers::AssetTagHelper","classes.html\/ActionView\/Helpers\/AssetTagHelper.html#M002422","(source)","Alias for #image_path",2],["path_to_javascript","ActionView::Helpers::AssetTagHelper","classes.html\/ActionView\/Helpers\/AssetTagHelper.html#M002412","(source)","Alias for #javascript_path",2],["path_to_stylesheet","ActionView::Helpers::AssetTagHelper","classes.html\/ActionView\/Helpers\/AssetTagHelper.html#M002419","(source)","Alias for #stylesheet_path",2],["path_without_extension","ActionView::Template","classes.html\/ActionView\/Template.html#M002226","()","",2],["path_without_format_and_extension","ActionView::Template","classes.html\/ActionView\/Template.html#M002227","()","",2],["period","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002540","()","Returns the underlying TZInfo::TimezonePeriod. ",2],["period_for_local","ActiveSupport::TimeZone","classes.html\/ActiveSupport\/TimeZone.html#M002703","(time, dst=true)","Available so that TimeZone instances respond like TZInfo::Timezone instances ",2],["period_for_utc","ActiveSupport::TimeZone","classes.html\/ActiveSupport\/TimeZone.html#M002702","(time)","Available so that TimeZone instances respond like TZInfo::Timezone instances ",2],["periodically_call_remote","ActionView::Helpers::PrototypeHelper","classes.html\/ActionView\/Helpers\/PrototypeHelper.html#M002317","(options = {})","Periodically calls the specified url (<tt>options[:url]<\/tt>) every <tt>options[:frequency]<\/tt> seconds",2],["petabyte","ActiveSupport::CoreExtensions::Numeric::Bytes","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Bytes.html#M003077","()","Alias for #petabytes",2],["petabytes","ActiveSupport::CoreExtensions::Numeric::Bytes","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Bytes.html#M003076","()","",2],["plugin_loader","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000071","()","",2],["plugins","Repository","classes.html\/Repository.html#M000179","()","",2],["plugins=","Rails::Configuration","classes.html\/Rails\/Configuration.html#M000095","(plugins)","",2],["plural","ActiveSupport::Inflector::Inflections","classes.html\/ActiveSupport\/Inflector\/Inflections.html#M002769","(rule, replacement)","Specifies a new pluralization rule and its replacement. The rule can either be a string or a regular",2],["plural_class_name","ActionController::RecordIdentifier","classes.html\/ActionController\/RecordIdentifier.html#M001984","(record_or_class)","Returns the plural class name of a record or class. Examples: plural_class_name(post)             # =>",2],["pluralize","ActionView::Helpers::TextHelper","classes.html\/ActionView\/Helpers\/TextHelper.html#M002270","(count, singular, plural = nil)","Attempts to pluralize the +singular+ word unless +count+ is 1. If +plural+ is supplied, it will use that",2],["pluralize","ActiveSupport::CoreExtensions::String::Inflections","classes.html\/ActiveSupport\/CoreExtensions\/String\/Inflections.html#M002834","()","Returns the plural form of the word in the string. \"post\".pluralize             # => \"posts\" \"octopus\".pluralize",2],["pluralize","ActiveSupport::Inflector","classes.html\/ActiveSupport\/Inflector.html#M002776","(word)","Returns the plural form of the word in the string. Examples: \"post\".pluralize             # => \"posts\"",2],["pluralize_table_names","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000958","","Indicates whether table names should be the pluralized versions of the corresponding class names. If",2],["polymorphic_path","ActionController::PolymorphicRoutes","classes.html\/ActionController\/PolymorphicRoutes.html#M001603","(record_or_hash_or_array, options = {})","Returns the path component of a URL for the given record. It uses <tt>polymorphic_url<\/tt> with <tt>:routing_type",2],["polymorphic_url","ActionController::PolymorphicRoutes","classes.html\/ActionController\/PolymorphicRoutes.html#M001602","(record_or_hash_or_array, options = {})","Constructs a call to a named RESTful route for the given record and returns the resulting URL string.",2],["pop_d","RecursiveHTTPFetcher","classes.html\/RecursiveHTTPFetcher.html#M000221","()","",2],["port","ActionController::Request","classes.html\/ActionController\/Request.html#M002019","()","Returns the port number of this request as an integer. ",2],["port_string","ActionController::Request","classes.html\/ActionController\/Request.html#M002021","()","Returns a \\port suffix like \":8080\" if the \\port number of this request is not the default HTTP \\port",2],["possible_controllers","ActionController::Routing","classes.html\/ActionController\/Routing.html#M001633","()","Returns the array of controller names currently available to ActionController::Routing. ",2],["post","ActionController::Integration::Session","classes.html\/ActionController\/Integration\/Session.html#M001836","(path, parameters = nil, headers = nil)","Performs a POST request with the given parameters. See get() for more details. ",2],["post","ActionController::TestProcess","classes.html\/ActionController\/TestProcess.html#M001760","(action, parameters = nil, session = nil, flash = nil)","Executes a request simulating POST HTTP method and set\/volley the response ",2],["post","ActiveResource::Connection","classes.html\/ActiveResource\/Connection.html#M001522","(path, body = '', headers = {})","Execute a POST request. Used to create new resources. ",2],["post","ActiveResource::CustomMethods","classes.html\/ActiveResource\/CustomMethods.html#M001547","(custom_method_name, options = {}, body = '')","",2],["post","ActiveResource::CustomMethods::InstanceMethods","classes.html\/ActiveResource\/CustomMethods\/InstanceMethods.html#M001553","(method_name, options = {}, body = nil)","",2],["post?","ActionController::Request","classes.html\/ActionController\/Request.html#M001991","()","Is this a POST request?  Equivalent to <tt>request.method == :post<\/tt>. ",2],["post_via_redirect","ActionController::Integration::Session","classes.html\/ActionController\/Integration\/Session.html#M001831","(path, parameters = nil, headers = nil)","Performs a POST request, following any subsequent redirect. See +request_via_redirect+ for more information.",2],["postgresql_version","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000784","()","Returns the version of the connected PostgreSQL version. ",2],["prefetch_primary_key?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000793","(table_name = nil)","Should primary key values be selected from their corresponding sequence before the insert statement?",2],["prefix","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001455","(options={})","Gets the \\prefix for a resource's nested URL (e.g., <tt>prefix\/collectionname\/1.xml<\/tt>) This method",2],["prefix=","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001457","(value = '#\/')","Sets the \\prefix for a resource's nested URL (e.g., <tt>prefix\/collectionname\/1.xml<\/tt>). Default value",2],["prefix_source","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001456","()","An attribute reader for the source string for the resource path \\prefix.  This method is regenerated",2],["preload_associations","ActiveRecord::AssociationPreload::ClassMethods","classes.html\/ActiveRecord\/AssociationPreload\/ClassMethods.html#M001295","(records, associations, preload_options={})","Eager loads the named associations for the given ActiveRecord record(s). In this description, 'association",2],["preload_frameworks","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000063","()","Preload all frameworks specified by the Configuration#frameworks. Used by Passenger to ensure everything's",2],["prepare!","ActionController::Response","classes.html\/ActionController\/Response.html#M001908","()","",2],["prepare_controller_class","ActionController::TestCase","classes.html\/ActionController\/TestCase.html#M001743","(new_class)","",2],["prepare_dispatcher","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000093","()","",2],["prepend_after_filter","ActionController::Filters::ClassMethods","classes.html\/ActionController\/Filters\/ClassMethods.html#M002057","(*filters, &block)","The passed <tt>filters<\/tt> will be prepended to the array of filters that run _after_ actions on this",2],["prepend_around_filter","ActionController::Filters::ClassMethods","classes.html\/ActionController\/Filters\/ClassMethods.html#M002060","(*filters, &block)","If you <tt>prepend_around_filter A.new, B.new<\/tt>, the filter chain looks like: A#before B#before #",2],["prepend_before_filter","ActionController::Filters::ClassMethods","classes.html\/ActionController\/Filters\/ClassMethods.html#M002054","(*filters, &block)","The passed <tt>filters<\/tt> will be prepended to the filter_chain and will execute before the action",2],["prepend_sources","Rails::Generator::Lookup::ClassMethods","classes.html\/Rails\/Generator\/Lookup\/ClassMethods.html#M000362","(*args)","Add a source to the beginning of the list. ",2],["prepend_view_path","ActionController::Base","classes.html\/ActionController\/Base.html#M001800","(path)","Adds a view_path to the front of the view_paths array. This change affects the current request only.",2],["prepend_view_path","ActionController::Base","classes.html\/ActionController\/Base.html#M001788","(path)","Adds a view_path to the front of the view_paths array. If the current class has no view paths, copy them",2],["presence","Object","classes.html\/Object.html#M003236","()","Returns object if it's #present? otherwise returns nil. object.presence is equivalent to object.present?",2],["present?","Object","classes.html\/Object.html#M003235","()","An object is present if it's not blank. ",2],["prev_month","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003184","()","Short-hand for months_ago(1) ",2],["prev_month","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003117","()","Short-hand for months_ago(1) ",2],["prev_year","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003181","()","Short-hand for years_ago(1) ",2],["prev_year","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003114","()","Short-hand for years_ago(1) ",2],["primary_key","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000991","()","Defines the primary key field -- can be overridden in subclasses. Overwriting will negate any effect",2],["primary_key","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000479","(table)","Returns just a table's primary key ",2],["primary_key","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000772","(table)","Returns just a table's primary key ",2],["primary_key","ActiveRecord::ConnectionAdapters::TableDefinition","classes.html\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M000555","(name)","Appends a primary key definition to the table definition. Can be called multiple times, but this is probably",2],["primary_key_prefix_type","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000955","","Accessor for the prefix type that will be prepended to every primary key column name. The options are",2],["prime_cache","ActiveSupport::Memoizable::InstanceMethods","classes.html\/ActiveSupport\/Memoizable\/InstanceMethods.html#M002667","(*syms)","",2],["process","ActionController::TestProcess","classes.html\/ActionController\/TestProcess.html#M001764","(action, parameters = nil, session = nil, flash = nil, http_method = 'GET')","",2],["process","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000057","()","Sequentially step through all of the available initialization routines, in order (view execution order",2],["process!","RailsFCGIHandler","classes.html\/RailsFCGIHandler.html#M000023","(provider = FCGI)","",2],["process!","RailsFCGIHandler","classes.html\/RailsFCGIHandler.html#M000021","(*args, &block)","Initialize and run the FastCGI instance, passing arguments through to new. ",2],["process_each_request","RailsFCGIHandler","classes.html\/RailsFCGIHandler.html#M000024","(provider)","",2],["process_request","RailsFCGIHandler","classes.html\/RailsFCGIHandler.html#M000025","(request)","",2],["process_view_paths","ActionView::Base","classes.html\/ActionView\/Base.html#M002210","(value)","",2],["profile","ActiveSupport::Testing::Performance::Metrics::Base","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M003338","()","",2],["protect_against_forgery?","ActionController::RequestForgeryProtection","classes.html\/ActionController\/RequestForgeryProtection.html#M001645","()","",2],["protect_against_forgery?","ActionView::TestCase","classes.html\/ActionView\/TestCase.html#M002175","()","",2],["protect_from_forgery","ActionController::RequestForgeryProtection::ClassMethods","classes.html\/ActionController\/RequestForgeryProtection\/ClassMethods.html#M001639","(options = {})","Turn on request forgery protection. Bear in mind that only non-GET, HTML\/JavaScript requests are checked.",2],["protocol","ActionController::Request","classes.html\/ActionController\/Request.html#M002014","()","Returns 'https:\/\/' if this is an SSL request and 'http:\/\/' otherwise. ",2],["proxy","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001441","()","Gets the \\proxy variable if a proxy is required ",2],["proxy=","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001442","(proxy)","Sets the URI of the http proxy to the value in the +proxy+ argument. ",2],["proxy=","ActiveResource::Connection","classes.html\/ActiveResource\/Connection.html#M001514","(proxy)","Set the proxy for remote service. ",2],["proxy_found","ActiveRecord::NamedScope::Scope","classes.html\/ActiveRecord\/NamedScope\/Scope.html#M000840","()","",2],["public_path","Rails","classes.html\/Rails.html#M000053","()","",2],["public_path=","Rails","classes.html\/Rails.html#M000054","(path)","",2],["push_d","RecursiveHTTPFetcher","classes.html\/RecursiveHTTPFetcher.html#M000220","(dir)","",2],["put","ActionController::Integration::Session","classes.html\/ActionController\/Integration\/Session.html#M001837","(path, parameters = nil, headers = nil)","Performs a PUT request with the given parameters. See get() for more details. ",2],["put","ActionController::TestProcess","classes.html\/ActionController\/TestProcess.html#M001761","(action, parameters = nil, session = nil, flash = nil)","Executes a request simulating PUT HTTP method and set\/volley the response ",2],["put","ActiveResource::Connection","classes.html\/ActiveResource\/Connection.html#M001521","(path, body = '', headers = {})","Execute a PUT request (see HTTP protocol documentation if unfamiliar). Used to update resources. ",2],["put","ActiveResource::CustomMethods","classes.html\/ActiveResource\/CustomMethods.html#M001548","(custom_method_name, options = {}, body = '')","",2],["put","ActiveResource::CustomMethods::InstanceMethods","classes.html\/ActiveResource\/CustomMethods\/InstanceMethods.html#M001554","(method_name, options = {}, body = '')","",2],["put?","ActionController::Request","classes.html\/ActionController\/Request.html#M001992","()","Is this a PUT request?  Equivalent to <tt>request.method == :put<\/tt>. ",2],["put_via_redirect","ActionController::Integration::Session","classes.html\/ActionController\/Integration\/Session.html#M001832","(path, parameters = nil, headers = nil)","Performs a PUT request, following any subsequent redirect. See +request_via_redirect+ for more information.",2],["query_parameters","ActionController::Request","classes.html\/ActionController\/Request.html#M002036","()","Alias for #GET",2],["query_string","ActionController::Request","classes.html\/ActionController\/Request.html#M002024","()","Returns the query string, accounting for server idiosyncrasies. ",2],["quote","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000435","(value, column = nil)","QUOTING ================================================== ",2],["quote","ActiveRecord::ConnectionAdapters::Quoting","classes.html\/ActiveRecord\/ConnectionAdapters\/Quoting.html#M000504","(value, column = nil)","Quotes the column value to help prevent {SQL injection attacks}[http:\/\/en.wikipedia.org\/wiki\/SQL_injection].",2],["quote_column_name","ActiveRecord::ConnectionAdapters::Quoting","classes.html\/ActiveRecord\/ConnectionAdapters\/Quoting.html#M000506","(column_name)","Quotes the column name. Defaults to no quoting. ",2],["quote_string","ActiveRecord::ConnectionAdapters::Quoting","classes.html\/ActiveRecord\/ConnectionAdapters\/Quoting.html#M000505","(s)","Quotes a string, escaping any ' (single quote) and \\ (backslash) characters. ",2],["quote_table_name","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000795","(name)","Override to return the quoted table name. Defaults to column quoting. ",2],["quote_table_name","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000739","(name)","Checks the following cases: - table_name - \"table.name\" - schema_name.table_name - schema_name.\"table.name\"",2],["quote_table_name","ActiveRecord::ConnectionAdapters::Quoting","classes.html\/ActiveRecord\/ConnectionAdapters\/Quoting.html#M000507","(table_name)","Quotes the table name. Defaults to column name quoting. ",2],["quoted_columns_for_index","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000482","(column_names, options = {})","",2],["quoted_columns_for_index","ActiveRecord::ConnectionAdapters::SchemaStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000639","(column_names, options = {})","Overridden by the mysql adapter for supporting index lengths ",2],["quoted_date","ActiveRecord::ConnectionAdapters::Quoting","classes.html\/ActiveRecord\/ConnectionAdapters\/Quoting.html#M000510","(value)","",2],["quoted_false","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000440","()","",2],["quoted_false","ActiveRecord::ConnectionAdapters::Quoting","classes.html\/ActiveRecord\/ConnectionAdapters\/Quoting.html#M000509","()","",2],["quoted_locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","classes.html\/ActiveRecord\/Locking\/Optimistic\/ClassMethods.html#M001355","()","Quote the column name used for optimistic locking. ",2],["quoted_true","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000439","()","",2],["quoted_true","ActiveRecord::ConnectionAdapters::Quoting","classes.html\/ActiveRecord\/ConnectionAdapters\/Quoting.html#M000508","()","",2],["radio_button","ActionView::Helpers::FormHelper","classes.html\/ActionView\/Helpers\/FormHelper.html#M002395","(object_name, method, tag_value, options = {})","Returns a radio button tag for accessing a specified attribute (identified by +method+) on an object",2],["radio_button_tag","ActionView::Helpers::FormTagHelper","classes.html\/ActionView\/Helpers\/FormTagHelper.html#M002304","(name, value, checked = false, options = {})","Creates a radio button; use groups of radio buttons named the same to allow users to select from a group",2],["raise","ActiveSupport::BasicObject","classes.html\/ActiveSupport\/BasicObject.html#M002532","(*args)","Let ActiveSupport::BasicObject at least raise exceptions. ",2],["random_bytes","ActiveSupport::SecureRandom","classes.html\/ActiveSupport\/SecureRandom.html#M002794","(n=nil)","SecureRandom.random_bytes generates a random binary string. The argument n specifies the length of the",2],["random_element","ActiveSupport::CoreExtensions::Array::RandomAccess","classes.html\/ActiveSupport\/CoreExtensions\/Array\/RandomAccess.html#M003027","()","Returns a random element from the array. ",2],["random_number","ActiveSupport::SecureRandom","classes.html\/ActiveSupport\/SecureRandom.html#M002797","(n=0)","SecureRandom.random_number generates a random number. If an positive integer is given as n, SecureRandom.random_number",2],["raw","ActionView::Helpers::RawOutputHelper","classes.html\/ActionView\/Helpers\/RawOutputHelper.html#M002377","(stringish)","",2],["raw_connection","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000803","()","Provides access to the underlying database driver for this adapter. For example, this method returns",2],["raw_host_with_port","ActionController::Request","classes.html\/ActionController\/Request.html#M002016","()","Returns the \\host for this request, such as \"example.com\". ",2],["raw_post","ActionController::Request","classes.html\/ActionController\/Request.html#M002027","()","Read the request \\body. This is useful for web services that need to work with raw requests directly.",2],["read","ActionController::CGIHandler::ProperStream","classes.html\/ActionController\/CGIHandler\/ProperStream.html#M001752","(*args)","",2],["read","ActiveSupport::Cache::CompressedMemCacheStore","classes.html\/ActiveSupport\/Cache\/CompressedMemCacheStore.html#M002713","(name, options = nil)","",2],["read","ActiveSupport::Cache::FileStore","classes.html\/ActiveSupport\/Cache\/FileStore.html#M002740","(name, options = nil)","",2],["read","ActiveSupport::Cache::MemoryStore","classes.html\/ActiveSupport\/Cache\/MemoryStore.html#M002750","(name, options = nil)","",2],["read","ActiveSupport::Cache::Store","classes.html\/ActiveSupport\/Cache\/Store.html#M003371","(key, options = nil)","Fetches data from the cache, using the given key. If there is data in the cache with the given key, then",2],["read","ActiveSupport::Cache::Strategy::LocalCache","classes.html\/ActiveSupport\/Cache\/Strategy\/LocalCache.html#M002730","(key, options = nil)","",2],["read","ActiveSupport::Cache::SynchronizedMemoryStore","classes.html\/ActiveSupport\/Cache\/SynchronizedMemoryStore.html#M002758","(name, options = nil)","",2],["read_fragment","ActionController::Caching::Fragments","classes.html\/ActionController\/Caching\/Fragments.html#M001575","(key, options = nil)","Reads a cached fragment from the location signified by <tt>key<\/tt> (see <tt>expire_fragment<\/tt> for",2],["read_multi","ActiveSupport::Cache::MemCacheStore","classes.html\/ActiveSupport\/Cache\/MemCacheStore.html#M002717","(*keys)","Reads multiple keys from the cache. ",2],["read_multi","ActiveSupport::Cache::MemoryStore","classes.html\/ActiveSupport\/Cache\/MemoryStore.html#M002749","(*names)","",2],["readable_inspect","ActiveSupport::CoreExtensions::Date::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Conversions.html#M003150","()","Overrides the default inspect method with a human readable one, e.g., \"Mon, 21 Feb 2005\" ",2],["readable_inspect","ActiveSupport::CoreExtensions::DateTime::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Conversions.html#M002891","()","Overrides the default inspect method with a human readable one, e.g., \"Mon, 21 Feb 2005 14:30:00 +0000\"",2],["readme","Rails::Generator::Commands::Base","classes.html\/Rails\/Generator\/Commands\/Base.html#M000381","(*args)","Does nothing for all commands except Create. ",2],["readme","Rails::Generator::Commands::Create","classes.html\/Rails\/Generator\/Commands\/Create.html#M000400","(*relative_sources)","Display a README. ",2],["readme","Rails::Generator::Commands::List","classes.html\/Rails\/Generator\/Commands\/List.html#M000418","(*args)","",2],["readonly!","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001141","()","Marks this record as read only. ",2],["readonly?","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001140","()","Returns +true+ if the record is read only. Records loaded through joins with piggy-back attributes will",2],["readonly_attributes","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000986","()","Returns an array of all the attributes that have been specified as readonly. ",2],["receive","ActionMailer::Base","classes.html\/ActionMailer\/Base.html#M002489","(raw_email)","Receives a raw email, parses it into an email object, decodes it, instantiates a new mailer, and passes",2],["reconnect!","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000798","()","Disconnects from the database if already connected, and establishes a new connection with the database.",2],["reconnect!","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000443","()","",2],["reconnect!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000725","()","Close then reopen the connection. ",2],["record","ActiveSupport::Testing::Performance::Benchmarker","classes.html\/ActiveSupport\/Testing\/Performance\/Benchmarker.html#M003323","()","",2],["record","ActiveSupport::Testing::Performance::Profiler","classes.html\/ActiveSupport\/Testing\/Performance\/Profiler.html#M003330","()","",2],["record","Rails::Generator::Base","classes.html\/Rails\/Generator\/Base.html#M000341","()","Convenience method for generator subclasses to record a manifest. ",2],["record_entity_expansion!","REXML::Document","classes.html\/REXML\/Document.html#M002941","()","",2],["recycle!","ActionController::TestResponse","classes.html\/ActionController\/TestResponse.html#M001754","()","",2],["redirect","ActionController::Response","classes.html\/ActionController\/Response.html#M001905","(url, status)","",2],["redirect?","ActionController::Integration::Session","classes.html\/ActionController\/Integration\/Session.html#M001834","()","Returns +true+ if the last response was a redirect. ",2],["redirect_to","ActionController::Base","classes.html\/ActionController\/Base.html#M001810","(options = {}, response_status = {})","Redirects the browser to the target specified in +options+. This parameter can take one of three forms:",2],["redirect_to","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes.html\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M002338","(location)","Redirects the browser to the given +location+ using JavaScript, in the same form as +url_for+. Examples:",2],["redirect_to_full_url","ActionController::Base","classes.html\/ActionController\/Base.html#M001811","(url, status)","",2],["redirect_to_url","ActionController::TestProcess","classes.html\/ActionController\/TestProcess.html#M001771","()","",2],["reference?","Rails::Generator::GeneratedAttribute","classes.html\/Rails\/Generator\/GeneratedAttribute.html#M000335","()","",2],["references","ActiveRecord::ConnectionAdapters::Table","classes.html\/ActiveRecord\/ConnectionAdapters\/Table.html#M000589","(*args)","Adds a reference. Optionally adds a +type+ column. <tt>references<\/tt> and <tt>belongs_to<\/tt> are acceptable.",2],["references","ActiveRecord::ConnectionAdapters::TableDefinition","classes.html\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M000575","(*args)","",2],["reflect_on_aggregation","ActiveRecord::Reflection::ClassMethods","classes.html\/ActiveRecord\/Reflection\/ClassMethods.html#M001051","(aggregation)","Returns the AggregateReflection object for the named +aggregation+ (use the symbol). Example: Account.reflect_on_aggregation(:balance)",2],["reflect_on_all_aggregations","ActiveRecord::Reflection::ClassMethods","classes.html\/ActiveRecord\/Reflection\/ClassMethods.html#M001050","()","Returns an array of AggregateReflection objects for all the aggregations in the class. ",2],["reflect_on_all_associations","ActiveRecord::Reflection::ClassMethods","classes.html\/ActiveRecord\/Reflection\/ClassMethods.html#M001052","(macro = nil)","Returns an array of AssociationReflection objects for all the associations in the class. If you only",2],["reflect_on_all_autosave_associations","ActiveRecord::Reflection::ClassMethods","classes.html\/ActiveRecord\/Reflection\/ClassMethods.html#M001054","()","Returns an array of AssociationReflection objects for all associations which have <tt>:autosave<\/tt>",2],["reflect_on_association","ActiveRecord::Reflection::ClassMethods","classes.html\/ActiveRecord\/Reflection\/ClassMethods.html#M001053","(association)","Returns the AssociationReflection object for the named +association+ (use the symbol). Example: Account.reflect_on_association(:owner)",2],["reflections","ActiveRecord::Reflection::ClassMethods","classes.html\/ActiveRecord\/Reflection\/ClassMethods.html#M001049","()","Returns a hash containing all AssociationReflection objects for the current class Example: Invoice.reflections",2],["refresh","Rails::GemDependency","classes.html\/Rails\/GemDependency.html#M000265","()","",2],["refresh!","Rails::VendorGemSourceIndex","classes.html\/Rails\/VendorGemSourceIndex.html#M000231","()","",2],["regexp_chunk","ActionController::Routing::OptionalFormatSegment","classes.html\/ActionController\/Routing\/OptionalFormatSegment.html#M002102","()","",2],["register","Mime::Type","classes.html\/Mime\/Type.html#M001940","(string, symbol, mime_type_synonyms = [], extension_synonyms = [], skip_lookup = false)","",2],["register_alias","Mime::Type","classes.html\/Mime\/Type.html#M001939","(string, symbol, extension_synonyms = [])","Registers an alias that's not used on mime type lookup, but can be referenced directly. Especially useful",2],["register_javascript_expansion","ActionView::Helpers::AssetTagHelper","classes.html\/ActionView\/Helpers\/AssetTagHelper.html#M002414","(expansions)","Register one or more javascript files to be included when <tt>symbol<\/tt> is passed to <tt>javascript_include_tag<\/tt>.",2],["register_javascript_include_default","ActionView::Helpers::AssetTagHelper","classes.html\/ActionView\/Helpers\/AssetTagHelper.html#M002416","(*sources)","Register one or more additional JavaScript files to be included when <tt>javascript_include_tag :defaults<\/tt>",2],["register_stylesheet_expansion","ActionView::Helpers::AssetTagHelper","classes.html\/ActionView\/Helpers\/AssetTagHelper.html#M002415","(expansions)","Register one or more stylesheet files to be included when <tt>symbol<\/tt> is passed to <tt>stylesheet_link_tag<\/tt>.",2],["regular_writer","HashWithIndifferentAccess","classes.html\/HashWithIndifferentAccess.html#M002955","(key, value)","Alias for #[]=",2],["relative_path","ActionView::Template","classes.html\/ActionView\/Template.html#M002228","()","",2],["release_connection","ActiveRecord::ConnectionAdapters::ConnectionPool","classes.html\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M000682","()","Signal that the thread is finished with the current connection. #release_connection releases the connection-thread",2],["release_savepoint","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000816","()","",2],["release_savepoint","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000455","()","",2],["release_savepoint","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000756","()","",2],["reload","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes.html\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M002339","()","Reloads the browser's current +location+ using JavaScript Examples: # Generates: window.location.reload();",2],["reload","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001123","(options = nil)","Reloads the attributes of this object from the database. The optional options argument is passed to find",2],["reload","ActiveRecord::NamedScope::Scope","classes.html\/ActiveRecord\/NamedScope\/Scope.html#M000833","()","",2],["reload","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001491","()","A method to \\reload the attributes of this object from the remote web service. ==== Examples my_branch",2],["reload!","Object","classes.html\/Object.html#M000020","()","reloads the environment ",2],["reload!","RailsFCGIHandler","classes.html\/RailsFCGIHandler.html#M000037","()","",2],["reload_application","ActionController::Dispatcher","classes.html\/ActionController\/Dispatcher.html#M001622","()","",2],["reload_handler","RailsFCGIHandler","classes.html\/RailsFCGIHandler.html#M000034","(signal)","",2],["reload_plugins?","Rails::Configuration","classes.html\/Rails\/Configuration.html#M000096","()","Returns true if plugin reloading is enabled. ",2],["reload_with_autosave_associations","ActiveRecord::AutosaveAssociation","classes.html\/ActiveRecord\/AutosaveAssociation.html#M001400","(options = nil)","Reloads the attributes of the object as usual and removes a mark for destruction. ",2],["remote_form_for","ActionView::Helpers::PrototypeHelper","classes.html\/ActionView\/Helpers\/PrototypeHelper.html#M002319","(record_or_name_or_array, *args, &proc)","Creates a form that will submit using XMLHttpRequest in the background instead of the regular reloading",2],["remote_function","ActionView::Helpers::PrototypeHelper","classes.html\/ActionView\/Helpers\/PrototypeHelper.html#M002323","(options)","Returns the JavaScript needed for a remote function. Takes the same arguments as link_to_remote. Example:",2],["remote_ip","ActionController::Request","classes.html\/ActionController\/Request.html#M002011","()","Determines originating IP address.  REMOTE_ADDR is the standard but will fail if the user is behind a",2],["remove","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes.html\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M002333","(*ids)","Removes the DOM elements with the given +ids+ from the page. Example: # Remove a few people # Generates:",2],["remove","ActiveRecord::ConnectionAdapters::Table","classes.html\/ActiveRecord\/ConnectionAdapters\/Table.html#M000585","(*column_names)","Removes the column(s) from the table definition. ===== Examples t.remove(:qualification) t.remove(:qualification,",2],["remove","Repositories","classes.html\/Repositories.html#M000168","(uri)","",2],["remove_belongs_to","ActiveRecord::ConnectionAdapters::Table","classes.html\/ActiveRecord\/ConnectionAdapters\/Table.html#M000592","(*args)","Alias for #remove_references",2],["remove_column","ActiveRecord::ConnectionAdapters::SchemaStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000608","(table_name, *column_names)","Removes the column(s) from the table definition. ===== Examples remove_column(:suppliers, :qualification)",2],["remove_columns","ActiveRecord::ConnectionAdapters::SchemaStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000609","(table_name, *column_names)","Alias for #remove_column",2],["remove_connection","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000718","(klass = self)","",2],["remove_connection","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes.html\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html#M000706","(klass)","Remove the connection for this class. This will close the active connection and the defined connection",2],["remove_index","ActiveRecord::ConnectionAdapters::SchemaStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000614","(table_name, options = {})","Remove the given index from the table. Remove the suppliers_name_index in the suppliers table. remove_index",2],["remove_index","ActiveRecord::ConnectionAdapters::Table","classes.html\/ActiveRecord\/ConnectionAdapters\/Table.html#M000586","(options = {})","Removes the given index from the table. ===== Examples ====== Remove the suppliers_name_index in the",2],["remove_references","ActiveRecord::ConnectionAdapters::Table","classes.html\/ActiveRecord\/ConnectionAdapters\/Table.html#M000591","(*args)","Removes a reference. Optionally removes a +type+ column. <tt>remove_references<\/tt> and <tt>remove_belongs_to<\/tt>",2],["remove_silencers!","ActiveSupport::BacktraceCleaner","classes.html\/ActiveSupport\/BacktraceCleaner.html#M002655","()","Will remove all silencers, but leave in the filters. This is useful if your context of debugging suddenly",2],["remove_spec","Rails::VendorGemSourceIndex","classes.html\/Rails\/VendorGemSourceIndex.html#M000239","(spec)","",2],["remove_timestamps","ActiveRecord::ConnectionAdapters::SchemaStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000638","(table_name)","Removes the timestamp columns (created_at and updated_at) from the table definition. ===== Examples remove_timestamps(:suppliers)",2],["remove_timestamps","ActiveRecord::ConnectionAdapters::Table","classes.html\/ActiveRecord\/ConnectionAdapters\/Table.html#M000587","()","Removes the timestamp columns (created_at and updated_at) from the table. ===== Example t.remove_timestamps",2],["rename","ActiveRecord::ConnectionAdapters::Table","classes.html\/ActiveRecord\/ConnectionAdapters\/Table.html#M000588","(column_name, new_column_name)","Renames a column. ===== Example t.rename(:description, :name) ",2],["rename_column","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000778","(table_name, column_name, new_column_name)","Renames a column in a table. ",2],["rename_column","ActiveRecord::ConnectionAdapters::SchemaStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000612","(table_name, column_name, new_column_name)","Renames a column. ===== Example rename_column(:suppliers, :description, :name) ",2],["rename_index","ActiveRecord::ConnectionAdapters::SchemaStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000616","(table_name, old_name, new_name)","Rename an index. Rename the index_people_on_last_name index to index_users_on_last_name rename_index",2],["rename_table","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000469","(table_name, new_name)","",2],["rename_table","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000773","(name, new_name)","Renames a table. ",2],["rename_table","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000559","(name, new_name)","",2],["rename_table","ActiveRecord::ConnectionAdapters::SchemaStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000605","(table_name, new_name)","Renames a table. ===== Example rename_table('octopuses', 'octopi') ",2],["render","ActionController::Base","classes.html\/ActionController\/Base.html#M001802","(options = nil, extra_options = {}, &block)","Renders the content that will be returned to the browser as the response body. === Rendering an action",2],["render","ActionView::TemplateHandler","classes.html\/ActionView\/TemplateHandler.html#M002481","(template, local_assigns)","",2],["render","ActionView::TestCase","classes.html\/ActionView\/TestCase.html#M002174","(options = {}, local_assigns = {}, &block)","",2],["render_optional_error_file","ActionController::Rescue","classes.html\/ActionController\/Rescue.html#M002133","(status_code)","Attempts to render a static error page based on the <tt>status_code<\/tt> thrown, or just return headers",2],["render_template","ActionView::Template","classes.html\/ActionView\/Template.html#M002233","(view, local_assigns = {})","",2],["render_to_string","ActionController::Base","classes.html\/ActionController\/Base.html#M001803","(options = nil, &block)","Renders according to the same rules as <tt>render<\/tt>, but returns the result in a string instead of",2],["reorder_characters","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002649","(codepoints)","Re-order codepoints so the string becomes canonical. ",2],["replace","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes.html\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M002332","(id, *options_for_render)","Replaces the \"outer HTML\" (i.e., the entire element, not just its contents) of the DOM element with the",2],["replace_html","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes.html\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M002331","(id, *options_for_render)","Replaces the inner HTML of the DOM element with the given +id+. +options_for_render+ may be either a",2],["replace_or_append!","ActiveSupport::Callbacks::CallbackChain","classes.html\/ActiveSupport\/Callbacks\/CallbackChain.html#M003267","(chain)","TODO: Decompose into more Array like behavior ",2],["replay","Rails::Generator::Manifest","classes.html\/Rails\/Generator\/Manifest.html#M000306","(target = nil)","Replay recorded actions. ",2],["report","ActiveSupport::Testing::Performance::Performer","classes.html\/ActiveSupport\/Testing\/Performance\/Performer.html#M003320","()","",2],["report","ActiveSupport::Testing::Performance::Profiler","classes.html\/ActiveSupport\/Testing\/Performance\/Profiler.html#M003329","()","",2],["request_http_basic_authentication","ActionController::HttpAuthentication::Basic::ControllerMethods","classes.html\/ActionController\/HttpAuthentication\/Basic\/ControllerMethods.html#M001650","(realm = \"Application\")","",2],["request_http_digest_authentication","ActionController::HttpAuthentication::Digest::ControllerMethods","classes.html\/ActionController\/HttpAuthentication\/Digest\/ControllerMethods.html#M001659","(realm = \"Application\", message = nil)","Render output including the HTTP Digest authentication header ",2],["request_method","ActionController::Request","classes.html\/ActionController\/Request.html#M001988","()","Returns the true HTTP request \\method as a lowercase symbol, such as <tt>:get<\/tt>. If the request \\method",2],["request_parameters","ActionController::Request","classes.html\/ActionController\/Request.html#M002038","()","Alias for #POST",2],["request_uri","ActionController::Request","classes.html\/ActionController\/Request.html#M002025","()","Returns the request URI, accounting for server idiosyncrasies. WEBrick includes the full URL. IIS leaves",2],["request_via_redirect","ActionController::Integration::Session","classes.html\/ActionController\/Integration\/Session.html#M001829","(http_method, path, parameters = nil, headers = nil)","Performs a request using the specified method, following any subsequent redirect. Note that the redirects",2],["requests","ActiveResource::Connection","classes.html\/ActiveResource\/Connection.html#M001511","()","",2],["requests","ActiveResource::HttpMock","classes.html\/ActiveResource\/HttpMock.html#M001558","()","Returns an array of all request objects that have been sent to the mock.  You can use this to check if",2],["require_fixture_classes","ActiveRecord::TestFixtures::ClassMethods","classes.html\/ActiveRecord\/TestFixtures\/ClassMethods.html#M000873","(table_names = nil)","",2],["require_frameworks","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000062","()","Requires all frameworks specified by the Configuration#frameworks list. By default, all frameworks (Active",2],["require_library_or_gem","Kernel","classes.html\/Kernel.html#M002928","(library_name)","Require a library with fallback to RubyGems.  Warnings during library loading are silenced to increase",2],["requirement","Rails::GemDependency","classes.html\/Rails\/GemDependency.html#M000252","()","",2],["requirement","Rails::GemDependency","classes.html\/Rails\/GemDependency.html#M000253","()","",2],["requires_reloading?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000801","()","Returns true if its safe to reload the connection between requests for development mode. ",2],["requires_reloading?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000498","()","",2],["rescue_action","ActionController::Rescue","classes.html\/ActionController\/Rescue.html#M002130","(exception)","Exception handler called when the performance of an action raises an exception. ",2],["rescue_action_in_public","ActionController::Rescue","classes.html\/ActionController\/Rescue.html#M002132","(exception)","Overwrite to implement public exception handling (for requests answering false to <tt>local_request?<\/tt>).",2],["rescue_action_in_public!","ActionController::TestCase","classes.html\/ActionController\/TestCase.html#M001745","()","Cause the action to be rescued according to the regular rules for rescue_action when the visitor is not",2],["rescue_action_locally","ActionController::Rescue","classes.html\/ActionController\/Rescue.html#M002135","(exception)","Render detailed diagnostics for unhandled exceptions rescued from a controller action. ",2],["rescue_action_without_handler","ActionController::Rescue","classes.html\/ActionController\/Rescue.html#M002136","(exception)","",2],["rescue_action_without_handler","ActionController::TestCase::RaiseActionExceptions","classes.html\/ActionController\/TestCase\/RaiseActionExceptions.html#M001738","(e)","",2],["rescue_from","ActiveSupport::Rescuable::ClassMethods","classes.html\/ActiveSupport\/Rescuable\/ClassMethods.html#M003302","(*klasses, &block)","Rescue exceptions raised in controller actions. <tt>rescue_from<\/tt> receives a series of exception classes",2],["rescue_with_handler","ActiveSupport::Rescuable","classes.html\/ActiveSupport\/Rescuable.html#M003303","(exception)","Tries to rescue the exception by looking up and calling a registered handler. ",2],["reset!","ActionController::Integration::Runner","classes.html\/ActionController\/Integration\/Runner.html#M001869","()","Reset the current session. This is useful for testing multiple sessions in a single test case. ",2],["reset!","ActionController::Integration::Session","classes.html\/ActionController\/Integration\/Session.html#M001824","()","Resets the instance. This can be used to reset the state information in an existing session instance,",2],["reset!","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000800","()","Reset the state of this connection, directing the DBMS to clear transactions and other connection-related",2],["reset!","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000445","()","",2],["reset!","ActiveResource::HttpMock","classes.html\/ActiveResource\/HttpMock.html#M001561","()","Deletes all logged requests and responses. ",2],["reset_cache","Fixtures","classes.html\/Fixtures.html#M000843","(connection = nil)","",2],["reset_cache_if_stale!","ActionView::ReloadableTemplate","classes.html\/ActionView\/ReloadableTemplate.html#M002165","()","",2],["reset_column_information","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001009","()","Resets all the cached information about columns, which will cause them to be reloaded on the next request.",2],["reset_counters","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000977","(id, *counters)","Resets one or more counter caches to their correct value using an SQL count query.  This is useful when",2],["reset_cycle","ActionView::Helpers::TextHelper","classes.html\/ActionView\/Helpers\/TextHelper.html#M002279","(name = \"default\")","Resets a cycle so that it starts from the first element the next time it is called. Pass in +name+ to",2],["reset_locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","classes.html\/ActiveRecord\/Locking\/Optimistic\/ClassMethods.html#M001356","()","Reset the column used for optimistic locking back to the +lock_version+ default. ",2],["reset_sequence!","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000659","(table, column, sequence = nil)","Set the sequence to the max value of the table's column. ",2],["reset_session","ActionController::Base","classes.html\/ActionController\/Base.html#M001816","()","Resets the session by clearing out all the objects stored within and initializing a new session object.",2],["reset_session","ActionController::Request","classes.html\/ActionController\/Request.html#M002042","()","",2],["reset_sources","Rails::Generator::Lookup::ClassMethods","classes.html\/Rails\/Generator\/Lookup\/ClassMethods.html#M000363","()","Reset the source list. ",2],["resource","ActionController::Resources","classes.html\/ActionController\/Resources.html#M002115","(*entities, &block)","Creates named routes for implementing verb-oriented controllers for a singleton \\resource. A singleton",2],["resources","ActionController::Resources","classes.html\/ActionController\/Resources.html#M002114","(*entities, &block)","Creates named routes for implementing verb-oriented controllers for a collection \\resource. For example:",2],["respond_to","ActionController::MimeResponds::InstanceMethods","classes.html\/ActionController\/MimeResponds\/InstanceMethods.html#M001883","(*types, &block)","Without web-service support, an action which collects the data for displaying a list of people might",2],["respond_to","ActiveResource::HttpMock","classes.html\/ActiveResource\/HttpMock.html#M001560","(pairs = {})","Accepts a block which declares a set of requests and responses for the HttpMock to respond to. See the",2],["respond_to?","ActionController::Reloader::BodyWrapper","classes.html\/ActionController\/Reloader\/BodyWrapper.html#M002071","(symbol, include_private = false)","",2],["respond_to?","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001024","(method_id, include_private = false)","",2],["respond_to?","ActiveRecord::NamedScope::Scope","classes.html\/ActiveRecord\/NamedScope\/Scope.html#M000838","(method, include_private = false)","",2],["respond_to?","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001493","(method, include_priv = false)","A method to determine if an object responds to a message (e.g., a method call). In Active Resource, a",2],["respond_to?","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002605","(method, include_private=false)","Returns +true+ if _obj_ responds to the given method. Private methods are included in the search only",2],["respond_to?","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002589","(sym, include_priv = false)","Ensure proxy class responds to all methods that underlying time instance responds to. ",2],["respond_to?","CGI::Cookie","classes.html\/CGI\/Cookie.html#M001958","(method, include_private = false)","FIXME: work around broken 1.8.7 DelegateClass#respond_to? ",2],["respond_to_without_attributes?","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001494","(method, include_priv = false)","Alias for #respond_to?",2],["response_from_page_or_rjs","ActionController::Assertions::SelectorAssertions","classes.html\/ActionController\/Assertions\/SelectorAssertions.html#M001728","()","+assert_select+ and +css_select+ call this to obtain the content in the HTML page, or from all the RJS",2],["responses","ActiveResource::HttpMock","classes.html\/ActiveResource\/HttpMock.html#M001559","()","Returns the list of requests and their mocked responses. Look up a response for a request using responses.assoc(request).",2],["restart!","RailsFCGIHandler","classes.html\/RailsFCGIHandler.html#M000036","()","",2],["restart_handler","RailsFCGIHandler","classes.html\/RailsFCGIHandler.html#M000035","(signal)","",2],["restore!","RailsFCGIHandler","classes.html\/RailsFCGIHandler.html#M000039","()","",2],["retrieve_connection","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000716","()","",2],["retrieve_connection_pool","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes.html\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html#M000707","(klass)","",2],["returning","Object","classes.html\/Object.html#M003250","(value)","Returns +value+ after yielding +value+ to the block. This simplifies the process of constructing an object,",2],["reverse","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002631","()","Reverses all characters in the string. Example: 'Caf\u00e9'.mb_chars.reverse.to_s #=> '\u00e9faC' ",2],["reverse_merge","ActiveSupport::CoreExtensions::Hash::ReverseMerge","classes.html\/ActiveSupport\/CoreExtensions\/Hash\/ReverseMerge.html#M002972","(other_hash)","Performs the opposite of <tt>merge<\/tt>, with the keys and values from the first hash taking precedence",2],["reverse_merge","HashWithIndifferentAccess","classes.html\/HashWithIndifferentAccess.html#M002962","(other_hash)","Performs the opposite of merge, with the keys and values from the first hash taking precedence over the",2],["reverse_merge!","ActiveSupport::CoreExtensions::Hash::ReverseMerge","classes.html\/ActiveSupport\/CoreExtensions\/Hash\/ReverseMerge.html#M002973","(other_hash)","Performs the opposite of <tt>merge<\/tt>, with the keys and values from the first hash taking precedence",2],["reverse_update","ActiveSupport::CoreExtensions::Hash::ReverseMerge","classes.html\/ActiveSupport\/CoreExtensions\/Hash\/ReverseMerge.html#M002974","(other_hash)","Alias for #reverse_merge!",2],["rewind","Rails::Generator::Manifest","classes.html\/Rails\/Generator\/Manifest.html#M000307","(target = nil)","Rewind recorded actions. ",2],["rfc2822","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002559","()","",2],["rfc822","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002560","()","Alias for #rfc2822",2],["rindex","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002621","(needle, offset=nil)","Returns the position _needle_ in the string, counting in codepoints, searching backward from _offset_",2],["rjust","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002623","(integer, padstr=' ')","Works just like <tt>String#rjust<\/tt>, only integer specifies characters instead of bytes. Example: \"\u00be",2],["rollback_active_record_state!","ActiveRecord::Transactions","classes.html\/ActiveRecord\/Transactions.html#M000827","()","Reset id and @new_record if the transaction rolls back. ",2],["rollback_db_transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000654","()","Rolls back the transaction (and turns on auto-committing). Must be done if the transaction block raises",2],["rollback_db_transaction","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000752","()","Aborts a transaction. ",2],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000815","()","",2],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000454","()","",2],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000755","()","",2],["root","ActionController::Routing::RouteSet::Mapper","classes.html\/ActionController\/Routing\/RouteSet\/Mapper.html#M002108","(options = {})","Creates a named route called \"root\" for matching the root level request. ",2],["root","Rails","classes.html\/Rails.html#M000049","()","",2],["round_with_precision","ActiveSupport::CoreExtensions::Float::Rounding","classes.html\/ActiveSupport\/CoreExtensions\/Float\/Rounding.html#M002998","(precision = nil)","Rounds the float with the specified precision. x = 1.337 x.round    # => 1 x.round(1) # => 1.3 x.round(2)",2],["route_resources","Rails::Generator::Commands::Create","classes.html\/Rails\/Generator\/Commands\/Create.html#M000402","(*resources)","",2],["route_resources","Rails::Generator::Commands::Destroy","classes.html\/Rails\/Generator\/Commands\/Destroy.html#M000411","(*resources)","",2],["route_resources","Rails::Generator::Commands::List","classes.html\/Rails\/Generator\/Commands\/List.html#M000420","(*resources)","",2],["routed?","Rails::Plugin","classes.html\/Rails\/Plugin.html#M000283","()","Returns true if the engine ships with a routing file ",2],["routing_file","Rails::Plugin","classes.html\/Rails\/Plugin.html#M000288","()","",2],["rstrip","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002626","()","Strips entire range of Unicode whitespace from the right of the string. ",2],["run","ActionController::Reloader","classes.html\/ActionController\/Reloader.html#M002072","(lock = @@default_lock)","",2],["run","ActiveSupport::Callbacks::CallbackChain","classes.html\/ActiveSupport\/Callbacks\/CallbackChain.html#M003266","(object, options = {}, &terminator)","",2],["run","ActiveSupport::Testing::Performance","classes.html\/ActiveSupport\/Testing\/Performance.html#M003315","(result)","",2],["run","ActiveSupport::Testing::Performance::Benchmarker","classes.html\/ActiveSupport\/Testing\/Performance\/Benchmarker.html#M003322","()","",2],["run","ActiveSupport::Testing::Performance::Profiler","classes.html\/ActiveSupport\/Testing\/Performance\/Profiler.html#M003328","()","",2],["run","ActiveSupport::Testing::SetupAndTeardown::ForClassicTestUnit","classes.html\/ActiveSupport\/Testing\/SetupAndTeardown\/ForClassicTestUnit.html#M003312","(result)","This redefinition is unfortunate but test\/unit shows us no alternative. Doubly unfortunate: hax to support",2],["run","ActiveSupport::Testing::SetupAndTeardown::ForMiniTest","classes.html\/ActiveSupport\/Testing\/SetupAndTeardown\/ForMiniTest.html#M003311","(runner)","",2],["run","Rails::Generator::Scripts::Base","classes.html\/Rails\/Generator\/Scripts\/Base.html#M000344","(args = [], runtime_options = {})","Run the generator script.  Takes an array of unparsed arguments and a hash of parsed arguments, takes",2],["run","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000055","(command = :process, configuration = Configuration.new)","Runs the initializer. By default, this will invoke the #process method, which simply executes all of",2],["run_callbacks","ActiveSupport::Callbacks","classes.html\/ActiveSupport\/Callbacks.html#M003282","(kind, options = {}, &block)","Runs all the callbacks defined for the given options. If a block is given it will be called after each",2],["run_gc!","RailsFCGIHandler","classes.html\/RailsFCGIHandler.html#M000040","()","",2],["run_in_transaction?","ActiveRecord::TestFixtures","classes.html\/ActiveRecord\/TestFixtures.html#M000877","()","",2],["run_prepare_callbacks","ActionController::Dispatcher","classes.html\/ActionController\/Dispatcher.html#M001621","()","",2],["run_profile","ActiveSupport::Testing::Performance","classes.html\/ActiveSupport\/Testing\/Performance.html#M003318","(metric)","",2],["run_test","ActiveSupport::Testing::Performance","classes.html\/ActiveSupport\/Testing\/Performance.html#M003316","(metric, mode)","",2],["run_warmup","ActiveSupport::Testing::Performance","classes.html\/ActiveSupport\/Testing\/Performance.html#M003317","()","",2],["safe_concat","ActiveSupport::SafeBuffer","classes.html\/ActiveSupport\/SafeBuffer.html#M002856","(value)","Alias for #concat",2],["sanitize","ActionView::Helpers::SanitizeHelper","classes.html\/ActionView\/Helpers\/SanitizeHelper.html#M002402","(html, options = {})","This +sanitize+ helper will html encode all tags and strip all attributes that aren't specifically allowed.",2],["sanitize_css","ActionView::Helpers::SanitizeHelper","classes.html\/ActionView\/Helpers\/SanitizeHelper.html#M002403","(style)","Sanitizes a block of CSS code. Used by +sanitize+ when it comes across a style attribute. ",2],["sanitize_limit","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000668","(limit)","Sanitizes the given LIMIT parameter in order to prevent SQL injection. +limit+ may be anything that can",2],["sanitize_sql_array","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001091","(ary)","Accepts an array of conditions.  The array has each value sanitized and interpolated into the SQL statement.",2],["sanitize_sql_for_assignment","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001086","(assignments)","Accepts an array, hash, or string of SQL conditions and sanitizes them into a valid SQL fragment for",2],["sanitize_sql_for_conditions","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001085","(condition, table_name = quoted_table_name)","Accepts an array, hash, or string of SQL conditions and sanitizes them into a valid SQL fragment for",2],["sanitize_sql_hash_for_assignment","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001090","(attrs)","Sanitizes a hash of attribute\/value pairs into SQL conditions for a SET clause. { :status => nil, :group_id",2],["sanitize_sql_hash_for_conditions","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001089","(attrs, default_table_name = quoted_table_name)","Sanitizes a hash of attribute\/value pairs into SQL conditions for a WHERE clause. { :name => \"foo'bar\",",2],["save","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001108","()","Saves the model. If the model is new a record gets created in the database, otherwise the existing record",2],["save","ActiveRecord::SessionStore::SqlBypass","classes.html\/ActiveRecord\/SessionStore\/SqlBypass.html#M001241","()","",2],["save","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001485","()","A method to \\save (+POST+) or \\update (+PUT+) a resource.  It delegates to +create+ if a \\new object,",2],["save","Repositories","classes.html\/Repositories.html#M000173","()","",2],["save!","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001109","()","Saves the model. If the model is new a record gets created in the database, otherwise the existing record",2],["save_with_validation","ActiveRecord::Validations","classes.html\/ActiveRecord\/Validations.html#M001316","(perform_validation = true)","The validation process on save can be skipped by passing false. The regular Base#save method is replaced",2],["save_with_validation","ActiveResource::Validations","classes.html\/ActiveResource\/Validations.html#M001435","()","Validate a resource and save (POST) it to the remote web service. ",2],["save_with_validation!","ActiveRecord::Validations","classes.html\/ActiveRecord\/Validations.html#M001317","()","Attempts to save the record just like Base#save but will raise a RecordInvalid exception instead of returning",2],["say","ActiveRecord::Migration","classes.html\/ActiveRecord\/Migration.html#M000892","(message, subitem=false)","",2],["say","Rails::GemBuilder","classes.html\/Rails\/GemBuilder.html#M000242","(message)","silence the underlying builder ",2],["say_with_time","ActiveRecord::Migration","classes.html\/ActiveRecord\/Migration.html#M000893","(message)","",2],["schema_format","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000961","","Specifies the format to use when dumping the database schema with Rails' Rakefile.  If :sql, the schema",2],["schema_search_path","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000766","()","Returns the active schema search path. ",2],["schema_search_path=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000765","(schema_csv)","Sets the schema search path to a string of comma-separated schema names. Names beginning with $ have",2],["scope?","ActiveRecord::DynamicScopeMatch","classes.html\/ActiveRecord\/DynamicScopeMatch.html#M000885","()","",2],["scopes","ActiveRecord::NamedScope::ClassMethods","classes.html\/ActiveRecord\/NamedScope\/ClassMethods.html#M000830","()","",2],["scrape","Commands::Discover","classes.html\/Commands\/Discover.html#M000203","(uri)","",2],["search","Rails::VendorGemSourceIndex","classes.html\/Rails\/VendorGemSourceIndex.html#M000236","(*args)","",2],["second","ActiveSupport::CoreExtensions::Array::Access","classes.html\/ActiveSupport\/CoreExtensions\/Array\/Access.html#M003041","()","Equal to <tt>self[1]<\/tt>. ",2],["second","ActiveSupport::CoreExtensions::Numeric::Time","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Time.html#M003051","()","Alias for #seconds",2],["seconds","ActiveSupport::CoreExtensions::Numeric::Time","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Time.html#M003050","()","",2],["seconds_since_midnight","ActiveSupport::CoreExtensions::DateTime::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Calculations.html#M002904","()","Seconds since midnight: DateTime.now.seconds_since_midnight ",2],["seconds_since_midnight","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003103","()","Seconds since midnight: Time.now.seconds_since_midnight ",2],["secret_key","ActionController::HttpAuthentication::Digest","classes.html\/ActionController\/HttpAuthentication\/Digest.html#M001673","()","Set in \/initializers\/session_store.rb, and loaded even if sessions are not in use. ",2],["secure=","CGI::Cookie","classes.html\/CGI\/Cookie.html#M001955","(val)","Sets whether the Cookie is a secure cookie or not. ",2],["select","ActionView::Helpers::FormOptionsHelper","classes.html\/ActionView\/Helpers\/FormOptionsHelper.html#M002249","(object, method, choices, options = {}, html_options = {})","Create a select tag and a series of contained option tags for the provided object and method. The option",2],["select","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes.html\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M002329","(pattern)","Returns a collection reference by finding it through a CSS +pattern+ in the DOM. This collection can",2],["select","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000664","(sql, name = nil)","Returns an array of record hashes with the column names as keys and column values as values. ",2],["select_all","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000641","(sql, name = nil)","Returns an array of record hashes with the column names as keys and column values as values. ",2],["select_all_with_query_cache","ActiveRecord::ConnectionAdapters::QueryCache","classes.html\/ActiveRecord\/ConnectionAdapters\/QueryCache.html#M000674","(*args)","",2],["select_date","ActionView::Helpers::DateHelper","classes.html\/ActionView\/Helpers\/DateHelper.html#M002439","(date = Date.current, options = {}, html_options = {})","Returns a set of html select-tags (one for year, month, and day) pre-selected with the +date+. It's possible",2],["select_datetime","ActionView::Helpers::DateHelper","classes.html\/ActionView\/Helpers\/DateHelper.html#M002438","(datetime = Time.current, options = {}, html_options = {})","Returns a set of html select-tags (one for year, month, day, hour, and minute) pre-selected with the",2],["select_day","ActionView::Helpers::DateHelper","classes.html\/ActionView\/Helpers\/DateHelper.html#M002444","(date, options = {}, html_options = {})","Returns a select tag with options for each of the days 1 through 31 with the current day selected. The",2],["select_hour","ActionView::Helpers::DateHelper","classes.html\/ActionView\/Helpers\/DateHelper.html#M002443","(datetime, options = {}, html_options = {})","Returns a select tag with options for each of the hours 0 through 23 with the current hour selected.",2],["select_minute","ActionView::Helpers::DateHelper","classes.html\/ActionView\/Helpers\/DateHelper.html#M002442","(datetime, options = {}, html_options = {})","Returns a select tag with options for each of the minutes 0 through 59 with the current minute selected.",2],["select_month","ActionView::Helpers::DateHelper","classes.html\/ActionView\/Helpers\/DateHelper.html#M002445","(date, options = {}, html_options = {})","Returns a select tag with options for each of the months January through December with the current month",2],["select_one","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000642","(sql, name = nil)","Returns a record hash with the column names as keys and column values as values. ",2],["select_rows","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000645","(sql, name = nil)","Returns an array of arrays containing the field values. Order is the same as that returned by +columns+.",2],["select_rows","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000446","(sql, name = nil)","DATABASE STATEMENTS ====================================== ",2],["select_rows","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000744","(sql, name = nil)","Executes a SELECT query and returns an array of rows. Each row is an array of field values. ",2],["select_rows","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000517","(sql, name = nil)","",2],["select_second","ActionView::Helpers::DateHelper","classes.html\/ActionView\/Helpers\/DateHelper.html#M002441","(datetime, options = {}, html_options = {})","Returns a select tag with options for each of the seconds 0 through 59 with the current second selected.",2],["select_tag","ActionView::Helpers::FormTagHelper","classes.html\/ActionView\/Helpers\/FormTagHelper.html#M002296","(name, option_tags = nil, options = {})","Creates a dropdown selection box, or if the <tt>:multiple<\/tt> option is set to true, a multiple choice",2],["select_time","ActionView::Helpers::DateHelper","classes.html\/ActionView\/Helpers\/DateHelper.html#M002440","(datetime = Time.current, options = {}, html_options = {})","Returns a set of html select-tags (one for hour and minute) You can set <tt>:time_separator<\/tt> key",2],["select_value","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000643","(sql, name = nil)","Returns a single value from a record ",2],["select_values","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000644","(sql, name = nil)","Returns an array of the values of the first column in a select: select_values(\"SELECT id FROM companies",2],["select_year","ActionView::Helpers::DateHelper","classes.html\/ActionView\/Helpers\/DateHelper.html#M002446","(date, options = {}, html_options = {})","Returns a select tag with options for each of the five years on each side of the current, which is selected.",2],["send_data","ActionController::Streaming","classes.html\/ActionController\/Streaming.html#M001611","(data, options = {})","Sends the given binary data to the browser. This method is similar to <tt>render :text => data<\/tt>,",2],["send_file","ActionController::Streaming","classes.html\/ActionController\/Streaming.html#M001610","(path, options = {})","Sends the file, by default streaming it 4096 bytes at a time. This way the whole file doesn't need to",2],["send_response","ActionController::Base","classes.html\/ActionController\/Base.html#M001792","()","",2],["sending_file?","ActionController::Response","classes.html\/ActionController\/Response.html#M001906","()","",2],["serialize","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000987","(attr_name, class_name = Object)","If you have an attribute that needs to be saved to the database as an object, and retrieved as the same",2],["serialized_attributes","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000988","()","Returns a hash of all the attributes that have been specified for serialization as keys and their class",2],["server_port","ActionController::Request","classes.html\/ActionController\/Request.html#M002045","()","",2],["server_software","ActionController::Request","classes.html\/ActionController\/Request.html#M002012","()","Returns the lowercase name of the HTTP server software. ",2],["session","ActionController::Request","classes.html\/ActionController\/Request.html#M002040","()","",2],["session","ActionController::SessionManagement::ClassMethods","classes.html\/ActionController\/SessionManagement\/ClassMethods.html#M002052","(*args)","",2],["session","ActionController::TestProcess","classes.html\/ActionController\/TestProcess.html#M001768","()","",2],["session=","ActionController::SessionManagement::ClassMethods","classes.html\/ActionController\/SessionManagement\/ClassMethods.html#M002050","(options = {})","",2],["session_enabled?","ActionController::Base","classes.html\/ActionController\/Base.html#M001797","()","",2],["session_id","ActionController::Session::AbstractStore::SessionHash","classes.html\/ActionController\/Session\/AbstractStore\/SessionHash.html#M001688","()","",2],["session_id_column","ActiveRecord::SessionStore::SqlBypass","classes.html\/ActiveRecord\/SessionStore\/SqlBypass.html#M001229","","The session id field defaults to 'session_id'. ",2],["session_options","ActionController::Request","classes.html\/ActionController\/Request.html#M002043","()","",2],["session_options","ActionController::SessionManagement::ClassMethods","classes.html\/ActionController\/SessionManagement\/ClassMethods.html#M002051","()","Returns the hash used to configure the session. Example use: ActionController::Base.session_options[:secure]",2],["session_options=","ActionController::Request","classes.html\/ActionController\/Request.html#M002044","(options)","",2],["session_store","ActionController::SessionManagement::ClassMethods","classes.html\/ActionController\/SessionManagement\/ClassMethods.html#M002049","()","Returns the session store class currently used. ",2],["session_store=","ActionController::SessionManagement::ClassMethods","classes.html\/ActionController\/SessionManagement\/ClassMethods.html#M002048","(store)","Set the session store to be used for keeping the session data between requests. By default, sessions",2],["set_autoload_paths","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000061","()","Set the paths from which Rails will automatically load source files, and the load_once paths. ",2],["set_cookie","ActionController::Response","classes.html\/ActionController\/Response.html#M001912","(key, value)","",2],["set_default_backend","ActiveSupport::JSON","classes.html\/ActiveSupport\/JSON.html#M002806","()","",2],["set_fixture_class","ActiveRecord::TestFixtures::ClassMethods","classes.html\/ActiveRecord\/TestFixtures\/ClassMethods.html#M000870","(class_names = {})","",2],["set_inheritance_column","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001000","(value = nil, &block)","Sets the name of the inheritance column to use to the given value, or (if the value # is nil or false)",2],["set_load_path","Rails::Initializer","classes.html\/Rails\/Initializer.html#M000060","()","Set the <tt>$LOAD_PATH<\/tt> based on the value of Configuration#load_paths. Duplicates are removed. ",2],["set_locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","classes.html\/ActiveRecord\/Locking\/Optimistic\/ClassMethods.html#M001353","(value = nil, &block)","Set the column to use for optimistic locking. Defaults to +lock_version+. ",2],["set_primary_key","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000999","(value = nil, &block)","Sets the name of the primary key column to use to the given value, or (if the value is nil or false)",2],["set_root_path!","Rails::Configuration","classes.html\/Rails\/Configuration.html#M000101","()","Set the root_path to RAILS_ROOT and canonicalize it. ",2],["set_sequence_name","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001001","(value = nil, &block)","Sets the name of the sequence to use when generating ids to the given value, or (if the value is nil",2],["set_standard_conforming_strings","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000730","()","Enable standard-conforming strings if available. ",2],["set_table_name","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000998","(value = nil, &block)","Sets the table name to use to the given value, or (if the value is nil or false) to the value returned",2],["setup_controller_request_and_response","ActionController::TestCase","classes.html\/ActionController\/TestCase.html#M001744","()","",2],["setup_fixture_accessors","ActiveRecord::TestFixtures::ClassMethods","classes.html\/ActiveRecord\/TestFixtures\/ClassMethods.html#M000874","(table_names = nil)","",2],["setup_fixtures","ActiveRecord::TestFixtures","classes.html\/ActiveRecord\/TestFixtures.html#M000878","()","",2],["setup_with_controller","ActionView::TestCase","classes.html\/ActionView\/TestCase.html#M002173","()","",2],["show","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes.html\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M002334","(*ids)","Shows hidden DOM elements with the given +ids+. Example: # Show a few people # Generates: [\"person_6\",",2],["show_variable","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000477","(name)","SHOW VARIABLES LIKE 'name' ",2],["silence","ActionController::Benchmarking::ClassMethods","classes.html\/ActionController\/Benchmarking\/ClassMethods.html#M001647","()","Silences the logger for the duration of the block. ",2],["silence","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001020","()","Silences the logger for the duration of the block. ",2],["silence","ActiveSupport::BufferedLogger","classes.html\/ActiveSupport\/BufferedLogger.html#M002673","(temporary_level = ERROR)","Silences the logger for the duration of the block. ",2],["silence","Logger","classes.html\/Logger.html#M003208","(temporary_level = Logger::ERROR)","Silences the logger for the duration of the block. ",2],["silence!","ActiveSupport::Cache::Store","classes.html\/ActiveSupport\/Cache\/Store.html#M003368","()","",2],["silence_spec_warnings","Rails::VendorGemSourceIndex","classes.html\/Rails\/VendorGemSourceIndex.html#M000228","()","",2],["silence_spec_warnings=","Rails::VendorGemSourceIndex","classes.html\/Rails\/VendorGemSourceIndex.html#M000229","(v)","",2],["silence_stream","Kernel","classes.html\/Kernel.html#M002932","(stream)","Silences any stream for the duration of the block. silence_stream(STDOUT) do puts 'This will never be",2],["silence_warnings","Kernel","classes.html\/Kernel.html#M002929","()","Sets $VERBOSE to nil for the duration of the block and back to its original value afterwards. silence_warnings",2],["silencer","ActiveSupport::BufferedLogger","classes.html\/ActiveSupport\/BufferedLogger.html#M002672","","Set to false to disable the silencer ",2],["silencer","Logger","classes.html\/Logger.html#M003207","","Set to false to disable the silencer ",2],["simple_format","ActionView::Helpers::TextHelper","classes.html\/ActionView\/Helpers\/TextHelper.html#M002275","(text, html_options={})","Returns +text+ transformed into HTML using simple formatting rules. Two or more consecutive newlines(<tt>\\n\\n<\/tt>)",2],["since","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003165","(seconds)","Converts Date to a Time (or DateTime if necessary) with the time portion set to the beginning of the",2],["since","ActiveSupport::CoreExtensions::DateTime::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Calculations.html#M002908","(seconds)","Returns a new DateTime representing the time a number of seconds since the instance time Do not use this",2],["since","ActiveSupport::CoreExtensions::Numeric::Time","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Time.html#M003064","(time = ::Time.now)","Reads best with argument:  10.minutes.since(time) ",2],["since","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003107","(seconds)","Returns a new Time representing the time a number of seconds since the instance time, this is basically",2],["since","ActiveSupport::Duration","classes.html\/ActiveSupport\/Duration.html#M003290","(time = ::Time.current)","Calculates a new Time or Date that is as far in the future as this Duration represents. ",2],["since","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002572","(other)","",2],["singleton_class","Object","classes.html\/Object.html#M003242","()","Returns the object's singleton class. ",2],["singular","ActiveSupport::Inflector::Inflections","classes.html\/ActiveSupport\/Inflector\/Inflections.html#M002770","(rule, replacement)","Specifies a new singularization rule and its replacement. The rule can either be a string or a regular",2],["singular_class_name","ActionController::RecordIdentifier","classes.html\/ActionController\/RecordIdentifier.html#M001985","(record_or_class)","Returns the singular class name of a record or class. Examples: singular_class_name(post)           ",2],["singularize","ActiveSupport::CoreExtensions::String::Inflections","classes.html\/ActiveSupport\/CoreExtensions\/String\/Inflections.html#M002835","()","The reverse of +pluralize+, returns the singular form of a word in a string. \"posts\".singularize    ",2],["singularize","ActiveSupport::Inflector","classes.html\/ActiveSupport\/Inflector.html#M002777","(word)","The reverse of +pluralize+, returns the singular form of a word in a string. Examples: \"posts\".singularize",2],["site","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001439","()","Gets the URI of the REST resources to map for this class.  The site variable is required for Active Resource's",2],["site=","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001440","(site)","Sets the URI of the REST resources to map for this class to the value in the +site+ argument. The site",2],["site=","ActiveResource::Connection","classes.html\/ActiveResource\/Connection.html#M001513","(site)","Set URI for remote service. ",2],["size","ActiveRecord::Errors","classes.html\/ActiveRecord\/Errors.html#M001280","()","Returns the total number of errors added. Two errors added to the same attribute will be counted as such.",2],["size","ActiveRecord::NamedScope::Scope","classes.html\/ActiveRecord\/NamedScope\/Scope.html#M000836","()","",2],["size","ActiveResource::Errors","classes.html\/ActiveResource\/Errors.html#M001428","()","Returns the total number of errors added. Two errors added to the same attribute will be counted as such",2],["size","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002629","()","Returns the number of codepoints in the string ",2],["size","Rails::VendorGemSourceIndex","classes.html\/Rails\/VendorGemSourceIndex.html#M000240","()","",2],["skip_after_filter","ActionController::Filters::ClassMethods","classes.html\/ActionController\/Filters\/ClassMethods.html#M002063","(*filters)","Removes the specified filters from the +after+ filter chain. Note that this only works for skipping method-reference",2],["skip_before_filter","ActionController::Filters::ClassMethods","classes.html\/ActionController\/Filters\/ClassMethods.html#M002062","(*filters)","Removes the specified filters from the +before+ filter chain. Note that this only works for skipping",2],["skip_filter","ActionController::Filters::ClassMethods","classes.html\/ActionController\/Filters\/ClassMethods.html#M002064","(*filters)","Removes the specified filters from the filter chain. This only works for method reference (symbol) filters,",2],["slice","ActiveSupport::CoreExtensions::Hash::Slice","classes.html\/ActiveSupport\/CoreExtensions\/Hash\/Slice.html#M002970","(*keys)","Returns a new hash with only the given keys. ",2],["slice","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002632","(*args)","Implements Unicode-aware slice with codepoints. Slicing on one point returns the codepoints for that",2],["slice!","ActiveSupport::CoreExtensions::Hash::Slice","classes.html\/ActiveSupport\/CoreExtensions\/Hash\/Slice.html#M002971","(*keys)","Replaces the hash with only the given keys. Returns a hash contained the removed key\/value pairs {:a",2],["slice!","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002634","(*args)","Like <tt>String#slice!<\/tt>, except instead of byte offsets you specify character offsets. Example: s",2],["sortable","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes.html\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M002351","(id, options = {})","Creates a script.aculo.us sortable element. Useful to recreate sortable elements after items get added",2],["sortable_element","ActionView::Helpers::ScriptaculousHelper","classes.html\/ActionView\/Helpers\/ScriptaculousHelper.html#M002243","(element_id, options = {})","Makes the element with the DOM ID specified by +element_id+ sortable by drag-and-drop and make an Ajax",2],["source","ActionView::Template","classes.html\/ActionView\/Template.html#M002231","()","",2],["source_code","ActionController::Routing::Optimisation::Optimiser","classes.html\/ActionController\/Routing\/Optimisation\/Optimiser.html#M002093","()","",2],["source_index=","Gem","classes.html\/Gem.html#M000243","(index)","",2],["source_path","Rails::Generator::Base","classes.html\/Rails\/Generator\/Base.html#M000338","(relative_source)","Return the full path from the source root for the given path. Example for source_root = '\/source': source_path('some\/path.rb')",2],["sources","Rails::Generator::Lookup::ClassMethods","classes.html\/Rails\/Generator\/Lookup\/ClassMethods.html#M000360","()","The list of sources where we look, in order, for generators. ",2],["specification","Rails::GemDependency","classes.html\/Rails\/GemDependency.html#M000250","()","",2],["specification=","Rails::GemDependency","classes.html\/Rails\/GemDependency.html#M000251","(s)","",2],["split","ActiveSupport::CoreExtensions::Array::Grouping","classes.html\/ActiveSupport\/CoreExtensions\/Array\/Grouping.html#M003030","(value = nil)","Divides the array into one or more subarrays based on a delimiting +value+ or the result of an optional",2],["split","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002612","(*args)","Works just like <tt>String#split<\/tt>, with the exception that the items in the resulting list are Chars",2],["split_args","Commands::Plugin","classes.html\/Commands\/Plugin.html#M000186","(args)","",2],["sql_query_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M000632","()","the maximum length of a SQL query ",2],["sqlite_version","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000601","()","",2],["squish","ActiveSupport::CoreExtensions::String::Filters","classes.html\/ActiveSupport\/CoreExtensions\/String\/Filters.html#M002880","()","Returns the string, first removing all whitespace on both ends of the string, and then changing remaining",2],["squish!","ActiveSupport::CoreExtensions::String::Filters","classes.html\/ActiveSupport\/CoreExtensions\/String\/Filters.html#M002881","()","Performs a destructive squish. See String#squish. ",2],["ssl?","ActionController::Request","classes.html\/ActionController\/Request.html#M002015","()","Is this an SSL request? ",2],["ssl_options","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001452","()","Returns the SSL options hash. ",2],["ssl_options=","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001451","(opts={})","Options that will get applied to an SSL connection. * <tt>:key<\/tt> - An OpenSSL::PKey::RSA or OpenSSL::PKey::DSA",2],["ssl_options=","ActiveResource::Connection","classes.html\/ActiveResource\/Connection.html#M001518","(opts={})","Hash of options applied to Net::HTTP instance when +site+ protocol is 'https'. ",2],["stale?","ActionController::Base","classes.html\/ActionController\/Base.html#M001812","(options)","Sets the etag and\/or last_modified on the response and checks it against the client request. If the request",2],["stale?","ActionView::ReloadableTemplate","classes.html\/ActionView\/ReloadableTemplate.html#M002164","()","",2],["standard_port","ActionController::Request","classes.html\/ActionController\/Request.html#M002020","()","Returns the standard \\port number for this request's protocol. ",2],["start_document","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes.html\/ActiveSupport\/XmlMini_NokogiriSAX\/HashBuilder.html#M002512","()","",2],["start_element","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes.html\/ActiveSupport\/XmlMini_NokogiriSAX\/HashBuilder.html#M002515","(name, attrs = [])","",2],["starts_with?","ActiveSupport::CoreExtensions::String::StartsEndsWith","classes.html\/ActiveSupport\/CoreExtensions\/String\/StartsEndsWith.html#M002878","(prefix)","Does the string start with the specified +prefix+? ",2],["stats","ActiveSupport::Cache::MemCacheStore","classes.html\/ActiveSupport\/Cache\/MemCacheStore.html#M002726","()","",2],["step_with_blockless","ActiveSupport::CoreExtensions::Range::BlocklessStep","classes.html\/ActiveSupport\/CoreExtensions\/Range\/BlocklessStep.html#M002922","(value = 1, &block)","",2],["step_with_blockless","ActiveSupport::CoreExtensions::Range::BlocklessStep","classes.html\/ActiveSupport\/CoreExtensions\/Range\/BlocklessStep.html#M002921","(value = 1, &block)","",2],["sti_name","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001025","()","",2],["store","ActionController::Flash::FlashHash","classes.html\/ActionController\/Flash\/FlashHash.html#M001971","(session, key = \"flash\")","",2],["strftime","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002563","(format)","Replaces <tt>%Z<\/tt> and <tt>%z<\/tt> directives with +zone+ and +formatted_offset+, respectively, before",2],["string_to_binary","ActiveRecord::ConnectionAdapters::Column","classes.html\/ActiveRecord\/ConnectionAdapters\/Column.html#M000534","(value)","Used to convert from Strings to BLOBs ",2],["string_to_date","ActiveRecord::ConnectionAdapters::Column","classes.html\/ActiveRecord\/ConnectionAdapters\/Column.html#M000536","(string)","",2],["string_to_dummy_time","ActiveRecord::ConnectionAdapters::Column","classes.html\/ActiveRecord\/ConnectionAdapters\/Column.html#M000538","(string)","",2],["string_to_time","ActiveRecord::ConnectionAdapters::Column","classes.html\/ActiveRecord\/ConnectionAdapters\/Column.html#M000537","(string)","",2],["stringify_keys","ActiveSupport::CoreExtensions::Hash::Keys","classes.html\/ActiveSupport\/CoreExtensions\/Hash\/Keys.html#M002983","()","Return a new hash with all keys converted to strings. ",2],["stringify_keys!","ActiveSupport::CoreExtensions::Hash::Keys","classes.html\/ActiveSupport\/CoreExtensions\/Hash\/Keys.html#M002984","()","Destructively convert all keys to strings. ",2],["stringify_keys!","HashWithIndifferentAccess","classes.html\/HashWithIndifferentAccess.html#M002964","()","",2],["strip","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002628","()","Strips entire range of Unicode whitespace from the right and left of the string. ",2],["strip_links","ActionView::Helpers::SanitizeHelper","classes.html\/ActionView\/Helpers\/SanitizeHelper.html#M002405","(html)","Strips all link tags from +text+ leaving just the link text. ==== Examples strip_links('<a href=\"index.html\/\/www.rubyonrails.org\">Ruby",2],["strip_tags","ActionView::Helpers::SanitizeHelper","classes.html\/ActionView\/Helpers\/SanitizeHelper.html#M002404","(html)","Strips all HTML tags from the +html+, including comments.  This uses the html-scanner tokenizer and so",2],["strip_whitespace!","ActionController::Assertions::DomAssertions","classes.html\/ActionController\/Assertions\/DomAssertions.html#M001721","(nodes)","",2],["structure_dump","ActiveRecord::ConnectionAdapters::SchemaStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000619","()","Returns a string of <tt>CREATE TABLE<\/tt> SQL statement(s) for recreating the entire structure of the",2],["stylesheet_link_tag","ActionView::Helpers::AssetTagHelper","classes.html\/ActionView\/Helpers\/AssetTagHelper.html#M002420","(*sources)","Returns a stylesheet link tag for the sources specified as arguments. If you don't specify an extension,",2],["stylesheet_path","ActionView::Helpers::AssetTagHelper","classes.html\/ActionView\/Helpers\/AssetTagHelper.html#M002418","(source)","Computes the path to a stylesheet asset in the public stylesheets directory. If the +source+ filename",2],["subdomains","ActionController::Request","classes.html\/ActionController\/Request.html#M002023","(tld_length = 1)","Returns all the \\subdomains as an array, so <tt>[\"dev\", \"www\"]<\/tt> would be returned for \"dev.www.rubyonrails.org\".",2],["submit_tag","ActionView::Helpers::FormTagHelper","classes.html\/ActionView\/Helpers\/FormTagHelper.html#M002305","(value = \"Save changes\", options = {})","Creates a submit button with the text <tt>value<\/tt> as the caption. ==== Options * <tt>:confirm => 'question?'<\/tt>",2],["submit_to_remote","ActionView::Helpers::PrototypeHelper","classes.html\/ActionView\/Helpers\/PrototypeHelper.html#M002321","(name, value, options = {})","Returns a button input tag with the element name of +name+ and a value (i.e., display text) of +value+",2],["success?","ActiveResource::Response","classes.html\/ActiveResource\/Response.html#M001567","()","",2],["sum","ActiveRecord::Calculations::ClassMethods","classes.html\/ActiveRecord\/Calculations\/ClassMethods.html#M001387","(column_name, options = {})","Calculates the sum of values on a given column. The value is returned with the same data type of the",2],["sum","Enumerable","classes.html\/Enumerable.html#M003258","(identity = 0, &block)","Calculates a sum from the elements. Examples: payments.sum { |p| p.price * p.tax_rate } payments.sum(&:price)",2],["supports_add_column?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000499","()","",2],["supports_count_distinct?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000790","()","Does this adapter support using DISTINCT within COUNT?  This is +true+ for all adapters except sqlite.",2],["supports_ddl_transactions?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000791","()","Does this adapter support DDL rollbacks in transactions?  That is, would CREATE TABLE or ALTER TABLE",2],["supports_ddl_transactions?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000732","()","",2],["supports_ddl_transactions?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000495","()","",2],["supports_insert_with_returning?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000731","()","",2],["supports_migrations?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000788","()","Does this adapter support migrations?  Backend specific, as the abstract adapter always returns +false+.",2],["supports_migrations?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000728","()","Does PostgreSQL support migrations? ",2],["supports_primary_key?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000789","()","Can this adapter determine the primary key for tables not attached to an ActiveRecord class, such as",2],["supports_savepoints?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000792","()","Does this adapter support savepoints? PostgreSQL and MySQL do, SQLite does not. ",2],["supports_savepoints?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000733","()","",2],["suppress","Kernel","classes.html\/Kernel.html#M002933","(*exception_classes)","Blocks and ignores any exception passed as argument if raised within the block. suppress(ZeroDivisionError)",2],["suppress_messages","ActiveRecord::Migration","classes.html\/ActiveRecord\/Migration.html#M000894","()","",2],["svn_url?","Plugin","classes.html\/Plugin.html#M000148","()","",2],["swap","ActionController::MiddlewareStack","classes.html\/ActionController\/MiddlewareStack.html#M001932","(target, *args, &block)","",2],["symbolize_keys","ActiveSupport::CoreExtensions::Hash::Keys","classes.html\/ActiveSupport\/CoreExtensions\/Hash\/Keys.html#M002985","()","Return a new hash with all keys converted to symbols. ",2],["symbolize_keys!","ActiveSupport::CoreExtensions::Hash::Keys","classes.html\/ActiveSupport\/CoreExtensions\/Hash\/Keys.html#M002986","()","Destructively convert all keys to symbols. ",2],["symbolize_keys!","HashWithIndifferentAccess","classes.html\/HashWithIndifferentAccess.html#M002965","()","",2],["symbolized_path_parameters","ActionController::Request","classes.html\/ActionController\/Request.html#M002031","()","The same as <tt>path_parameters<\/tt> with explicitly symbolized keys. ",2],["synchronize","Module","classes.html\/Module.html#M003019","(*methods)","Synchronize access around a method, delegating synchronization to a particular mutex. A mutex (either",2],["t","ActionController::Translation","classes.html\/ActionController\/Translation.html#M001880","(*args)","Alias for #translate",2],["t","ActionView::Helpers::TranslationHelper","classes.html\/ActionView\/Helpers\/TranslationHelper.html#M002380","(keys, options = {})","Alias for #translate",2],["table_alias_for","ActiveRecord::ConnectionAdapters::SchemaStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000596","(table_name)","Truncates a table alias according to the limits of the current adapter. ",2],["table_alias_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M000624","()","the maximum length of a table alias ",2],["table_alias_length","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000734","()","Returns the configured supported identifier length supported by PostgreSQL, or report the default of",2],["table_exists?","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001003","()","Indicates whether the table associated with this class exists ",2],["table_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M000597","(table_name)","def tables(name = nil) end ",2],["table_name","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000989","()","Guesses the table name (in forced lower-case) based on the name of the class in the inheritance hierarchy",2],["table_name","ActiveRecord::SessionStore::SqlBypass","classes.html\/ActiveRecord\/SessionStore\/SqlBypass.html#M001228","","The table name defaults to 'sessions'. ",2],["table_name_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M000626","()","the maximum length of a table name ",2],["table_name_prefix","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000956","","Accessor for the name of the prefix string to prepend to every table name. So if set to \"basecamp_\",",2],["table_name_suffix","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000957","","Works like +table_name_prefix+, but appends instead of prepends (set to \"_basecamp\" gives \"projects_basecamp\",",2],["table_structure","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000569","(table_name)","",2],["tableize","ActiveSupport::CoreExtensions::String::Inflections","classes.html\/ActiveSupport\/CoreExtensions\/String\/Inflections.html#M002844","()","Creates the name of a table like Rails does for models to table names. This method uses the +pluralize+",2],["tableize","ActiveSupport::Inflector","classes.html\/ActiveSupport\/Inflector.html#M002788","(class_name)","Create the name of a table like Rails does for models to table names. This method uses the +pluralize+",2],["tables","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000760","(name = nil)","Returns the list of all tables in the schema search path or a specified schema. ",2],["tag","ActionView::Helpers::TagHelper","classes.html\/ActionView\/Helpers\/TagHelper.html#M002468","(name, options = nil, open = false, escape = true)","Returns an empty HTML tag of type +name+ which by default is XHTML compliant. Set +open+ to true to create",2],["tap","Object","classes.html\/Object.html#M003251","()","Yields <code>x<\/code> to the block, and then returns <code>x<\/code>. The primary purpose of this method",2],["teardown_fixtures","ActiveRecord::TestFixtures","classes.html\/ActiveRecord\/TestFixtures.html#M000879","()","",2],["template","ActionView::Base","classes.html\/ActionView\/Base.html#M002217","()","Access the current template being rendered. Returns a ActionView::Template object. ",2],["template","Rails::Generator::Commands::Create","classes.html\/Rails\/Generator\/Commands\/Create.html#M000397","(relative_source, relative_destination, template_options = {})","Generate a file for a Rails application using an ERuby template. Looks up and evaluates a template by",2],["template","Rails::Generator::Commands::Destroy","classes.html\/Rails\/Generator\/Commands\/Destroy.html#M000407","(relative_source, relative_destination, file_options = {})","Alias for #file",2],["template","Rails::Generator::Commands::List","classes.html\/Rails\/Generator\/Commands\/List.html#M000415","(relative_source, relative_destination, options = {})","",2],["template","Rails::Generator::Commands::Update","classes.html\/Rails\/Generator\/Commands\/Update.html#M000422","(relative_source, relative_destination, options = {})","",2],["template_format","ActionController::Request","classes.html\/ActionController\/Request.html#M002007","()","Returns a symbolized version of the <tt>:format<\/tt> parameter of the request. If no \\format is given",2],["template_format","ActionView::Base","classes.html\/ActionView\/Base.html#M002216","()","The format to be used when choosing between multiple templates with the same name but differing formats.",2],["template_root","ActionMailer::Base","classes.html\/ActionMailer\/Base.html#M002491","()","",2],["template_root=","ActionMailer::Base","classes.html\/ActionMailer\/Base.html#M002492","(root)","",2],["terabyte","ActiveSupport::CoreExtensions::Numeric::Bytes","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Bytes.html#M003075","()","Alias for #terabytes",2],["terabytes","ActiveSupport::CoreExtensions::Numeric::Bytes","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Bytes.html#M003074","()","",2],["test","ActiveSupport::Testing::Declarative","classes.html\/ActiveSupport\/Testing\/Declarative.html#M003309","(name, &block)","test \"verify something\" do ... end ",2],["tests","ActionController::TestCase","classes.html\/ActionController\/TestCase.html#M001739","(controller_class)","Sets the controller class name. Useful if the name can't be inferred from test class. Expects +controller_class+",2],["tests","ActionView::TestCase","classes.html\/ActionView\/TestCase.html#M002176","(helper_class)","",2],["text?","ActiveRecord::ConnectionAdapters::Column","classes.html\/ActiveRecord\/ConnectionAdapters\/Column.html#M000526","()","Returns +true+ if the column is either of type string or text. ",2],["text_area","ActionView::Helpers::FormHelper","classes.html\/ActionView\/Helpers\/FormHelper.html#M002393","(object_name, method, options = {})","Returns a textarea opening and closing tag set tailored for accessing a specified attribute (identified",2],["text_area_tag","ActionView::Helpers::FormTagHelper","classes.html\/ActionView\/Helpers\/FormTagHelper.html#M002302","(name, content = nil, options = {})","Creates a text input area; use a textarea for longer text inputs such as blog posts or descriptions.",2],["text_field","ActionView::Helpers::FormHelper","classes.html\/ActionView\/Helpers\/FormHelper.html#M002389","(object_name, method, options = {})","Returns an input tag of the \"text\" type tailored for accessing a specified attribute (identified by +method+)",2],["text_field_tag","ActionView::Helpers::FormTagHelper","classes.html\/ActionView\/Helpers\/FormTagHelper.html#M002297","(name, value = nil, options = {})","Creates a standard text field; use these text fields to input smaller chunks of text like a username",2],["textilize","ActionView::Helpers::TextHelper","classes.html\/ActionView\/Helpers\/TextHelper.html#M002272","(text, *options)","Returns the text with all the Textile[http:\/\/www.textism.com\/tools\/textile] codes turned into HTML tags.",2],["textilize_without_paragraph","ActionView::Helpers::TextHelper","classes.html\/ActionView\/Helpers\/TextHelper.html#M002273","(text)","Returns the text with all the Textile codes turned into HTML tags, but without the bounding <p> tag that",2],["third","ActiveSupport::CoreExtensions::Array::Access","classes.html\/ActiveSupport\/CoreExtensions\/Array\/Access.html#M003042","()","Equal to <tt>self[2]<\/tt>. ",2],["threadsafe!","Rails::Configuration","classes.html\/Rails\/Configuration.html#M000102","()","Enable threaded mode. Allows concurrent requests to controller actions and multiple database connections.",2],["tidy_bytes","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002643","()","Replaces all ISO-8859-1 or CP1252 characters by their UTF-8 equivalent resulting in a valid UTF-8 string.",2],["tidy_bytes","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002659","(string)","Replaces all ISO-8859-1 or CP1252 characters by their UTF-8 equivalent resulting in a valid UTF-8 string.",2],["time","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002534","()","Returns a Time or DateTime instance that represents the time in +time_zone+. ",2],["time_ago_in_words","ActionView::Helpers::DateHelper","classes.html\/ActionView\/Helpers\/DateHelper.html#M002407","(from_time, include_seconds = false)","Like distance_of_time_in_words, but where <tt>to_time<\/tt> is fixed to <tt>Time.now<\/tt>. ==== Examples",2],["time_select","ActionView::Helpers::DateHelper","classes.html\/ActionView\/Helpers\/DateHelper.html#M002423","(object_name, method, options = {}, html_options = {})","Returns a set of select tags (one for hour, minute and optionally second) pre-selected for accessing",2],["time_with_datetime_fallback","ActiveSupport::CoreExtensions::Time::Calculations::ClassMethods","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations\/ClassMethods.html#M003097","(utc_or_local, year, month=1, day=1, hour=0, min=0, sec=0, usec=0)","Returns a new Time if requested year can be accommodated by Ruby's Time class (i.e., if year is within",2],["time_zone_options_for_select","ActionView::Helpers::FormOptionsHelper","classes.html\/ActionView\/Helpers\/FormOptionsHelper.html#M002257","(selected = nil, priority_zones = nil, model = ::ActiveSupport::TimeZone)","Returns a string of option tags for pretty much any time zone in the world. Supply a TimeZone name as",2],["time_zone_select","ActionView::Helpers::FormOptionsHelper","classes.html\/ActionView\/Helpers\/FormOptionsHelper.html#M002252","(object, method, priority_zones = nil, options = {}, html_options = {})","Return select and option tags for the given object and method, using #time_zone_options_for_select to",2],["timeout","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001450","()","Gets the number of seconds after which requests to the REST API should time out. ",2],["timeout=","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001449","(timeout)","Sets the number of seconds after which requests to the REST API should time out. ",2],["timeout=","ActiveResource::Connection","classes.html\/ActiveResource\/Connection.html#M001517","(timeout)","Set the number of seconds after which HTTP requests to the remote service should time out. ",2],["timestamped_migrations","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000962","","Specify whether or not to use timestamps for migration numbers ",2],["timestamps","ActiveRecord::ConnectionAdapters::Table","classes.html\/ActiveRecord\/ConnectionAdapters\/Table.html#M000582","()","Adds timestamps (created_at and updated_at) columns to the table. See SchemaStatements#add_timestamps",2],["timestamps","ActiveRecord::ConnectionAdapters::TableDefinition","classes.html\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M000574","(*args)","Appends <tt>:datetime<\/tt> columns <tt>:created_at<\/tt> and <tt>:updated_at<\/tt> to the table. ",2],["titlecase","ActiveSupport::CoreExtensions::String::Inflections","classes.html\/ActiveSupport\/CoreExtensions\/String\/Inflections.html#M002839","()","Alias for #titleize",2],["titleize","ActiveSupport::CoreExtensions::String::Inflections","classes.html\/ActiveSupport\/CoreExtensions\/String\/Inflections.html#M002838","()","Capitalizes all the words and replaces some characters in the string to create a nicer looking title.",2],["titleize","ActiveSupport::Inflector","classes.html\/ActiveSupport\/Inflector.html#M002779","(word)","Capitalizes all the words and replaces some characters in the string to create a nicer looking title.",2],["to","ActiveSupport::CoreExtensions::Array::Access","classes.html\/ActiveSupport\/CoreExtensions\/Array\/Access.html#M003040","(position)","Returns the beginning of the array up to +position+. %w( a b c d ).to(0)  # => %w( a ) %w( a b c d ).to(2)",2],["to_a","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002576","()","",2],["to_date","ActiveSupport::CoreExtensions::Date::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Conversions.html#M003151","()","A method to keep Time, Date and DateTime instances interchangeable on conversions. In this case, it simply",2],["to_date","ActiveSupport::CoreExtensions::DateTime::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Conversions.html#M002892","()","Converts self to a Ruby Date object; time portion is discarded ",2],["to_date","ActiveSupport::CoreExtensions::String::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/String\/Conversions.html#M002875","()","",2],["to_date","ActiveSupport::CoreExtensions::Time::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Conversions.html#M003090","()","Converts a Time object to a Date, dropping hour, minute, and second precision. my_time = Time.now  #",2],["to_datetime","ActiveSupport::CoreExtensions::Date::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Conversions.html#M003153","()","Converts a Date instance to a DateTime, where the time is set to the beginning of the day and UTC offset",2],["to_datetime","ActiveSupport::CoreExtensions::DateTime::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Conversions.html#M002894","()","To be able to keep Times, Dates and DateTimes interchangeable on conversions ",2],["to_datetime","ActiveSupport::CoreExtensions::String::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/String\/Conversions.html#M002876","()","",2],["to_datetime","ActiveSupport::CoreExtensions::Time::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Conversions.html#M003092","()","Converts a Time instance to a Ruby DateTime instance, preserving UTC offset. my_time = Time.now    #",2],["to_datetime","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002582","()","",2],["to_f","ActiveSupport::CoreExtensions::DateTime::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Conversions.html#M002896","()","Converts self to a floating-point number of seconds since the Unix epoch  ",2],["to_f","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002577","()","",2],["to_formatted_s","ActiveSupport::CoreExtensions::Array::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/Array\/Conversions.html#M003037","(format = :default)","Converts a collection of elements into a formatted string by calling <tt>to_s<\/tt> on all elements and",2],["to_formatted_s","ActiveSupport::CoreExtensions::BigDecimal::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/BigDecimal\/Conversions.html#M003255","(format = DEFAULT_STRING_FORMAT)","",2],["to_formatted_s","ActiveSupport::CoreExtensions::Date::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Conversions.html#M003149","(format = :default)","Convert to a formatted string. See DATE_FORMATS for predefined formats. This method is aliased to <tt>to_s<\/tt>.",2],["to_formatted_s","ActiveSupport::CoreExtensions::DateTime::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Conversions.html#M002889","(format = :default)","Convert to a formatted string. See Time::DATE_FORMATS for predefined formats. This method is aliased",2],["to_formatted_s","ActiveSupport::CoreExtensions::Range::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/Range\/Conversions.html#M002925","(format = :default)","Gives a human readable format of the range. ==== Example [1..100].to_formatted_s # => \"1..100\" ",2],["to_formatted_s","ActiveSupport::CoreExtensions::Time::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Conversions.html#M003088","(format = :default)","Converts to a formatted string. See DATE_FORMATS for builtin formats. This method is aliased to <tt>to_s<\/tt>.",2],["to_formatted_s","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002562","(format = :default)","Alias for #to_s",2],["to_hash","ActionController::Session::AbstractStore::SessionHash","classes.html\/ActionController\/Session\/AbstractStore\/SessionHash.html#M001691","()","",2],["to_hash","ActiveSupport::XmlMini_Nokogiri::Conversions::Document","classes.html\/ActiveSupport\/XmlMini_Nokogiri\/Conversions\/Document.html#M002520","()","",2],["to_hash","ActiveSupport::XmlMini_Nokogiri::Conversions::Node","classes.html\/ActiveSupport\/XmlMini_Nokogiri\/Conversions\/Node.html#M002521","(hash = {})","Convert XML document to hash hash:: Hash to merge the converted element into. ",2],["to_hash","HashWithIndifferentAccess","classes.html\/HashWithIndifferentAccess.html#M002967","()","Convert to a Hash with String keys. ",2],["to_hash","LibXML::Conversions::Document","classes.html\/LibXML\/Conversions\/Document.html#M002522","()","",2],["to_hash","LibXML::Conversions::Node","classes.html\/LibXML\/Conversions\/Node.html#M002523","(hash={})","Convert XML document to hash hash:: Hash to merge the converted element into. ",2],["to_i","ActiveSupport::CoreExtensions::DateTime::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Conversions.html#M002897","()","Converts self to an integer number of seconds since the Unix epoch ",2],["to_i","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002578","()","",2],["to_json","ActiveRecord::Serialization","classes.html\/ActiveRecord\/Serialization.html#M000900","(options = {})","Returns a JSON string representing the model. Some configuration is available through +options+. The",2],["to_json","ActiveSupport::JSON::Variable","classes.html\/ActiveSupport\/JSON\/Variable.html#M002800","(options=nil)","",2],["to_json","Object","classes.html\/Object.html#M002813","(options = nil)","Dumps object in JSON (JavaScript Object Notation). See www.json.org for more info. ",2],["to_options","ActiveSupport::CoreExtensions::Hash::Keys","classes.html\/ActiveSupport\/CoreExtensions\/Hash\/Keys.html#M002987","()","Alias for #symbolize_keys",2],["to_options!","ActiveSupport::CoreExtensions::Hash::Keys","classes.html\/ActiveSupport\/CoreExtensions\/Hash\/Keys.html#M002988","()","Alias for #symbolize_keys!",2],["to_options!","HashWithIndifferentAccess","classes.html\/HashWithIndifferentAccess.html#M002966","()","",2],["to_param","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001102","()","Returns a String, which Action Pack uses for constructing an URL to this object. The default implementation",2],["to_param","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001480","()","Allows Active Resource objects to be used as parameters in Action Pack URL generation. ",2],["to_param","ActiveSupport::CoreExtensions::Array::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/Array\/Conversions.html#M003034","()","Calls <tt>to_param<\/tt> on all its elements and joins the result with slashes. This is used by <tt>url_for<\/tt>",2],["to_param","Object","classes.html\/Object.html#M003248","()","Alias of <tt>to_s<\/tt>. ",2],["to_param","Object","classes.html\/Object.html#M002078","()","",2],["to_prepare","ActionController::Dispatcher","classes.html\/ActionController\/Dispatcher.html#M001620","(identifier = nil, &block)","Add a preparation callback. Preparation callbacks are run before every request in development mode, and",2],["to_prepare","Rails::Configuration","classes.html\/Rails\/Configuration.html#M000108","(&callback)","Add a preparation callback that will run before every request in development mode, or before the first",2],["to_query","ActiveSupport::CoreExtensions::Array::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/Array\/Conversions.html#M003035","(key)","Converts an array into a string suitable for use as a URL query string, using the given +key+ as the",2],["to_query","Object","classes.html\/Object.html#M003249","(key)","Converts an object into a string suitable for use as a URL query string, using the given <tt>key<\/tt>",2],["to_s","ActionController::Routing::OptionalFormatSegment","classes.html\/ActionController\/Routing\/OptionalFormatSegment.html#M002103","()","",2],["to_s","ActionView::Template::Path","classes.html\/ActionView\/Template\/Path.html#M002188","()","",2],["to_s","ActiveRecord::Error","classes.html\/ActiveRecord\/Error.html#M001259","()","Alias for #message",2],["to_s","ActiveResource::Request","classes.html\/ActiveResource\/Request.html#M001565","()","",2],["to_s","ActiveResource::SSLError","classes.html\/ActiveResource\/SSLError.html#M001416","()","",2],["to_s","ActiveResource::SSLError","classes.html\/ActiveResource\/SSLError.html#M001510","()","",2],["to_s","ActiveResource::TimeoutError","classes.html\/ActiveResource\/TimeoutError.html#M001508","()","",2],["to_s","ActiveResource::TimeoutError","classes.html\/ActiveResource\/TimeoutError.html#M001414","()","",2],["to_s","ActiveSupport::SafeBuffer","classes.html\/ActiveSupport\/SafeBuffer.html#M002863","()","",2],["to_s","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002561","(format = :default)","<tt>:db<\/tt> format outputs time in UTC; all others output time in local. Uses TimeWithZone's +strftime+,",2],["to_s","ActiveSupport::TimeZone","classes.html\/ActiveSupport\/TimeZone.html#M002694","()","Returns a textual representation of this time zone. ",2],["to_s","CGI::Cookie","classes.html\/CGI\/Cookie.html#M001957","()","Converts the Cookie to its string representation. ",2],["to_s","Mime::Type","classes.html\/Mime\/Type.html#M001943","()","",2],["to_s","Plugin","classes.html\/Plugin.html#M000147","()","",2],["to_s","SourceAnnotationExtractor::Annotation","classes.html\/SourceAnnotationExtractor\/Annotation.html#M000010","(options={})","Returns a representation of the annotation that looks like this: [126] [TODO] This algorithm is simple",2],["to_sentence","ActiveSupport::CoreExtensions::Array::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/Array\/Conversions.html#M003033","(options = {})","Converts the array to a comma-separated sentence where the last element is joined by the connector word.",2],["to_sql","ActiveRecord::ConnectionAdapters::TableDefinition","classes.html\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M000577","()","Returns a String whose contents are the column definitions concatenated together. This string can then",2],["to_str","ActionView::Template::Path","classes.html\/ActionView\/Template\/Path.html#M002189","()","",2],["to_str","Mime::Type","classes.html\/Mime\/Type.html#M001944","()","",2],["to_sym","Mime::Type","classes.html\/Mime\/Type.html#M001945","()","",2],["to_time","ActiveSupport::CoreExtensions::Date::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Conversions.html#M003152","(form = :local)","Converts a Date instance to a Time, where the time is set to the beginning of the day. The timezone can",2],["to_time","ActiveSupport::CoreExtensions::DateTime::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Conversions.html#M002893","()","Attempts to convert self to a Ruby Time object; returns self if out of range of Ruby Time class If self",2],["to_time","ActiveSupport::CoreExtensions::String::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/String\/Conversions.html#M002874","(form = :utc)","Form can be either :utc (default) or :local. ",2],["to_time","ActiveSupport::CoreExtensions::Time::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Conversions.html#M003091","()","A method to keep Time, Date and DateTime instances interchangeable on conversions. In this case, it simply",2],["to_time","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002581","()","A TimeWithZone acts like a Time, so just return +self+. ",2],["to_utc_offset_s","ActiveSupport::CoreExtensions::Numeric::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Conversions.html#M003049","(colon=true)","Assumes self represents an offset from UTC in seconds (as returned from Time#utc_offset) and turns this",2],["to_xml","ActiveRecord::Errors","classes.html\/ActiveRecord\/Errors.html#M001283","(options={})","Returns an XML representation of this error object. class Company < ActiveRecord::Base validates_presence_of",2],["to_xml","ActiveRecord::Serialization","classes.html\/ActiveRecord\/Serialization.html#M000903","(options = {}, &block)","Builds an XML document to represent the model. Some configuration is available through +options+. However",2],["to_xml","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001488","(options={})","Converts the resource to an XML string representation. ==== Options The +options+ parameter is handed",2],["to_xml","ActiveSupport::CoreExtensions::Array::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/Array\/Conversions.html#M003038","(options = {})","Returns a string that represents this array in XML by sending +to_xml+ to each element. Active Record",2],["to_yaml","ActiveSupport::CoreExtensions::BigDecimal::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/BigDecimal\/Conversions.html#M003256","(opts = {})","This emits the number without any scientific notation. This is better than self.to_f.to_s since it doesn't",2],["to_yaml","ActiveSupport::SafeBuffer","classes.html\/ActiveSupport\/SafeBuffer.html#M002864","(*args)","",2],["to_yaml","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002557","(options = {})","",2],["today","ActiveSupport::TimeZone","classes.html\/ActiveSupport\/TimeZone.html#M002699","()","Return the current date in this time zone. ",2],["today?","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003162","()","Tells whether the Date object's date is today ",2],["today?","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003101","()","Tells whether the Time object's time is today ",2],["today?","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002567","()","",2],["toggle","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes.html\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M002336","(*ids)","Toggles the visibility of the DOM elements with the given +ids+. Example: # Show a few people # Generates:",2],["toggle","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001121","(attribute)","Assigns to +attribute+ the boolean opposite of <tt>attribute?<\/tt>. So if the predicate returns +true+",2],["toggle!","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001122","(attribute)","Wrapper around +toggle+ that saves the record. This method differs from its non-bang version in that",2],["tomorrow","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003205","()","Convenience method which returns a new Date\/DateTime representing the time 1 day since the instance time",2],["tomorrow","ActiveSupport::CoreExtensions::Date::Calculations::ClassMethods","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations\/ClassMethods.html#M003159","()","Returns a new Date representing the date 1 day after today (i.e. tomorrow's date). ",2],["tomorrow","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003143","()","Convenience method which returns a new Time representing the time 1 day since the instance time ",2],["touch","ActiveRecord::Timestamp","classes.html\/ActiveRecord\/Timestamp.html#M001379","(attribute = nil)","Saves the record with the updated_at\/on attributes set to the current time. If the save fails because",2],["transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000651","(options = {})","Runs the given block in a database transaction, and returns the result of the block. == Nested transactions",2],["transaction","ActiveRecord::Transactions","classes.html\/ActiveRecord\/Transactions.html#M000823","(&block)","See ActiveRecord::Transactions::ClassMethods for detailed documentation. ",2],["transaction","ActiveRecord::Transactions::ClassMethods","classes.html\/ActiveRecord\/Transactions\/ClassMethods.html#M000822","(options = {}, &block)","See ActiveRecord::Transactions::ClassMethods for detailed documentation. ",2],["transaction_joinable=","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000813","(joinable)","",2],["translate","ActionController::Translation","classes.html\/ActionController\/Translation.html#M001879","(*args)","",2],["translate","ActionView::Helpers::TranslationHelper","classes.html\/ActionView\/Helpers\/TranslationHelper.html#M002379","(keys, options = {})","Delegates to I18n#translate but also performs two additional functions. First, it'll catch MissingTranslationData",2],["transliterate","ActiveSupport::Inflector","classes.html\/ActiveSupport\/Inflector.html#M002787","(string)","",2],["transliterate","ActiveSupport::Inflector","classes.html\/ActiveSupport\/Inflector.html#M002785","(string)","Replaces accented characters with their ascii equivalents. ",2],["transliterate","ActiveSupport::Inflector","classes.html\/ActiveSupport\/Inflector.html#M002786","(string)","",2],["truncate","ActionView::Helpers::TextHelper","classes.html\/ActionView\/Helpers\/TextHelper.html#M002267","(text, *args)","Truncates a given +text+ after a given <tt>:length<\/tt> if +text+ is longer than <tt>:length<\/tt> (defaults",2],["try","Object","classes.html\/Object.html#M003000","(method, *args, &block)","Invokes the method identified by the symbol +method+, passing it any arguments  and\/or the block specified,",2],["try_to_load_dependency","ActiveRecord::TestFixtures::ClassMethods","classes.html\/ActiveRecord\/TestFixtures\/ClassMethods.html#M000872","(file_name)","",2],["tv_sec","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002580","()","Alias for #to_i",2],["type_cast","ActiveRecord::ConnectionAdapters::Column","classes.html\/ActiveRecord\/ConnectionAdapters\/Column.html#M000530","(value)","Casts value (which is a String) to an appropriate instance. ",2],["type_cast_code","ActiveRecord::ConnectionAdapters::Column","classes.html\/ActiveRecord\/ConnectionAdapters\/Column.html#M000531","(var_name)","",2],["type_to_sql","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M000475","(type, limit = nil, precision = nil, scale = nil)","Maps logical Rails types to MySQL-specific data types. ",2],["type_to_sql","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000781","(type, limit = nil, precision = nil, scale = nil)","Maps logical Rails types to PostgreSQL-specific data types. ",2],["u_unpack","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002644","(string)","Unpack the string at codepoints boundaries. Raises an EncodingError when the encoding of the string isn't",2],["uncached","ActiveRecord::ConnectionAdapters::QueryCache","classes.html\/ActiveRecord\/ConnectionAdapters\/QueryCache.html#M000672","()","Disable the query cache within the block. ",2],["uncached","ActiveRecord::QueryCache::ClassMethods","classes.html\/ActiveRecord\/QueryCache\/ClassMethods.html#M001371","(&block)","Disable the query cache within the block if Active Record is configured. ",2],["uncountable","ActiveSupport::Inflector::Inflections","classes.html\/ActiveSupport\/Inflector\/Inflections.html#M002772","(*words)","Add uncountable words that shouldn't be attempted inflected. Examples: uncountable \"money\" uncountable",2],["undef_my_compiled_methods!","ActionView::ReloadableTemplate","classes.html\/ActionView\/ReloadableTemplate.html#M002166","()","remove any compiled methods that look like they might belong to me ",2],["underscore","ActiveSupport::CoreExtensions::String::Inflections","classes.html\/ActiveSupport\/CoreExtensions\/String\/Inflections.html#M002840","()","The reverse of +camelize+. Makes an underscored, lowercase form from the expression in the string. +underscore+",2],["underscore","ActiveSupport::Inflector","classes.html\/ActiveSupport\/Inflector.html#M002780","(camel_cased_word)","The reverse of +camelize+. Makes an underscored, lowercase form from the expression in the string. Changes",2],["unescape","Object","classes.html\/Object.html#M002949","(str, escaped = @regexp[:ESCAPED])","",2],["unescape_bytea","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000736","(original_value)","Unescapes bytea output from a database to the binary string it represents. NOTE: This is NOT an inverse",2],["unescape_rjs","ActionController::Assertions::SelectorAssertions","classes.html\/ActionController\/Assertions\/SelectorAssertions.html#M001729","(rjs_string)","Unescapes a RJS string. ",2],["uninstall","Plugin","classes.html\/Plugin.html#M000153","()","",2],["unmarshal","ActiveRecord::SessionStore::Session","classes.html\/ActiveRecord\/SessionStore\/Session.html#M001217","(data)","",2],["unmarshal","ActiveRecord::SessionStore::SqlBypass","classes.html\/ActiveRecord\/SessionStore\/SqlBypass.html#M001234","(data)","",2],["unmemoize_all","ActiveSupport::Memoizable::InstanceMethods","classes.html\/ActiveSupport\/Memoizable\/InstanceMethods.html#M002666","()","",2],["unnormalized","REXML::Entity","classes.html\/REXML\/Entity.html#M002939","()","",2],["unpack","Rails::GemDependency","classes.html\/Rails\/GemDependency.html#M000266","(options={})","",2],["unpacked_path","Rails::GemDependency","classes.html\/Rails\/GemDependency.html#M000244","()","",2],["until","ActiveSupport::CoreExtensions::Numeric::Time","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Time.html#M003063","(time = ::Time.now)","Alias for #ago",2],["until","ActiveSupport::Duration","classes.html\/ActiveSupport\/Duration.html#M003293","(time = ::Time.current)","Alias for #ago",2],["unverifiable_types","Mime::Type","classes.html\/Mime\/Type.html#M001936","()","",2],["upcase","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002636","()","Convert characters in the string to uppercase. Example: 'Laurent, \u00f2u sont les tests?'.mb_chars.upcase.to_s",2],["update","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000970","(id, attributes)","Updates an object (or multiple objects) and saves it to the database, if validations pass. The resulting",2],["update","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000648","(sql, name = nil)","Executes the update statement and returns the number of rows affected. ",2],["update","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001496","()","Update the resource on the remote service. ",2],["update","HashWithIndifferentAccess","classes.html\/HashWithIndifferentAccess.html#M002956","(other_hash)","Updates the instantized hash with values from the second: hash_1 = HashWithIndifferentAccess.new hash_1[:key]",2],["update_all","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000973","(updates, conditions = nil, options = {})","Updates all records with details given if they match a set of conditions supplied, limits and order can",2],["update_attribute","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001114","(name, value)","Updates a single attribute and saves the record without going through the normal validation procedure.",2],["update_attributes","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001115","(attributes)","Updates all the attributes from the passed-in Hash and saves the record. If the object is invalid, the",2],["update_attributes!","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001116","(attributes)","Updates an object just like Base.update_attributes but calls save! instead of save so an exception is",2],["update_counters","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000978","(id, counters)","A generic \"counter updater\" implementation, intended primarily to be used by increment_counter and decrement_counter,",2],["update_counters_with_lock","ActiveRecord::Locking::Optimistic::ClassMethods","classes.html\/ActiveRecord\/Locking\/Optimistic\/ClassMethods.html#M001357","(id, counters)","Make sure the lock version column gets updated when counters are updated. ",2],["update_page","ActionView::Helpers::PrototypeHelper","classes.html\/ActionView\/Helpers\/PrototypeHelper.html#M002362","(&block)","Yields a JavaScriptGenerator and returns the generated JavaScript code. Use this to update multiple elements",2],["update_page_tag","ActionView::Helpers::PrototypeHelper","classes.html\/ActionView\/Helpers\/PrototypeHelper.html#M002363","(html_options = {}, &block)","Works like update_page but wraps the generated JavaScript in a <script> tag. Use this to include generated",2],["update_sql","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes.html\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M000666","(sql, name = nil)","Executes the update statement and returns the number of rows affected. ",2],["update_sql","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M000749","(sql, name = nil)","Executes an UPDATE query and returns the number of affected tuples. ",2],["updated","ActionView::Helpers::AtomFeedHelper::AtomFeedBuilder","classes.html\/ActionView\/Helpers\/AtomFeedHelper\/AtomFeedBuilder.html#M002293","(date_or_time = nil)","Accepts a Date or Time object and inserts it in the proper format. If nil is passed, current time in",2],["url","ActionController::Request","classes.html\/ActionController\/Request.html#M002013","()","Returns the complete URL used for this request. ",2],["url_for","ActionController::Base","classes.html\/ActionController\/Base.html#M001793","(options = {})","Returns a URL that has been rewritten according to the options hash and the defined routes. (For doing",2],["url_for","ActionController::Integration::Session","classes.html\/ActionController\/Integration\/Session.html#M001842","(options)","Returns the URL for the given options, according to the rules specified in the application's routes.",2],["url_for","ActionController::UrlWriter","classes.html\/ActionController\/UrlWriter.html#M002113","(options)","Generate a url based on the options provided, default_url_options and the routes defined in routes.rb.",2],["url_for","ActionView::Helpers::UrlHelper","classes.html\/ActionView\/Helpers\/UrlHelper.html#M002455","(options = {})","Returns the URL for the set of +options+ provided. This takes the same options as +url_for+ in Action",2],["us_zones","ActiveSupport::TimeZone","classes.html\/ActiveSupport\/TimeZone.html#M002711","()","A convenience method for returning a collection of TimeZone objects for time zones in the USA. ",2],["usage","Rails::Generator::Options","classes.html\/Rails\/Generator\/Options.html#M000322","(message = usage_message)","Raise a usage error.  Override usage_message to provide a blurb after the option parser summary. ",2],["usage_message","Rails::Generator::Base","classes.html\/Rails\/Generator\/Base.html#M000343","()","Read USAGE from file in generator base path. ",2],["usage_message","Rails::Generator::Options","classes.html\/Rails\/Generator\/Options.html#M000323","()","",2],["usage_message","Rails::Generator::Scripts::Base","classes.html\/Rails\/Generator\/Scripts\/Base.html#M000346","()","",2],["use","ActionController::MiddlewareStack","classes.html\/ActionController\/MiddlewareStack.html#M001933","(*args, &block)","",2],["use_application_sources!","Rails::Generator::Lookup::ClassMethods","classes.html\/Rails\/Generator\/Lookup\/ClassMethods.html#M000364","()","Use application generators (app, ?). ",2],["use_checkout?","RailsEnvironment","classes.html\/RailsEnvironment.html#M000141","()","",2],["use_component_sources!","Rails::Generator::Lookup::ClassMethods","classes.html\/Rails\/Generator\/Lookup\/ClassMethods.html#M000365","()","Use component generators (model, controller, etc). 1.  Rails application.  If RAILS_ROOT is defined we",2],["use_controllers!","ActionController::Routing","classes.html\/ActionController\/Routing.html#M001634","(controller_names)","Replaces the internal list of controllers available to ActionController::Routing with the passed argument.",2],["use_externals?","RailsEnvironment","classes.html\/RailsEnvironment.html#M000140","()","",2],["use_svn?","RailsEnvironment","classes.html\/RailsEnvironment.html#M000139","()","",2],["use_zone","ActiveSupport::CoreExtensions::Time::Zones::ClassMethods","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Zones\/ClassMethods.html#M003083","(time_zone)","Allows override of <tt>Time.zone<\/tt> locally inside supplied block; resets <tt>Time.zone<\/tt> to existing",2],["usec","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002575","()","",2],["user","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001443","()","Gets the \\user for REST HTTP authentication. ",2],["user=","ActiveResource::Base","classes.html\/ActiveResource\/Base.html#M001444","(user)","Sets the \\user for REST HTTP authentication. ",2],["user=","ActiveResource::Connection","classes.html\/ActiveResource\/Connection.html#M001515","(user)","Set the user for remote service. ",2],["user_home","Dir","classes.html\/Dir.html#M000357","()","User home directory lookup adapted from RubyGems. ",2],["user_name_and_password","ActionController::HttpAuthentication::Basic","classes.html\/ActionController\/HttpAuthentication\/Basic.html#M001652","(request)","",2],["uses_transaction","ActiveRecord::TestFixtures::ClassMethods","classes.html\/ActiveRecord\/TestFixtures\/ClassMethods.html#M000875","(*methods)","",2],["uses_transaction?","ActiveRecord::TestFixtures::ClassMethods","classes.html\/ActiveRecord\/TestFixtures\/ClassMethods.html#M000876","(method)","",2],["utc","ActiveSupport::CoreExtensions::DateTime::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Calculations.html#M002915","()","Adjusts DateTime to UTC by adding its offset value; offset is set to 0 Example: DateTime.civil(2005,",2],["utc","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002535","()","Returns a Time or DateTime instance that represents the time in UTC. ",2],["utc?","ActiveSupport::CoreExtensions::DateTime::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Calculations.html#M002917","()","Returns true if offset == 0 ",2],["utc?","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002546","()","",2],["utc_offset","ActiveSupport::CoreExtensions::DateTime::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Calculations.html#M002918","()","Returns the offset value in seconds ",2],["utc_offset","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002548","()","",2],["utc_offset","ActiveSupport::TimeZone","classes.html\/ActiveSupport\/TimeZone.html#M002690","()","",2],["utc_time","ActiveSupport::CoreExtensions::Time::Calculations::ClassMethods","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations\/ClassMethods.html#M003098","(*args)","Wraps class method +time_with_datetime_fallback+ with +utc_or_local+ set to <tt>:utc<\/tt>. ",2],["utc_to_local","ActiveSupport::TimeZone","classes.html\/ActiveSupport\/TimeZone.html#M002700","(time)","Adjust the given time to the simultaneous time in the time zone represented by +self+. Returns a Time.utc()",2],["valid?","ActiveRecord::Validations","classes.html\/ActiveRecord\/Validations.html#M001318","()","Runs +validate+ and +validate_on_create+ or +validate_on_update+ and returns true if no errors were added",2],["valid?","ActiveResource::Validations","classes.html\/ActiveResource\/Validations.html#M001436","()","Checks for errors on an object (i.e., is resource.errors empty?). ==== Examples my_person = Person.create(params[:person])",2],["valid?","Rails::Plugin","classes.html\/Rails\/Plugin.html#M000276","()","",2],["valid_alter_table_options","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M000560","( type, options)","See: http:\/\/www.sqlite.org\/lang_altertable.html SQLite has an additional restriction on the ALTER TABLE",2],["validate","ActiveRecord::Validations","classes.html\/ActiveRecord\/Validations.html#M001321","()","Overwrite this method for validation checks on all saves and use <tt>Errors.add(field, msg)<\/tt> for",2],["validate_digest_response","ActionController::HttpAuthentication::Digest","classes.html\/ActionController\/HttpAuthentication\/Digest.html#M001662","(request, realm, &password_procedure)","Returns false unless the request credentials response value matches the expected value. First try the",2],["validate_nonce","ActionController::HttpAuthentication::Digest","classes.html\/ActionController\/HttpAuthentication\/Digest.html#M001671","(request, value, seconds_to_timeout=5*60)","Might want a shorter timeout depending on whether the request is a PUT or POST, and if client is browser",2],["validate_on_create","ActiveRecord::Validations","classes.html\/ActiveRecord\/Validations.html#M001322","()","Overwrite this method for validation checks used only on creation. ",2],["validate_on_update","ActiveRecord::Validations","classes.html\/ActiveRecord\/Validations.html#M001323","()","Overwrite this method for validation checks used only on updates. ",2],["validates_acceptance_of","ActiveRecord::Validations::ClassMethods","classes.html\/ActiveRecord\/Validations\/ClassMethods.html#M001288","(*attr_names)","Encapsulates the pattern of wanting to validate the acceptance of a terms of service check box (or similar",2],["validates_associated","ActiveRecord::Validations::ClassMethods","classes.html\/ActiveRecord\/Validations\/ClassMethods.html#M001312","(*attr_names)","Validates whether the associated object or objects are all valid themselves. Works with any kind of association.",2],["validates_confirmation_of","ActiveRecord::Validations::ClassMethods","classes.html\/ActiveRecord\/Validations\/ClassMethods.html#M001287","(*attr_names)","Encapsulates the pattern of wanting to validate a password or email address field with a confirmation.",2],["validates_each","ActiveRecord::Validations::ClassMethods","classes.html\/ActiveRecord\/Validations\/ClassMethods.html#M001286","(*attrs)","Validates each attribute against a block. class Person < ActiveRecord::Base validates_each :first_name,",2],["validates_exclusion_of","ActiveRecord::Validations::ClassMethods","classes.html\/ActiveRecord\/Validations\/ClassMethods.html#M001311","(*attr_names)","Validates that the value of the specified attribute is not in a particular enumerable object. class Person",2],["validates_format_of","ActiveRecord::Validations::ClassMethods","classes.html\/ActiveRecord\/Validations\/ClassMethods.html#M001293","(*attr_names)","Validates whether the value of the specified attribute is of the correct form by matching it against",2],["validates_inclusion_of","ActiveRecord::Validations::ClassMethods","classes.html\/ActiveRecord\/Validations\/ClassMethods.html#M001294","(*attr_names)","Validates whether the value of the specified attribute is available in a particular enumerable object.",2],["validates_length_of","ActiveRecord::Validations::ClassMethods","classes.html\/ActiveRecord\/Validations\/ClassMethods.html#M001290","(*attrs)","Validates that the specified attribute matches the length restrictions supplied. Only one option can",2],["validates_numericality_of","ActiveRecord::Validations::ClassMethods","classes.html\/ActiveRecord\/Validations\/ClassMethods.html#M001313","(*attr_names)","Validates whether the value of the specified attribute is numeric by trying to convert it to a float",2],["validates_presence_of","ActiveRecord::Validations::ClassMethods","classes.html\/ActiveRecord\/Validations\/ClassMethods.html#M001289","(*attr_names)","Validates that the specified attributes are not blank (as defined by Object#blank?). Happens by default",2],["validates_size_of","ActiveRecord::Validations::ClassMethods","classes.html\/ActiveRecord\/Validations\/ClassMethods.html#M001291","(*attrs)","Alias for #validates_length_of",2],["validates_uniqueness_of","ActiveRecord::Validations::ClassMethods","classes.html\/ActiveRecord\/Validations\/ClassMethods.html#M001292","(*attr_names)","Validates whether the value of the specified attributes are unique across the system. Useful for making",2],["value","ActiveRecord::Error","classes.html\/ActiveRecord\/Error.html#M001260","()","",2],["value_to_boolean","ActiveRecord::ConnectionAdapters::Column","classes.html\/ActiveRecord\/ConnectionAdapters\/Column.html#M000539","(value)","convert something to a boolean ",2],["value_to_decimal","ActiveRecord::ConnectionAdapters::Column","classes.html\/ActiveRecord\/ConnectionAdapters\/Column.html#M000540","(value)","convert something to a BigDecimal ",2],["values_at","HashWithIndifferentAccess","classes.html\/HashWithIndifferentAccess.html#M002959","(*indices)","Returns an array of the values at the specified indices: hash = HashWithIndifferentAccess.new hash[:a]",2],["vendor_gem?","Rails::GemDependency","classes.html\/Rails\/GemDependency.html#M000261","()","",2],["vendor_rails?","Rails::GemDependency","classes.html\/Rails\/GemDependency.html#M000260","()","",2],["verifiable_request_format?","ActionController::RequestForgeryProtection","classes.html\/ActionController\/RequestForgeryProtection.html#M001643","()","",2],["verification_timeout","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000712","()","Deprecated and no longer has any effect. ",2],["verification_timeout=","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M000713","(flag)","Deprecated and no longer has any effect. ",2],["verified_request?","ActionController::RequestForgeryProtection","classes.html\/ActionController\/RequestForgeryProtection.html#M001641","()","Returns true or false if a request is verified.  Checks: * is the format restricted?  By default, only",2],["verify","ActionController::Verification::ClassMethods","classes.html\/ActionController\/Verification\/ClassMethods.html#M001637","(options={})","Verify the given actions so that if certain prerequisites are not met, the user is redirected to a different",2],["verify","ActiveSupport::MessageVerifier","classes.html\/ActiveSupport\/MessageVerifier.html#M002683","(signed_message)","",2],["verify!","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes.html\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M000802","(*ignored)","Checks whether the connection to the database is still active (i.e. not stale). This is done under the",2],["verify_authenticity_token","ActionController::RequestForgeryProtection","classes.html\/ActionController\/RequestForgeryProtection.html#M001640","()","The actual before_filter that is used.  Modify this to change how you handle unverified requests. ",2],["verify_request?","Mime::Type","classes.html\/Mime\/Type.html#M001949","()","Returns true if Action Pack should check requests using this Mime Type for possible request forgery.",2],["version","Rails","classes.html\/Rails.html#M000052","()","",2],["version_for_dir","Rails::VendorGemSourceIndex","classes.html\/Rails\/VendorGemSourceIndex.html#M000233","(d)","",2],["view_path","Rails::Plugin","classes.html\/Rails\/Plugin.html#M000285","()","",2],["view_paths","ActionController::Base","classes.html\/ActionController\/Base.html#M001786","()","View load paths determine the bases from which template references can be made. So a call to render(\"test\/template\")",2],["view_paths","ActionController::Base","classes.html\/ActionController\/Base.html#M001798","()","View load paths for controller. ",2],["view_paths=","ActionController::Base","classes.html\/ActionController\/Base.html#M001787","(value)","",2],["view_paths=","ActionController::Base","classes.html\/ActionController\/Base.html#M001799","(value)","",2],["view_paths=","ActionView::Base","classes.html\/ActionView\/Base.html#M002214","(paths)","",2],["visual_effect","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes.html\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M002344","(name, id = nil, options = {})","Starts a script.aculo.us visual effect. See ActionView::Helpers::ScriptaculousHelper for more information.",2],["visual_effect","ActionView::Helpers::ScriptaculousHelper","classes.html\/ActionView\/Helpers\/ScriptaculousHelper.html#M002242","(name, element_id = false, js_options = {})","Returns a JavaScript snippet to be used on the Ajax callbacks for starting visual effects. Example: <%=",2],["wants?","ActiveSupport::Multibyte::Chars","classes.html\/ActiveSupport\/Multibyte\/Chars.html#M002607","(string)","Returns +true+ if the Chars class can and should act as a proxy for the string _string_. Returns +false+",2],["week","ActiveSupport::CoreExtensions::Numeric::Time","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Time.html#M003059","()","Alias for #weeks",2],["weeks","ActiveSupport::CoreExtensions::Numeric::Time","classes.html\/ActiveSupport\/CoreExtensions\/Numeric\/Time.html#M003058","()","",2],["with_backend","ActiveSupport::JSON","classes.html\/ActiveSupport\/JSON.html#M002805","(name)","",2],["with_backend","ActiveSupport::XmlMini","classes.html\/ActiveSupport\/XmlMini.html#M002709","(name)","",2],["with_connection","ActiveRecord::ConnectionAdapters::ConnectionPool","classes.html\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M000683","()","Reserve a connection, and yield it to a block. Ensure the connection is checked back in when finished.",2],["with_controllers","ActionController::Routing","classes.html\/ActionController\/Routing.html#M001631","(names)","Expects an array of controller names as the first argument. Executes the passed block with only the named",2],["with_exclusive_scope","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001075","(method_scoping = {}, &block)","Works like with_scope, but discards any nested properties. ",2],["with_gc_stats","ActiveSupport::Testing::Performance::Metrics::Base","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M003339","()","",2],["with_gc_stats","ActiveSupport::Testing::Performance::Metrics::Base","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M003340","()","",2],["with_gc_stats","ActiveSupport::Testing::Performance::Metrics::Base","classes.html\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M003341","()","",2],["with_local_cache","ActiveSupport::Cache::Strategy::LocalCache","classes.html\/ActiveSupport\/Cache\/Strategy\/LocalCache.html#M002728","()","",2],["with_options","Object","classes.html\/Object.html#M003252","(options)","An elegant way to factor duplication out of options passed to a series of method calls. Each method called",2],["with_output_file","ActiveSupport::Testing::Performance::Benchmarker","classes.html\/ActiveSupport\/Testing\/Performance\/Benchmarker.html#M003325","()","",2],["with_routing","ActionController::TestProcess","classes.html\/ActionController\/TestProcess.html#M001778","()","A helper to make it easier to test different route configurations. This method temporarily replaces ActionController::Routing::Routes",2],["with_scope","ActiveRecord::Base","classes.html\/ActiveRecord\/Base.html#M001074","(method_scoping = {}, action = :merge, &block)","Scope parameters to method calls within the block.  Takes a hash of method_name => parameters hash. method_name",2],["with_signal_handler","RailsFCGIHandler","classes.html\/RailsFCGIHandler.html#M000031","(signal)","",2],["with_template","ActionView::Base","classes.html\/ActionView\/Base.html#M002219","(current_template)","",2],["with_transaction_returning_status","ActiveRecord::Transactions","classes.html\/ActiveRecord\/Transactions.html#M000828","(method, *args)","Executes +method+ within a transaction and captures its return value as a status flag. If the status",2],["word_wrap","ActionView::Helpers::TextHelper","classes.html\/ActionView\/Helpers\/TextHelper.html#M002271","(text, *args)","Wraps the +text+ into lines no longer than +line_width+ width. This method breaks on the first whitespace",2],["wrap","ActiveSupport::CoreExtensions::Array::Wrapper","classes.html\/ActiveSupport\/CoreExtensions\/Array\/Wrapper.html#M003031","(object)","Wraps the object in an Array unless it's an Array.  Converts the object to an Array using #to_ary if",2],["write","ActionController::Response","classes.html\/ActionController\/Response.html#M001910","(str)","",2],["write","ActiveRecord::Migration","classes.html\/ActiveRecord\/Migration.html#M000890","(text=\"\")","",2],["write","ActiveSupport::Cache::CompressedMemCacheStore","classes.html\/ActiveSupport\/Cache\/CompressedMemCacheStore.html#M002714","(name, value, options = nil)","",2],["write","ActiveSupport::Cache::FileStore","classes.html\/ActiveSupport\/Cache\/FileStore.html#M002741","(name, value, options = nil)","",2],["write","ActiveSupport::Cache::MemCacheStore","classes.html\/ActiveSupport\/Cache\/MemCacheStore.html#M002719","(key, value, options = nil)","Writes a value to the cache. Possible options: - +:unless_exist+ - set to true if you don't want to update",2],["write","ActiveSupport::Cache::MemoryStore","classes.html\/ActiveSupport\/Cache\/MemoryStore.html#M002751","(name, value, options = nil)","",2],["write","ActiveSupport::Cache::Store","classes.html\/ActiveSupport\/Cache\/Store.html#M003372","(key, value, options = nil)","Writes the given value to the cache, with the given key. You may also specify additional options via",2],["write","ActiveSupport::Cache::Strategy::LocalCache","classes.html\/ActiveSupport\/Cache\/Strategy\/LocalCache.html#M002731","(key, value, options = nil)","",2],["write","ActiveSupport::Cache::SynchronizedMemoryStore","classes.html\/ActiveSupport\/Cache\/SynchronizedMemoryStore.html#M002759","(name, value, options = nil)","",2],["write_fragment","ActionController::Caching::Fragments","classes.html\/ActionController\/Caching\/Fragments.html#M001574","(key, content, options = nil)","Writes <tt>content<\/tt> to the location signified by <tt>key<\/tt> (see <tt>expire_fragment<\/tt> for acceptable",2],["write_specification","Rails::GemDependency","classes.html\/Rails\/GemDependency.html#M000267","(spec)","",2],["xhr","ActionController::Integration::Session","classes.html\/ActionController\/Integration\/Session.html#M001841","(request_method, path, parameters = nil, headers = nil)","Alias for #xml_http_request",2],["xhr","ActionController::TestProcess","classes.html\/ActionController\/TestProcess.html#M001766","(request_method, action, parameters = nil, session = nil, flash = nil)","Alias for #xml_http_request",2],["xhr?","ActionController::Request","classes.html\/ActionController\/Request.html#M002010","()","Alias for #xml_http_request?",2],["xml","ActiveRecord::ConnectionAdapters::TableDefinition","classes.html\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M000721","(*args)","",2],["xml_column_fallback","ActiveRecord::ConnectionAdapters::TableDefinition","classes.html\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M000554","(*args)","",2],["xml_http_request","ActionController::Integration::Session","classes.html\/ActionController\/Integration\/Session.html#M001840","(request_method, path, parameters = nil, headers = nil)","Performs an XMLHttpRequest request with the given parameters, mirroring a request from the Prototype",2],["xml_http_request","ActionController::TestProcess","classes.html\/ActionController\/TestProcess.html#M001765","(request_method, action, parameters = nil, session = nil, flash = nil)","",2],["xml_http_request?","ActionController::Request","classes.html\/ActionController\/Request.html#M002009","()","Returns true if the request's \"X-Requested-With\" header contains \"XMLHttpRequest\". (The Prototype Javascript",2],["xmlschema","ActiveSupport::CoreExtensions::Date::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Conversions.html#M003154","()","",2],["xmlschema","ActiveSupport::CoreExtensions::DateTime::Conversions","classes.html\/ActiveSupport\/CoreExtensions\/DateTime\/Conversions.html#M002895","()","Converts datetime to an appropriate format for use in XML ",2],["xmlschema","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002554","(fraction_digits = 0)","",2],["xss_safe?","ActionView::Base","classes.html\/ActionView\/Base.html#M002208","()",":nodoc:  ",2],["year","ActiveSupport::CoreExtensions::Float::Time","classes.html\/ActiveSupport\/CoreExtensions\/Float\/Time.html#M002995","()","Alias for #years",2],["year","ActiveSupport::CoreExtensions::Integer::Time","classes.html\/ActiveSupport\/CoreExtensions\/Integer\/Time.html#M002948","()","Alias for #years",2],["years","ActiveSupport::CoreExtensions::Float::Time","classes.html\/ActiveSupport\/CoreExtensions\/Float\/Time.html#M002990","()","Deprication helper methods not available as core_ext is loaded first. ",2],["years","ActiveSupport::CoreExtensions::Integer::Time","classes.html\/ActiveSupport\/CoreExtensions\/Integer\/Time.html#M002947","()","",2],["years_ago","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003178","(years)","Returns a new Date\/DateTime representing the time a number of specified years ago ",2],["years_ago","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003111","(years)","Returns a new Time representing the time a number of specified years ago ",2],["years_since","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003179","(years)","Returns a new Date\/DateTime representing the time a number of specified years in the future ",2],["years_since","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003112","(years)","Returns a new Time representing the time a number of specified years in the future ",2],["years_without_deprecation","ActiveSupport::CoreExtensions::Float::Time","classes.html\/ActiveSupport\/CoreExtensions\/Float\/Time.html#M002994","()","",2],["yesterday","ActiveSupport::CoreExtensions::Date::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations.html#M003204","()","Convenience method which returns a new Date\/DateTime representing the time 1 day ago ",2],["yesterday","ActiveSupport::CoreExtensions::Date::Calculations::ClassMethods","classes.html\/ActiveSupport\/CoreExtensions\/Date\/Calculations\/ClassMethods.html#M003158","()","Returns a new Date representing the date 1 day ago (i.e. yesterday's date). ",2],["yesterday","ActiveSupport::CoreExtensions::Time::Calculations","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Calculations.html#M003142","()","Convenience method which returns a new Time representing the time 1 day ago ",2],["zone","ActiveSupport::CoreExtensions::Time::Zones::ClassMethods","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Zones\/ClassMethods.html#M003081","()","Returns the TimeZone for the current request, if this has been set (via Time.zone=).  If <tt>Time.zone<\/tt>",2],["zone","ActiveSupport::TimeWithZone","classes.html\/ActiveSupport\/TimeWithZone.html#M002552","()","Time uses +zone+ to display the time zone abbreviation, so we're duck-typing it. ",2],["zone=","ActiveSupport::CoreExtensions::Time::Zones::ClassMethods","classes.html\/ActiveSupport\/CoreExtensions\/Time\/Zones\/ClassMethods.html#M003082","(time_zone)","Sets <tt>Time.zone<\/tt> to a TimeZone object for the current request\/thread.  This method accepts any",2],["zones_map","ActiveSupport::TimeZone","classes.html\/ActiveSupport\/TimeZone.html#M002708","()","",2],["README","files.html\/README.html","files.html\/README.html","","== Welcome to Rails  Rails is a web-application framework that includes everything needed to create ",3],["CHANGELOG","files.html\/actionmailer\/CHANGELOG.html","files.html\/actionmailer\/CHANGELOG.html","","*2.3.8 (May 24, 2010)*  * Version bump.   *2.3.7 (May 24, 2010)*  * Version bump.   *2.3.6 (May 23, 2010)*",3],["README","files.html\/actionmailer\/README.html","files.html\/actionmailer\/README.html","","= Action Mailer -- Easy email delivery and testing  Action Mailer is a framework for designing email-service",3],["base.rb","files.html\/actionmailer\/lib\/action_mailer\/base_rb.html","files.html\/actionmailer\/lib\/action_mailer\/base_rb.html","","",3],["CHANGELOG","files.html\/actionpack\/CHANGELOG.html","files.html\/actionpack\/CHANGELOG.html","","*2.3.8 (May 24, 2010)*  * HTML safety: fix compatibility *without* the optional rails_xss plugin.   *2.3.7",3],["README","files.html\/actionpack\/README.html","files.html\/actionpack\/README.html","","= Action Pack -- On rails from request to response  Action Pack splits the response to a web request",3],["dom_assertions.rb","files.html\/actionpack\/lib\/action_controller\/assertions\/dom_assertions_rb.html","files.html\/actionpack\/lib\/action_controller\/assertions\/dom_assertions_rb.html","","",3],["model_assertions.rb","files.html\/actionpack\/lib\/action_controller\/assertions\/model_assertions_rb.html","files.html\/actionpack\/lib\/action_controller\/assertions\/model_assertions_rb.html","","",3],["response_assertions.rb","files.html\/actionpack\/lib\/action_controller\/assertions\/response_assertions_rb.html","files.html\/actionpack\/lib\/action_controller\/assertions\/response_assertions_rb.html","","",3],["routing_assertions.rb","files.html\/actionpack\/lib\/action_controller\/assertions\/routing_assertions_rb.html","files.html\/actionpack\/lib\/action_controller\/assertions\/routing_assertions_rb.html","","",3],["selector_assertions.rb","files.html\/actionpack\/lib\/action_controller\/assertions\/selector_assertions_rb.html","files.html\/actionpack\/lib\/action_controller\/assertions\/selector_assertions_rb.html","","--- FIXME: helper { ... } is broken on Ruby 1.9 ",3],["tag_assertions.rb","files.html\/actionpack\/lib\/action_controller\/assertions\/tag_assertions_rb.html","files.html\/actionpack\/lib\/action_controller\/assertions\/tag_assertions_rb.html","","",3],["base.rb","files.html\/actionpack\/lib\/action_controller\/base_rb.html","files.html\/actionpack\/lib\/action_controller\/base_rb.html","","",3],["benchmarking.rb","files.html\/actionpack\/lib\/action_controller\/benchmarking_rb.html","files.html\/actionpack\/lib\/action_controller\/benchmarking_rb.html","","",3],["caching.rb","files.html\/actionpack\/lib\/action_controller\/caching_rb.html","files.html\/actionpack\/lib\/action_controller\/caching_rb.html","","",3],["actions.rb","files.html\/actionpack\/lib\/action_controller\/caching\/actions_rb.html","files.html\/actionpack\/lib\/action_controller\/caching\/actions_rb.html","","",3],["fragments.rb","files.html\/actionpack\/lib\/action_controller\/caching\/fragments_rb.html","files.html\/actionpack\/lib\/action_controller\/caching\/fragments_rb.html","","",3],["pages.rb","files.html\/actionpack\/lib\/action_controller\/caching\/pages_rb.html","files.html\/actionpack\/lib\/action_controller\/caching\/pages_rb.html","","",3],["sweeper.rb","files.html\/actionpack\/lib\/action_controller\/caching\/sweeper_rb.html","files.html\/actionpack\/lib\/action_controller\/caching\/sweeper_rb.html","","",3],["sweeping.rb","files.html\/actionpack\/lib\/action_controller\/caching\/sweeping_rb.html","files.html\/actionpack\/lib\/action_controller\/caching\/sweeping_rb.html","","",3],["cgi_ext.rb","files.html\/actionpack\/lib\/action_controller\/cgi_ext_rb.html","files.html\/actionpack\/lib\/action_controller\/cgi_ext_rb.html","","",3],["cookie.rb","files.html\/actionpack\/lib\/action_controller\/cgi_ext\/cookie_rb.html","files.html\/actionpack\/lib\/action_controller\/cgi_ext\/cookie_rb.html","","",3],["query_extension.rb","files.html\/actionpack\/lib\/action_controller\/cgi_ext\/query_extension_rb.html","files.html\/actionpack\/lib\/action_controller\/cgi_ext\/query_extension_rb.html","","",3],["stdinput.rb","files.html\/actionpack\/lib\/action_controller\/cgi_ext\/stdinput_rb.html","files.html\/actionpack\/lib\/action_controller\/cgi_ext\/stdinput_rb.html","","",3],["cgi_process.rb","files.html\/actionpack\/lib\/action_controller\/cgi_process_rb.html","files.html\/actionpack\/lib\/action_controller\/cgi_process_rb.html","","",3],["cookies.rb","files.html\/actionpack\/lib\/action_controller\/cookies_rb.html","files.html\/actionpack\/lib\/action_controller\/cookies_rb.html","","",3],["dispatcher.rb","files.html\/actionpack\/lib\/action_controller\/dispatcher_rb.html","files.html\/actionpack\/lib\/action_controller\/dispatcher_rb.html","","",3],["failsafe.rb","files.html\/actionpack\/lib\/action_controller\/failsafe_rb.html","files.html\/actionpack\/lib\/action_controller\/failsafe_rb.html","","",3],["filters.rb","files.html\/actionpack\/lib\/action_controller\/filters_rb.html","files.html\/actionpack\/lib\/action_controller\/filters_rb.html","","",3],["flash.rb","files.html\/actionpack\/lib\/action_controller\/flash_rb.html","files.html\/actionpack\/lib\/action_controller\/flash_rb.html","","",3],["headers.rb","files.html\/actionpack\/lib\/action_controller\/headers_rb.html","files.html\/actionpack\/lib\/action_controller\/headers_rb.html","","",3],["helpers.rb","files.html\/actionpack\/lib\/action_controller\/helpers_rb.html","files.html\/actionpack\/lib\/action_controller\/helpers_rb.html","","",3],["http_authentication.rb","files.html\/actionpack\/lib\/action_controller\/http_authentication_rb.html","files.html\/actionpack\/lib\/action_controller\/http_authentication_rb.html","","",3],["integration.rb","files.html\/actionpack\/lib\/action_controller\/integration_rb.html","files.html\/actionpack\/lib\/action_controller\/integration_rb.html","","",3],["layout.rb","files.html\/actionpack\/lib\/action_controller\/layout_rb.html","files.html\/actionpack\/lib\/action_controller\/layout_rb.html","","",3],["middleware_stack.rb","files.html\/actionpack\/lib\/action_controller\/middleware_stack_rb.html","files.html\/actionpack\/lib\/action_controller\/middleware_stack_rb.html","","",3],["middlewares.rb","files.html\/actionpack\/lib\/action_controller\/middlewares_rb.html","files.html\/actionpack\/lib\/action_controller\/middlewares_rb.html","","",3],["mime_responds.rb","files.html\/actionpack\/lib\/action_controller\/mime_responds_rb.html","files.html\/actionpack\/lib\/action_controller\/mime_responds_rb.html","","",3],["mime_type.rb","files.html\/actionpack\/lib\/action_controller\/mime_type_rb.html","files.html\/actionpack\/lib\/action_controller\/mime_type_rb.html","","",3],["mime_types.rb","files.html\/actionpack\/lib\/action_controller\/mime_types_rb.html","files.html\/actionpack\/lib\/action_controller\/mime_types_rb.html","","Build list of Mime types for HTTP responses http:\/\/www.iana.org\/assignments\/media-types\/ ",3],["params_parser.rb","files.html\/actionpack\/lib\/action_controller\/params_parser_rb.html","files.html\/actionpack\/lib\/action_controller\/params_parser_rb.html","","",3],["performance_test.rb","files.html\/actionpack\/lib\/action_controller\/performance_test_rb.html","files.html\/actionpack\/lib\/action_controller\/performance_test_rb.html","","",3],["polymorphic_routes.rb","files.html\/actionpack\/lib\/action_controller\/polymorphic_routes_rb.html","files.html\/actionpack\/lib\/action_controller\/polymorphic_routes_rb.html","","",3],["rack_lint_patch.rb","files.html\/actionpack\/lib\/action_controller\/rack_lint_patch_rb.html","files.html\/actionpack\/lib\/action_controller\/rack_lint_patch_rb.html","","Rack 1.0 does not allow string subclass body. This does not play well with our ActiveSupport::SafeBuffer.",3],["record_identifier.rb","files.html\/actionpack\/lib\/action_controller\/record_identifier_rb.html","files.html\/actionpack\/lib\/action_controller\/record_identifier_rb.html","","",3],["reloader.rb","files.html\/actionpack\/lib\/action_controller\/reloader_rb.html","files.html\/actionpack\/lib\/action_controller\/reloader_rb.html","","",3],["request.rb","files.html\/actionpack\/lib\/action_controller\/request_rb.html","files.html\/actionpack\/lib\/action_controller\/request_rb.html","","",3],["request_forgery_protection.rb","files.html\/actionpack\/lib\/action_controller\/request_forgery_protection_rb.html","files.html\/actionpack\/lib\/action_controller\/request_forgery_protection_rb.html","","",3],["rescue.rb","files.html\/actionpack\/lib\/action_controller\/rescue_rb.html","files.html\/actionpack\/lib\/action_controller\/rescue_rb.html","","",3],["resources.rb","files.html\/actionpack\/lib\/action_controller\/resources_rb.html","files.html\/actionpack\/lib\/action_controller\/resources_rb.html","","",3],["response.rb","files.html\/actionpack\/lib\/action_controller\/response_rb.html","files.html\/actionpack\/lib\/action_controller\/response_rb.html","","",3],["routing.rb","files.html\/actionpack\/lib\/action_controller\/routing_rb.html","files.html\/actionpack\/lib\/action_controller\/routing_rb.html","","",3],["builder.rb","files.html\/actionpack\/lib\/action_controller\/routing\/builder_rb.html","files.html\/actionpack\/lib\/action_controller\/routing\/builder_rb.html","","",3],["optimisations.rb","files.html\/actionpack\/lib\/action_controller\/routing\/optimisations_rb.html","files.html\/actionpack\/lib\/action_controller\/routing\/optimisations_rb.html","","",3],["recognition_optimisation.rb","files.html\/actionpack\/lib\/action_controller\/routing\/recognition_optimisation_rb.html","files.html\/actionpack\/lib\/action_controller\/routing\/recognition_optimisation_rb.html","","",3],["route.rb","files.html\/actionpack\/lib\/action_controller\/routing\/route_rb.html","files.html\/actionpack\/lib\/action_controller\/routing\/route_rb.html","","",3],["route_set.rb","files.html\/actionpack\/lib\/action_controller\/routing\/route_set_rb.html","files.html\/actionpack\/lib\/action_controller\/routing\/route_set_rb.html","","",3],["routing_ext.rb","files.html\/actionpack\/lib\/action_controller\/routing\/routing_ext_rb.html","files.html\/actionpack\/lib\/action_controller\/routing\/routing_ext_rb.html","","",3],["segments.rb","files.html\/actionpack\/lib\/action_controller\/routing\/segments_rb.html","files.html\/actionpack\/lib\/action_controller\/routing\/segments_rb.html","","",3],["abstract_store.rb","files.html\/actionpack\/lib\/action_controller\/session\/abstract_store_rb.html","files.html\/actionpack\/lib\/action_controller\/session\/abstract_store_rb.html","","",3],["cookie_store.rb","files.html\/actionpack\/lib\/action_controller\/session\/cookie_store_rb.html","files.html\/actionpack\/lib\/action_controller\/session\/cookie_store_rb.html","","",3],["mem_cache_store.rb","files.html\/actionpack\/lib\/action_controller\/session\/mem_cache_store_rb.html","files.html\/actionpack\/lib\/action_controller\/session\/mem_cache_store_rb.html","","",3],["session_management.rb","files.html\/actionpack\/lib\/action_controller\/session_management_rb.html","files.html\/actionpack\/lib\/action_controller\/session_management_rb.html","","",3],["status_codes.rb","files.html\/actionpack\/lib\/action_controller\/status_codes_rb.html","files.html\/actionpack\/lib\/action_controller\/status_codes_rb.html","","",3],["streaming.rb","files.html\/actionpack\/lib\/action_controller\/streaming_rb.html","files.html\/actionpack\/lib\/action_controller\/streaming_rb.html","","",3],["string_coercion.rb","files.html\/actionpack\/lib\/action_controller\/string_coercion_rb.html","files.html\/actionpack\/lib\/action_controller\/string_coercion_rb.html","","",3],["test_case.rb","files.html\/actionpack\/lib\/action_controller\/test_case_rb.html","files.html\/actionpack\/lib\/action_controller\/test_case_rb.html","","",3],["test_process.rb","files.html\/actionpack\/lib\/action_controller\/test_process_rb.html","files.html\/actionpack\/lib\/action_controller\/test_process_rb.html","","",3],["translation.rb","files.html\/actionpack\/lib\/action_controller\/translation_rb.html","files.html\/actionpack\/lib\/action_controller\/translation_rb.html","","",3],["uploaded_file.rb","files.html\/actionpack\/lib\/action_controller\/uploaded_file_rb.html","files.html\/actionpack\/lib\/action_controller\/uploaded_file_rb.html","","",3],["url_rewriter.rb","files.html\/actionpack\/lib\/action_controller\/url_rewriter_rb.html","files.html\/actionpack\/lib\/action_controller\/url_rewriter_rb.html","","",3],["verification.rb","files.html\/actionpack\/lib\/action_controller\/verification_rb.html","files.html\/actionpack\/lib\/action_controller\/verification_rb.html","","",3],["base.rb","files.html\/actionpack\/lib\/action_view\/base_rb.html","files.html\/actionpack\/lib\/action_view\/base_rb.html","","",3],["helpers.rb","files.html\/actionpack\/lib\/action_view\/helpers_rb.html","files.html\/actionpack\/lib\/action_view\/helpers_rb.html","","",3],["active_record_helper.rb","files.html\/actionpack\/lib\/action_view\/helpers\/active_record_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/active_record_helper_rb.html","","",3],["asset_tag_helper.rb","files.html\/actionpack\/lib\/action_view\/helpers\/asset_tag_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/asset_tag_helper_rb.html","","",3],["atom_feed_helper.rb","files.html\/actionpack\/lib\/action_view\/helpers\/atom_feed_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/atom_feed_helper_rb.html","","",3],["benchmark_helper.rb","files.html\/actionpack\/lib\/action_view\/helpers\/benchmark_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/benchmark_helper_rb.html","","",3],["cache_helper.rb","files.html\/actionpack\/lib\/action_view\/helpers\/cache_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/cache_helper_rb.html","","",3],["capture_helper.rb","files.html\/actionpack\/lib\/action_view\/helpers\/capture_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/capture_helper_rb.html","","",3],["date_helper.rb","files.html\/actionpack\/lib\/action_view\/helpers\/date_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/date_helper_rb.html","","",3],["debug_helper.rb","files.html\/actionpack\/lib\/action_view\/helpers\/debug_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/debug_helper_rb.html","","",3],["form_helper.rb","files.html\/actionpack\/lib\/action_view\/helpers\/form_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/form_helper_rb.html","","",3],["form_options_helper.rb","files.html\/actionpack\/lib\/action_view\/helpers\/form_options_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/form_options_helper_rb.html","","",3],["form_tag_helper.rb","files.html\/actionpack\/lib\/action_view\/helpers\/form_tag_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/form_tag_helper_rb.html","","",3],["javascript_helper.rb","files.html\/actionpack\/lib\/action_view\/helpers\/javascript_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/javascript_helper_rb.html","","",3],["number_helper.rb","files.html\/actionpack\/lib\/action_view\/helpers\/number_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/number_helper_rb.html","","",3],["prototype_helper.rb","files.html\/actionpack\/lib\/action_view\/helpers\/prototype_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/prototype_helper_rb.html","","",3],["raw_output_helper.rb","files.html\/actionpack\/lib\/action_view\/helpers\/raw_output_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/raw_output_helper_rb.html","","",3],["record_identification_helper.rb","files.html\/actionpack\/lib\/action_view\/helpers\/record_identification_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/record_identification_helper_rb.html","","",3],["record_tag_helper.rb","files.html\/actionpack\/lib\/action_view\/helpers\/record_tag_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/record_tag_helper_rb.html","","",3],["sanitize_helper.rb","files.html\/actionpack\/lib\/action_view\/helpers\/sanitize_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/sanitize_helper_rb.html","","",3],["scriptaculous_helper.rb","files.html\/actionpack\/lib\/action_view\/helpers\/scriptaculous_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/scriptaculous_helper_rb.html","","",3],["tag_helper.rb","files.html\/actionpack\/lib\/action_view\/helpers\/tag_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/tag_helper_rb.html","","",3],["text_helper.rb","files.html\/actionpack\/lib\/action_view\/helpers\/text_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/text_helper_rb.html","","",3],["translation_helper.rb","files.html\/actionpack\/lib\/action_view\/helpers\/translation_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/translation_helper_rb.html","","",3],["url_helper.rb","files.html\/actionpack\/lib\/action_view\/helpers\/url_helper_rb.html","files.html\/actionpack\/lib\/action_view\/helpers\/url_helper_rb.html","","require 'action_view\/helpers\/javascript_helper' ",3],["inline_template.rb","files.html\/actionpack\/lib\/action_view\/inline_template_rb.html","files.html\/actionpack\/lib\/action_view\/inline_template_rb.html","","",3],["partials.rb","files.html\/actionpack\/lib\/action_view\/partials_rb.html","files.html\/actionpack\/lib\/action_view\/partials_rb.html","","",3],["paths.rb","files.html\/actionpack\/lib\/action_view\/paths_rb.html","files.html\/actionpack\/lib\/action_view\/paths_rb.html","","",3],["reloadable_template.rb","files.html\/actionpack\/lib\/action_view\/reloadable_template_rb.html","files.html\/actionpack\/lib\/action_view\/reloadable_template_rb.html","","",3],["renderable.rb","files.html\/actionpack\/lib\/action_view\/renderable_rb.html","files.html\/actionpack\/lib\/action_view\/renderable_rb.html","","encoding: utf-8 --- Adds easy defaults to writing Atom feeds with the Builder template engine (this does",3],["renderable_partial.rb","files.html\/actionpack\/lib\/action_view\/renderable_partial_rb.html","files.html\/actionpack\/lib\/action_view\/renderable_partial_rb.html","","",3],["template.rb","files.html\/actionpack\/lib\/action_view\/template_rb.html","files.html\/actionpack\/lib\/action_view\/template_rb.html","","",3],["template_error.rb","files.html\/actionpack\/lib\/action_view\/template_error_rb.html","files.html\/actionpack\/lib\/action_view\/template_error_rb.html","","",3],["template_handler.rb","files.html\/actionpack\/lib\/action_view\/template_handler_rb.html","files.html\/actionpack\/lib\/action_view\/template_handler_rb.html","","Legacy TemplateHandler stub ",3],["template_handlers.rb","files.html\/actionpack\/lib\/action_view\/template_handlers_rb.html","files.html\/actionpack\/lib\/action_view\/template_handlers_rb.html","","",3],["builder.rb","files.html\/actionpack\/lib\/action_view\/template_handlers\/builder_rb.html","files.html\/actionpack\/lib\/action_view\/template_handlers\/builder_rb.html","","",3],["erb.rb","files.html\/actionpack\/lib\/action_view\/template_handlers\/erb_rb.html","files.html\/actionpack\/lib\/action_view\/template_handlers\/erb_rb.html","","",3],["rjs.rb","files.html\/actionpack\/lib\/action_view\/template_handlers\/rjs_rb.html","files.html\/actionpack\/lib\/action_view\/template_handlers\/rjs_rb.html","","",3],["test_case.rb","files.html\/actionpack\/lib\/action_view\/test_case_rb.html","files.html\/actionpack\/lib\/action_view\/test_case_rb.html","","",3],["CHANGELOG","files.html\/activerecord\/CHANGELOG.html","files.html\/activerecord\/CHANGELOG.html","","*2.3.8 (May 24, 2010)*  * Version bump.   *2.3.7 (May 24, 2010)*  * Version bump.   *2.3.6 (May 23, 2010)*",3],["README","files.html\/activerecord\/README.html","files.html\/activerecord\/README.html","","= Active Record -- Object-relation mapping put on rails  Active Record connects business objects and",3],["aggregations.rb","files.html\/activerecord\/lib\/active_record\/aggregations_rb.html","files.html\/activerecord\/lib\/active_record\/aggregations_rb.html","","",3],["association_preload.rb","files.html\/activerecord\/lib\/active_record\/association_preload_rb.html","files.html\/activerecord\/lib\/active_record\/association_preload_rb.html","","",3],["associations.rb","files.html\/activerecord\/lib\/active_record\/associations_rb.html","files.html\/activerecord\/lib\/active_record\/associations_rb.html","","",3],["association_collection.rb","files.html\/activerecord\/lib\/active_record\/associations\/association_collection_rb.html","files.html\/activerecord\/lib\/active_record\/associations\/association_collection_rb.html","","",3],["association_proxy.rb","files.html\/activerecord\/lib\/active_record\/associations\/association_proxy_rb.html","files.html\/activerecord\/lib\/active_record\/associations\/association_proxy_rb.html","","",3],["belongs_to_association.rb","files.html\/activerecord\/lib\/active_record\/associations\/belongs_to_association_rb.html","files.html\/activerecord\/lib\/active_record\/associations\/belongs_to_association_rb.html","","",3],["belongs_to_polymorphic_association.rb","files.html\/activerecord\/lib\/active_record\/associations\/belongs_to_polymorphic_association_rb.html","files.html\/activerecord\/lib\/active_record\/associations\/belongs_to_polymorphic_association_rb.html","","",3],["has_and_belongs_to_many_association.rb","files.html\/activerecord\/lib\/active_record\/associations\/has_and_belongs_to_many_association_rb.html","files.html\/activerecord\/lib\/active_record\/associations\/has_and_belongs_to_many_association_rb.html","","",3],["has_many_association.rb","files.html\/activerecord\/lib\/active_record\/associations\/has_many_association_rb.html","files.html\/activerecord\/lib\/active_record\/associations\/has_many_association_rb.html","","",3],["has_many_through_association.rb","files.html\/activerecord\/lib\/active_record\/associations\/has_many_through_association_rb.html","files.html\/activerecord\/lib\/active_record\/associations\/has_many_through_association_rb.html","","",3],["has_one_association.rb","files.html\/activerecord\/lib\/active_record\/associations\/has_one_association_rb.html","files.html\/activerecord\/lib\/active_record\/associations\/has_one_association_rb.html","","",3],["has_one_through_association.rb","files.html\/activerecord\/lib\/active_record\/associations\/has_one_through_association_rb.html","files.html\/activerecord\/lib\/active_record\/associations\/has_one_through_association_rb.html","","",3],["attribute_methods.rb","files.html\/activerecord\/lib\/active_record\/attribute_methods_rb.html","files.html\/activerecord\/lib\/active_record\/attribute_methods_rb.html","","",3],["autosave_association.rb","files.html\/activerecord\/lib\/active_record\/autosave_association_rb.html","files.html\/activerecord\/lib\/active_record\/autosave_association_rb.html","","",3],["base.rb","files.html\/activerecord\/lib\/active_record\/base_rb.html","files.html\/activerecord\/lib\/active_record\/base_rb.html","","",3],["batches.rb","files.html\/activerecord\/lib\/active_record\/batches_rb.html","files.html\/activerecord\/lib\/active_record\/batches_rb.html","","",3],["calculations.rb","files.html\/activerecord\/lib\/active_record\/calculations_rb.html","files.html\/activerecord\/lib\/active_record\/calculations_rb.html","","",3],["callbacks.rb","files.html\/activerecord\/lib\/active_record\/callbacks_rb.html","files.html\/activerecord\/lib\/active_record\/callbacks_rb.html","","",3],["connection_pool.rb","files.html\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/connection_pool_rb.html","files.html\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/connection_pool_rb.html","","",3],["connection_specification.rb","files.html\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/connection_specification_rb.html","files.html\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/connection_specification_rb.html","","",3],["database_limits.rb","files.html\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/database_limits_rb.html","files.html\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/database_limits_rb.html","","",3],["database_statements.rb","files.html\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/database_statements_rb.html","files.html\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/database_statements_rb.html","","",3],["query_cache.rb","files.html\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/query_cache_rb.html","files.html\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/query_cache_rb.html","","",3],["quoting.rb","files.html\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/quoting_rb.html","files.html\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/quoting_rb.html","","",3],["schema_definitions.rb","files.html\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/schema_definitions_rb.html","files.html\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/schema_definitions_rb.html","","",3],["schema_statements.rb","files.html\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/schema_statements_rb.html","files.html\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/schema_statements_rb.html","","",3],["abstract_adapter.rb","files.html\/activerecord\/lib\/active_record\/connection_adapters\/abstract_adapter_rb.html","files.html\/activerecord\/lib\/active_record\/connection_adapters\/abstract_adapter_rb.html","","",3],["mysql_adapter.rb","files.html\/activerecord\/lib\/active_record\/connection_adapters\/mysql_adapter_rb.html","files.html\/activerecord\/lib\/active_record\/connection_adapters\/mysql_adapter_rb.html","","",3],["postgresql_adapter.rb","files.html\/activerecord\/lib\/active_record\/connection_adapters\/postgresql_adapter_rb.html","files.html\/activerecord\/lib\/active_record\/connection_adapters\/postgresql_adapter_rb.html","","",3],["sqlite3_adapter.rb","files.html\/activerecord\/lib\/active_record\/connection_adapters\/sqlite3_adapter_rb.html","files.html\/activerecord\/lib\/active_record\/connection_adapters\/sqlite3_adapter_rb.html","","",3],["sqlite_adapter.rb","files.html\/activerecord\/lib\/active_record\/connection_adapters\/sqlite_adapter_rb.html","files.html\/activerecord\/lib\/active_record\/connection_adapters\/sqlite_adapter_rb.html","","encoding: binary ",3],["dirty.rb","files.html\/activerecord\/lib\/active_record\/dirty_rb.html","files.html\/activerecord\/lib\/active_record\/dirty_rb.html","","",3],["dynamic_finder_match.rb","files.html\/activerecord\/lib\/active_record\/dynamic_finder_match_rb.html","files.html\/activerecord\/lib\/active_record\/dynamic_finder_match_rb.html","","",3],["dynamic_scope_match.rb","files.html\/activerecord\/lib\/active_record\/dynamic_scope_match_rb.html","files.html\/activerecord\/lib\/active_record\/dynamic_scope_match_rb.html","","",3],["fixtures.rb","files.html\/activerecord\/lib\/active_record\/fixtures_rb.html","files.html\/activerecord\/lib\/active_record\/fixtures_rb.html","","",3],["optimistic.rb","files.html\/activerecord\/lib\/active_record\/locking\/optimistic_rb.html","files.html\/activerecord\/lib\/active_record\/locking\/optimistic_rb.html","","",3],["pessimistic.rb","files.html\/activerecord\/lib\/active_record\/locking\/pessimistic_rb.html","files.html\/activerecord\/lib\/active_record\/locking\/pessimistic_rb.html","","",3],["migration.rb","files.html\/activerecord\/lib\/active_record\/migration_rb.html","files.html\/activerecord\/lib\/active_record\/migration_rb.html","","",3],["named_scope.rb","files.html\/activerecord\/lib\/active_record\/named_scope_rb.html","files.html\/activerecord\/lib\/active_record\/named_scope_rb.html","","",3],["nested_attributes.rb","files.html\/activerecord\/lib\/active_record\/nested_attributes_rb.html","files.html\/activerecord\/lib\/active_record\/nested_attributes_rb.html","","",3],["observer.rb","files.html\/activerecord\/lib\/active_record\/observer_rb.html","files.html\/activerecord\/lib\/active_record\/observer_rb.html","","",3],["query_cache.rb","files.html\/activerecord\/lib\/active_record\/query_cache_rb.html","files.html\/activerecord\/lib\/active_record\/query_cache_rb.html","","",3],["reflection.rb","files.html\/activerecord\/lib\/active_record\/reflection_rb.html","files.html\/activerecord\/lib\/active_record\/reflection_rb.html","","",3],["schema.rb","files.html\/activerecord\/lib\/active_record\/schema_rb.html","files.html\/activerecord\/lib\/active_record\/schema_rb.html","","",3],["schema_dumper.rb","files.html\/activerecord\/lib\/active_record\/schema_dumper_rb.html","files.html\/activerecord\/lib\/active_record\/schema_dumper_rb.html","","",3],["serialization.rb","files.html\/activerecord\/lib\/active_record\/serialization_rb.html","files.html\/activerecord\/lib\/active_record\/serialization_rb.html","","",3],["json_serializer.rb","files.html\/activerecord\/lib\/active_record\/serializers\/json_serializer_rb.html","files.html\/activerecord\/lib\/active_record\/serializers\/json_serializer_rb.html","","",3],["xml_serializer.rb","files.html\/activerecord\/lib\/active_record\/serializers\/xml_serializer_rb.html","files.html\/activerecord\/lib\/active_record\/serializers\/xml_serializer_rb.html","","",3],["session_store.rb","files.html\/activerecord\/lib\/active_record\/session_store_rb.html","files.html\/activerecord\/lib\/active_record\/session_store_rb.html","","",3],["test_case.rb","files.html\/activerecord\/lib\/active_record\/test_case_rb.html","files.html\/activerecord\/lib\/active_record\/test_case_rb.html","","",3],["timestamp.rb","files.html\/activerecord\/lib\/active_record\/timestamp_rb.html","files.html\/activerecord\/lib\/active_record\/timestamp_rb.html","","",3],["transactions.rb","files.html\/activerecord\/lib\/active_record\/transactions_rb.html","files.html\/activerecord\/lib\/active_record\/transactions_rb.html","","",3],["validations.rb","files.html\/activerecord\/lib\/active_record\/validations_rb.html","files.html\/activerecord\/lib\/active_record\/validations_rb.html","","",3],["version.rb","files.html\/activerecord\/lib\/active_record\/version_rb.html","files.html\/activerecord\/lib\/active_record\/version_rb.html","","",3],["CHANGELOG","files.html\/activeresource\/CHANGELOG.html","files.html\/activeresource\/CHANGELOG.html","","*2.3.8 (May 24, 2010)*  * Version bump.   *2.3.7 (May 24, 2010)*  * Version bump.   *2.3.6 (May 23, 2010)*",3],["README","files.html\/activeresource\/README.html","files.html\/activeresource\/README.html","","= Active Resource  Active Resource (ARes) connects business objects and Representational State Transfer",3],["active_resource.rb","files.html\/activeresource\/lib\/active_resource_rb.html","files.html\/activeresource\/lib\/active_resource_rb.html",""," ",3],["base.rb","files.html\/activeresource\/lib\/active_resource\/base_rb.html","files.html\/activeresource\/lib\/active_resource\/base_rb.html","","",3],["connection.rb","files.html\/activeresource\/lib\/active_resource\/connection_rb.html","files.html\/activeresource\/lib\/active_resource\/connection_rb.html","","",3],["custom_methods.rb","files.html\/activeresource\/lib\/active_resource\/custom_methods_rb.html","files.html\/activeresource\/lib\/active_resource\/custom_methods_rb.html","","",3],["exceptions.rb","files.html\/activeresource\/lib\/active_resource\/exceptions_rb.html","files.html\/activeresource\/lib\/active_resource\/exceptions_rb.html","","",3],["formats.rb","files.html\/activeresource\/lib\/active_resource\/formats_rb.html","files.html\/activeresource\/lib\/active_resource\/formats_rb.html","","",3],["json_format.rb","files.html\/activeresource\/lib\/active_resource\/formats\/json_format_rb.html","files.html\/activeresource\/lib\/active_resource\/formats\/json_format_rb.html","","",3],["xml_format.rb","files.html\/activeresource\/lib\/active_resource\/formats\/xml_format_rb.html","files.html\/activeresource\/lib\/active_resource\/formats\/xml_format_rb.html","","",3],["http_mock.rb","files.html\/activeresource\/lib\/active_resource\/http_mock_rb.html","files.html\/activeresource\/lib\/active_resource\/http_mock_rb.html","","",3],["validations.rb","files.html\/activeresource\/lib\/active_resource\/validations_rb.html","files.html\/activeresource\/lib\/active_resource\/validations_rb.html","","",3],["version.rb","files.html\/activeresource\/lib\/active_resource\/version_rb.html","files.html\/activeresource\/lib\/active_resource\/version_rb.html","","",3],["CHANGELOG","files.html\/activesupport\/CHANGELOG.html","files.html\/activesupport\/CHANGELOG.html","","*2.3.8 (May 24, 2010)*  * Version bump.   *2.3.7 (May 24, 2010)*  * HTML safety: fix compatibility with",3],["README","files.html\/activesupport\/README.html","files.html\/activesupport\/README.html","","= Active Support -- Utility classes and standard library extensions from Rails  Active Support is a collection",3],["all.rb","files.html\/activesupport\/lib\/active_support\/all_rb.html","files.html\/activesupport\/lib\/active_support\/all_rb.html","","For forward compatibility with Rails 3. require 'active_support' loads a very bare minumum in Rails 3.",3],["backtrace_cleaner.rb","files.html\/activesupport\/lib\/active_support\/backtrace_cleaner_rb.html","files.html\/activesupport\/lib\/active_support\/backtrace_cleaner_rb.html","","",3],["base64.rb","files.html\/activesupport\/lib\/active_support\/base64_rb.html","files.html\/activesupport\/lib\/active_support\/base64_rb.html","","",3],["basic_object.rb","files.html\/activesupport\/lib\/active_support\/basic_object_rb.html","files.html\/activesupport\/lib\/active_support\/basic_object_rb.html","","A base class with no predefined methods that tries to behave like Builder's BlankSlate in Ruby 1.9. In",3],["buffered_logger.rb","files.html\/activesupport\/lib\/active_support\/buffered_logger_rb.html","files.html\/activesupport\/lib\/active_support\/buffered_logger_rb.html","","",3],["cache.rb","files.html\/activesupport\/lib\/active_support\/cache_rb.html","files.html\/activesupport\/lib\/active_support\/cache_rb.html","","",3],["compressed_mem_cache_store.rb","files.html\/activesupport\/lib\/active_support\/cache\/compressed_mem_cache_store_rb.html","files.html\/activesupport\/lib\/active_support\/cache\/compressed_mem_cache_store_rb.html","","",3],["drb_store.rb","files.html\/activesupport\/lib\/active_support\/cache\/drb_store_rb.html","files.html\/activesupport\/lib\/active_support\/cache\/drb_store_rb.html","","",3],["file_store.rb","files.html\/activesupport\/lib\/active_support\/cache\/file_store_rb.html","files.html\/activesupport\/lib\/active_support\/cache\/file_store_rb.html","","",3],["mem_cache_store.rb","files.html\/activesupport\/lib\/active_support\/cache\/mem_cache_store_rb.html","files.html\/activesupport\/lib\/active_support\/cache\/mem_cache_store_rb.html","","",3],["memory_store.rb","files.html\/activesupport\/lib\/active_support\/cache\/memory_store_rb.html","files.html\/activesupport\/lib\/active_support\/cache\/memory_store_rb.html","","",3],["local_cache.rb","files.html\/activesupport\/lib\/active_support\/cache\/strategy\/local_cache_rb.html","files.html\/activesupport\/lib\/active_support\/cache\/strategy\/local_cache_rb.html","","",3],["synchronized_memory_store.rb","files.html\/activesupport\/lib\/active_support\/cache\/synchronized_memory_store_rb.html","files.html\/activesupport\/lib\/active_support\/cache\/synchronized_memory_store_rb.html","","",3],["callbacks.rb","files.html\/activesupport\/lib\/active_support\/callbacks_rb.html","files.html\/activesupport\/lib\/active_support\/callbacks_rb.html","","",3],["core_ext.rb","files.html\/activesupport\/lib\/active_support\/core_ext_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext_rb.html","","",3],["array.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/array_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/array_rb.html","","",3],["access.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/array\/access_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/array\/access_rb.html","","",3],["conversions.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/array\/conversions_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/array\/conversions_rb.html","","",3],["extract_options.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/array\/extract_options_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/array\/extract_options_rb.html","","",3],["grouping.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/array\/grouping_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/array\/grouping_rb.html","","",3],["random_access.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/array\/random_access_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/array\/random_access_rb.html","","",3],["wrapper.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/array\/wrapper_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/array\/wrapper_rb.html","","",3],["base64.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/base64_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/base64_rb.html","","",3],["encoding.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/base64\/encoding_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/base64\/encoding_rb.html","","",3],["benchmark.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/benchmark_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/benchmark_rb.html","","",3],["bigdecimal.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/bigdecimal_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/bigdecimal_rb.html","","",3],["conversions.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/bigdecimal\/conversions_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/bigdecimal\/conversions_rb.html","","",3],["blank.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/blank_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/blank_rb.html","","",3],["cgi.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/cgi_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/cgi_rb.html","","",3],["escape_skipping_slashes.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/cgi\/escape_skipping_slashes_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/cgi\/escape_skipping_slashes_rb.html","","",3],["class.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/class_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/class_rb.html","","",3],["attribute_accessors.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/class\/attribute_accessors_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/class\/attribute_accessors_rb.html","","Extends the class object with class and instance accessors for class attributes, just like the native",3],["delegating_attributes.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/class\/delegating_attributes_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/class\/delegating_attributes_rb.html","","These class attributes behave something like the class inheritable accessors.  But instead of copying",3],["inheritable_attributes.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/class\/inheritable_attributes_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/class\/inheritable_attributes_rb.html","","Retain for backward compatibility.  Methods are now included in Class. ",3],["removal.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/class\/removal_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/class\/removal_rb.html","","",3],["date.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/date_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/date_rb.html","","",3],["behavior.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/date\/behavior_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/date\/behavior_rb.html","","",3],["calculations.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/date\/calculations_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/date\/calculations_rb.html","","",3],["conversions.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/date\/conversions_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/date\/conversions_rb.html","","",3],["date_time.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/date_time_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/date_time_rb.html","","",3],["calculations.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/date_time\/calculations_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/date_time\/calculations_rb.html","","",3],["conversions.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/date_time\/conversions_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/date_time\/conversions_rb.html","","",3],["duplicable.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/duplicable_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/duplicable_rb.html","","",3],["enumerable.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/enumerable_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/enumerable_rb.html","","",3],["exception.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/exception_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/exception_rb.html","","",3],["file.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/file_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/file_rb.html","","",3],["atomic.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/file\/atomic_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/file\/atomic_rb.html","","",3],["float.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/float_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/float_rb.html","","",3],["rounding.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/float\/rounding_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/float\/rounding_rb.html","","",3],["time.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/float\/time_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/float\/time_rb.html","","",3],["hash.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/hash_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/hash_rb.html","","",3],["conversions.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/hash\/conversions_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/hash\/conversions_rb.html","","",3],["deep_merge.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/hash\/deep_merge_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/hash\/deep_merge_rb.html","","",3],["diff.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/hash\/diff_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/hash\/diff_rb.html","","",3],["except.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/hash\/except_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/hash\/except_rb.html","","",3],["indifferent_access.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/hash\/indifferent_access_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/hash\/indifferent_access_rb.html","","This class has dubious semantics and we only have it so that people can write params[:key] instead of",3],["keys.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/hash\/keys_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/hash\/keys_rb.html","","",3],["reverse_merge.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/hash\/reverse_merge_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/hash\/reverse_merge_rb.html","","",3],["slice.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/hash\/slice_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/hash\/slice_rb.html","","",3],["integer.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/integer_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/integer_rb.html","","",3],["even_odd.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/integer\/even_odd_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/integer\/even_odd_rb.html","","",3],["inflections.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/integer\/inflections_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/integer\/inflections_rb.html","","",3],["time.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/integer\/time_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/integer\/time_rb.html","","",3],["kernel.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/kernel_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/kernel_rb.html","","",3],["agnostics.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/kernel\/agnostics_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/kernel\/agnostics_rb.html","","",3],["daemonizing.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/kernel\/daemonizing_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/kernel\/daemonizing_rb.html","","",3],["debugger.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/kernel\/debugger_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/kernel\/debugger_rb.html","","",3],["reporting.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/kernel\/reporting_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/kernel\/reporting_rb.html","","",3],["requires.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/kernel\/requires_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/kernel\/requires_rb.html","","",3],["load_error.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/load_error_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/load_error_rb.html","","",3],["logger.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/logger_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/logger_rb.html","","Adds the 'around_level' method to Logger. ",3],["module.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/module_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/module_rb.html","","",3],["aliasing.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/aliasing_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/aliasing_rb.html","","",3],["attr_accessor_with_default.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/attr_accessor_with_default_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/attr_accessor_with_default_rb.html","","",3],["attr_internal.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/attr_internal_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/attr_internal_rb.html","","",3],["attribute_accessors.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/attribute_accessors_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/attribute_accessors_rb.html","","",3],["delegation.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/delegation_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/delegation_rb.html","","",3],["inclusion.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/inclusion_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/inclusion_rb.html","","",3],["introspection.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/introspection_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/introspection_rb.html","","",3],["loading.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/loading_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/loading_rb.html","","",3],["model_naming.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/model_naming_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/model_naming_rb.html","","",3],["synchronization.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/synchronization_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/module\/synchronization_rb.html","","",3],["name_error.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/name_error_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/name_error_rb.html","","Add a +missing_name+ method to NameError instances. ",3],["numeric.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/numeric_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/numeric_rb.html","","",3],["bytes.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/numeric\/bytes_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/numeric\/bytes_rb.html","","",3],["conversions.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/numeric\/conversions_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/numeric\/conversions_rb.html","","",3],["time.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/numeric\/time_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/numeric\/time_rb.html","","",3],["object.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/object_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/object_rb.html","","",3],["blank.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/object\/blank_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/object\/blank_rb.html","","",3],["conversions.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/object\/conversions_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/object\/conversions_rb.html","","",3],["extending.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/object\/extending_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/object\/extending_rb.html","","",3],["instance_variables.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/object\/instance_variables_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/object\/instance_variables_rb.html","","",3],["metaclass.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/object\/metaclass_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/object\/metaclass_rb.html","","",3],["misc.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/object\/misc_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/object\/misc_rb.html","","",3],["singleton_class.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/object\/singleton_class_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/object\/singleton_class_rb.html","","",3],["pathname.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/pathname_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/pathname_rb.html","","",3],["clean_within.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/pathname\/clean_within_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/pathname\/clean_within_rb.html","","",3],["proc.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/proc_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/proc_rb.html","","",3],["process.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/process_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/process_rb.html","","",3],["daemon.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/process\/daemon_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/process\/daemon_rb.html","","",3],["range.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/range_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/range_rb.html","","",3],["blockless_step.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/range\/blockless_step_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/range\/blockless_step_rb.html","","",3],["conversions.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/range\/conversions_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/range\/conversions_rb.html","","",3],["include_range.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/range\/include_range_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/range\/include_range_rb.html","","",3],["overlaps.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/range\/overlaps_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/range\/overlaps_rb.html","","",3],["rexml.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/rexml_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/rexml_rb.html","","Fixes%20the%20rexml%20vulnerability%20disclosed%20at_%20http_.html\/\/www.ruby-lang.org\/en\/news\/2008\/08\/23\/dos-vulnerability-in-rexml\/",3],["string.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/string_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/string_rb.html","","encoding: utf-8 ",3],["access.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/access_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/access_rb.html","","",3],["behavior.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/behavior_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/behavior_rb.html","","",3],["bytesize.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/bytesize_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/bytesize_rb.html","","",3],["conversions.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/conversions_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/conversions_rb.html","","",3],["filters.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/filters_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/filters_rb.html","","",3],["inflections.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/inflections_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/inflections_rb.html","","",3],["iterators.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/iterators_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/iterators_rb.html","","",3],["multibyte.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/multibyte_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/multibyte_rb.html","","encoding: utf-8 ",3],["output_safety.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/output_safety_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/output_safety_rb.html","","",3],["starts_ends_with.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/starts_ends_with_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/starts_ends_with_rb.html","","",3],["xchar.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/xchar_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/string\/xchar_rb.html","","",3],["symbol.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/symbol_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/symbol_rb.html","","",3],["time.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/time_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/time_rb.html","","",3],["behavior.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/time\/behavior_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/time\/behavior_rb.html","","",3],["calculations.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/time\/calculations_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/time\/calculations_rb.html","","",3],["conversions.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/time\/conversions_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/time\/conversions_rb.html","","",3],["zones.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/time\/zones_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/time\/zones_rb.html","","",3],["try.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/try_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/try_rb.html","","",3],["uri.rb","files.html\/activesupport\/lib\/active_support\/core_ext\/uri_rb.html","files.html\/activesupport\/lib\/active_support\/core_ext\/uri_rb.html","","",3],["dependencies.rb","files.html\/activesupport\/lib\/active_support\/dependencies_rb.html","files.html\/activesupport\/lib\/active_support\/dependencies_rb.html","","",3],["deprecation.rb","files.html\/activesupport\/lib\/active_support\/deprecation_rb.html","files.html\/activesupport\/lib\/active_support\/deprecation_rb.html","","",3],["duration.rb","files.html\/activesupport\/lib\/active_support\/duration_rb.html","files.html\/activesupport\/lib\/active_support\/duration_rb.html","","",3],["gzip.rb","files.html\/activesupport\/lib\/active_support\/gzip_rb.html","files.html\/activesupport\/lib\/active_support\/gzip_rb.html","","",3],["inflections.rb","files.html\/activesupport\/lib\/active_support\/inflections_rb.html","files.html\/activesupport\/lib\/active_support\/inflections_rb.html","","",3],["inflector.rb","files.html\/activesupport\/lib\/active_support\/inflector_rb.html","files.html\/activesupport\/lib\/active_support\/inflector_rb.html","","encoding: utf-8 ",3],["json.rb","files.html\/activesupport\/lib\/active_support\/json_rb.html","files.html\/activesupport\/lib\/active_support\/json_rb.html","","",3],["jsongem.rb","files.html\/activesupport\/lib\/active_support\/json\/backends\/jsongem_rb.html","files.html\/activesupport\/lib\/active_support\/json\/backends\/jsongem_rb.html","","",3],["yajl.rb","files.html\/activesupport\/lib\/active_support\/json\/backends\/yajl_rb.html","files.html\/activesupport\/lib\/active_support\/json\/backends\/yajl_rb.html","","",3],["yaml.rb","files.html\/activesupport\/lib\/active_support\/json\/backends\/yaml_rb.html","files.html\/activesupport\/lib\/active_support\/json\/backends\/yaml_rb.html","","",3],["decoding.rb","files.html\/activesupport\/lib\/active_support\/json\/decoding_rb.html","files.html\/activesupport\/lib\/active_support\/json\/decoding_rb.html","","",3],["date.rb","files.html\/activesupport\/lib\/active_support\/json\/encoders\/date_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoders\/date_rb.html","","",3],["date_time.rb","files.html\/activesupport\/lib\/active_support\/json\/encoders\/date_time_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoders\/date_time_rb.html","","",3],["enumerable.rb","files.html\/activesupport\/lib\/active_support\/json\/encoders\/enumerable_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoders\/enumerable_rb.html","","",3],["false_class.rb","files.html\/activesupport\/lib\/active_support\/json\/encoders\/false_class_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoders\/false_class_rb.html","","",3],["hash.rb","files.html\/activesupport\/lib\/active_support\/json\/encoders\/hash_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoders\/hash_rb.html","","",3],["nil_class.rb","files.html\/activesupport\/lib\/active_support\/json\/encoders\/nil_class_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoders\/nil_class_rb.html","","",3],["numeric.rb","files.html\/activesupport\/lib\/active_support\/json\/encoders\/numeric_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoders\/numeric_rb.html","","",3],["object.rb","files.html\/activesupport\/lib\/active_support\/json\/encoders\/object_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoders\/object_rb.html","","",3],["regexp.rb","files.html\/activesupport\/lib\/active_support\/json\/encoders\/regexp_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoders\/regexp_rb.html","","",3],["string.rb","files.html\/activesupport\/lib\/active_support\/json\/encoders\/string_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoders\/string_rb.html","","",3],["symbol.rb","files.html\/activesupport\/lib\/active_support\/json\/encoders\/symbol_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoders\/symbol_rb.html","","",3],["time.rb","files.html\/activesupport\/lib\/active_support\/json\/encoders\/time_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoders\/time_rb.html","","",3],["true_class.rb","files.html\/activesupport\/lib\/active_support\/json\/encoders\/true_class_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoders\/true_class_rb.html","","",3],["encoding.rb","files.html\/activesupport\/lib\/active_support\/json\/encoding_rb.html","files.html\/activesupport\/lib\/active_support\/json\/encoding_rb.html","","encoding: utf-8 ",3],["variable.rb","files.html\/activesupport\/lib\/active_support\/json\/variable_rb.html","files.html\/activesupport\/lib\/active_support\/json\/variable_rb.html","","",3],["memoizable.rb","files.html\/activesupport\/lib\/active_support\/memoizable_rb.html","files.html\/activesupport\/lib\/active_support\/memoizable_rb.html","","",3],["message_encryptor.rb","files.html\/activesupport\/lib\/active_support\/message_encryptor_rb.html","files.html\/activesupport\/lib\/active_support\/message_encryptor_rb.html","","",3],["message_verifier.rb","files.html\/activesupport\/lib\/active_support\/message_verifier_rb.html","files.html\/activesupport\/lib\/active_support\/message_verifier_rb.html","","",3],["multibyte.rb","files.html\/activesupport\/lib\/active_support\/multibyte_rb.html","files.html\/activesupport\/lib\/active_support\/multibyte_rb.html","","encoding: utf-8 ",3],["chars.rb","files.html\/activesupport\/lib\/active_support\/multibyte\/chars_rb.html","files.html\/activesupport\/lib\/active_support\/multibyte\/chars_rb.html","","encoding: utf-8 ",3],["exceptions.rb","files.html\/activesupport\/lib\/active_support\/multibyte\/exceptions_rb.html","files.html\/activesupport\/lib\/active_support\/multibyte\/exceptions_rb.html","","encoding: utf-8 ",3],["unicode_database.rb","files.html\/activesupport\/lib\/active_support\/multibyte\/unicode_database_rb.html","files.html\/activesupport\/lib\/active_support\/multibyte\/unicode_database_rb.html","","encoding: utf-8 ",3],["utils.rb","files.html\/activesupport\/lib\/active_support\/multibyte\/utils_rb.html","files.html\/activesupport\/lib\/active_support\/multibyte\/utils_rb.html","","encoding: utf-8 ",3],["option_merger.rb","files.html\/activesupport\/lib\/active_support\/option_merger_rb.html","files.html\/activesupport\/lib\/active_support\/option_merger_rb.html","","",3],["ordered_hash.rb","files.html\/activesupport\/lib\/active_support\/ordered_hash_rb.html","files.html\/activesupport\/lib\/active_support\/ordered_hash_rb.html","","",3],["ordered_options.rb","files.html\/activesupport\/lib\/active_support\/ordered_options_rb.html","files.html\/activesupport\/lib\/active_support\/ordered_options_rb.html","","",3],["rescuable.rb","files.html\/activesupport\/lib\/active_support\/rescuable_rb.html","files.html\/activesupport\/lib\/active_support\/rescuable_rb.html","","",3],["secure_random.rb","files.html\/activesupport\/lib\/active_support\/secure_random_rb.html","files.html\/activesupport\/lib\/active_support\/secure_random_rb.html","","",3],["string_inquirer.rb","files.html\/activesupport\/lib\/active_support\/string_inquirer_rb.html","files.html\/activesupport\/lib\/active_support\/string_inquirer_rb.html","","",3],["test_case.rb","files.html\/activesupport\/lib\/active_support\/test_case_rb.html","files.html\/activesupport\/lib\/active_support\/test_case_rb.html","","",3],["assertions.rb","files.html\/activesupport\/lib\/active_support\/testing\/assertions_rb.html","files.html\/activesupport\/lib\/active_support\/testing\/assertions_rb.html","","",3],["declarative.rb","files.html\/activesupport\/lib\/active_support\/testing\/declarative_rb.html","files.html\/activesupport\/lib\/active_support\/testing\/declarative_rb.html","","",3],["default.rb","files.html\/activesupport\/lib\/active_support\/testing\/default_rb.html","files.html\/activesupport\/lib\/active_support\/testing\/default_rb.html","","",3],["deprecation.rb","files.html\/activesupport\/lib\/active_support\/testing\/deprecation_rb.html","files.html\/activesupport\/lib\/active_support\/testing\/deprecation_rb.html","","",3],["performance.rb","files.html\/activesupport\/lib\/active_support\/testing\/performance_rb.html","files.html\/activesupport\/lib\/active_support\/testing\/performance_rb.html","","",3],["setup_and_teardown.rb","files.html\/activesupport\/lib\/active_support\/testing\/setup_and_teardown_rb.html","files.html\/activesupport\/lib\/active_support\/testing\/setup_and_teardown_rb.html","","",3],["time_with_zone.rb","files.html\/activesupport\/lib\/active_support\/time_with_zone_rb.html","files.html\/activesupport\/lib\/active_support\/time_with_zone_rb.html","","",3],["time_zone.rb","files.html\/activesupport\/lib\/active_support\/values\/time_zone_rb.html","files.html\/activesupport\/lib\/active_support\/values\/time_zone_rb.html","","The TimeZone class serves as a wrapper around TZInfo::Timezone instances. It allows us to do the following:",3],["vendor.rb","files.html\/activesupport\/lib\/active_support\/vendor_rb.html","files.html\/activesupport\/lib\/active_support\/vendor_rb.html","","Prefer gems to the bundled libs. ",3],["version.rb","files.html\/activesupport\/lib\/active_support\/version_rb.html","files.html\/activesupport\/lib\/active_support\/version_rb.html","","",3],["whiny_nil.rb","files.html\/activesupport\/lib\/active_support\/whiny_nil_rb.html","files.html\/activesupport\/lib\/active_support\/whiny_nil_rb.html","","Extensions to +nil+ which allow for more helpful error messages for people who are new to Rails. Ruby",3],["xml_mini.rb","files.html\/activesupport\/lib\/active_support\/xml_mini_rb.html","files.html\/activesupport\/lib\/active_support\/xml_mini_rb.html","","",3],["jdom.rb","files.html\/activesupport\/lib\/active_support\/xml_mini\/jdom_rb.html","files.html\/activesupport\/lib\/active_support\/xml_mini\/jdom_rb.html","","",3],["libxml.rb","files.html\/activesupport\/lib\/active_support\/xml_mini\/libxml_rb.html","files.html\/activesupport\/lib\/active_support\/xml_mini\/libxml_rb.html","","",3],["libxmlsax.rb","files.html\/activesupport\/lib\/active_support\/xml_mini\/libxmlsax_rb.html","files.html\/activesupport\/lib\/active_support\/xml_mini\/libxmlsax_rb.html","","",3],["nokogiri.rb","files.html\/activesupport\/lib\/active_support\/xml_mini\/nokogiri_rb.html","files.html\/activesupport\/lib\/active_support\/xml_mini\/nokogiri_rb.html","","",3],["nokogirisax.rb","files.html\/activesupport\/lib\/active_support\/xml_mini\/nokogirisax_rb.html","files.html\/activesupport\/lib\/active_support\/xml_mini\/nokogirisax_rb.html","","",3],["rexml.rb","files.html\/activesupport\/lib\/active_support\/xml_mini\/rexml_rb.html","files.html\/activesupport\/lib\/active_support\/xml_mini\/rexml_rb.html","","= XmlMini ReXML implementation --- = XmlMini JRuby JDOM implementation --- = XmlMini Nokogiri implementation",3],["CHANGELOG","files.html\/railties\/CHANGELOG.html","files.html\/railties\/CHANGELOG.html","","*2.3.8 (May 24, 2010)*  * Version bump.   *2.3.7 (May 24, 2010)*  * Version bump.   *2.3.6 (May 23, 2010)*",3],["MIT-LICENSE","files.html\/railties\/MIT-LICENSE.html","files.html\/railties\/MIT-LICENSE.html","","Copyright (c) 2004-2010 David Heinemeier Hansson  Permission is hereby granted, free of charge, to any",3],["README","files.html\/railties\/README.html","files.html\/railties\/README.html","","== Welcome to Rails  Rails is a web-application framework that includes everything needed to create ",3],["code_statistics.rb","files.html\/railties\/lib\/code_statistics_rb.html","files.html\/railties\/lib\/code_statistics_rb.html","","",3],["commands.rb","files.html\/railties\/lib\/commands_rb.html","files.html\/railties\/lib\/commands_rb.html","","",3],["about.rb","files.html\/railties\/lib\/commands\/about_rb.html","files.html\/railties\/lib\/commands\/about_rb.html","","",3],["console.rb","files.html\/railties\/lib\/commands\/console_rb.html","files.html\/railties\/lib\/commands\/console_rb.html","","",3],["dbconsole.rb","files.html\/railties\/lib\/commands\/dbconsole_rb.html","files.html\/railties\/lib\/commands\/dbconsole_rb.html","","",3],["destroy.rb","files.html\/railties\/lib\/commands\/destroy_rb.html","files.html\/railties\/lib\/commands\/destroy_rb.html","","",3],["generate.rb","files.html\/railties\/lib\/commands\/generate_rb.html","files.html\/railties\/lib\/commands\/generate_rb.html","","",3],["plugin.rb","files.html\/railties\/lib\/commands\/plugin_rb.html","files.html\/railties\/lib\/commands\/plugin_rb.html","","Rails Plugin Manager. Listing available plugins: $ .\/script\/plugin list continuous_builder          ",3],["runner.rb","files.html\/railties\/lib\/commands\/runner_rb.html","files.html\/railties\/lib\/commands\/runner_rb.html","","",3],["server.rb","files.html\/railties\/lib\/commands\/server_rb.html","files.html\/railties\/lib\/commands\/server_rb.html","","",3],["update.rb","files.html\/railties\/lib\/commands\/update_rb.html","files.html\/railties\/lib\/commands\/update_rb.html","","",3],["console_app.rb","files.html\/railties\/lib\/console_app_rb.html","files.html\/railties\/lib\/console_app_rb.html","","",3],["console_sandbox.rb","files.html\/railties\/lib\/console_sandbox_rb.html","files.html\/railties\/lib\/console_sandbox_rb.html","","",3],["console_with_helpers.rb","files.html\/railties\/lib\/console_with_helpers_rb.html","files.html\/railties\/lib\/console_with_helpers_rb.html","","",3],["dispatcher.rb","files.html\/railties\/lib\/dispatcher_rb.html","files.html\/railties\/lib\/dispatcher_rb.html",""," ",3],["fcgi_handler.rb","files.html\/railties\/lib\/fcgi_handler_rb.html","files.html\/railties\/lib\/fcgi_handler_rb.html","","",3],["initializer.rb","files.html\/railties\/lib\/initializer_rb.html","files.html\/railties\/lib\/initializer_rb.html","","",3],["performance_test_help.rb","files.html\/railties\/lib\/performance_test_help_rb.html","files.html\/railties\/lib\/performance_test_help_rb.html","","",3],["backtrace_cleaner.rb","files.html\/railties\/lib\/rails\/backtrace_cleaner_rb.html","files.html\/railties\/lib\/rails\/backtrace_cleaner_rb.html","","",3],["gem_builder.rb","files.html\/railties\/lib\/rails\/gem_builder_rb.html","files.html\/railties\/lib\/rails\/gem_builder_rb.html","","",3],["gem_dependency.rb","files.html\/railties\/lib\/rails\/gem_dependency_rb.html","files.html\/railties\/lib\/rails\/gem_dependency_rb.html","","",3],["plugin.rb","files.html\/railties\/lib\/rails\/plugin_rb.html","files.html\/railties\/lib\/rails\/plugin_rb.html","","",3],["rack.rb","files.html\/railties\/lib\/rails\/rack_rb.html","files.html\/railties\/lib\/rails\/rack_rb.html","","",3],["vendor_gem_source_index.rb","files.html\/railties\/lib\/rails\/vendor_gem_source_index_rb.html","files.html\/railties\/lib\/rails\/vendor_gem_source_index_rb.html","","",3],["version.rb","files.html\/railties\/lib\/rails\/version_rb.html","files.html\/railties\/lib\/rails\/version_rb.html","","",3],["rails_generator.rb","files.html\/railties\/lib\/rails_generator_rb.html","files.html\/railties\/lib\/rails_generator_rb.html",""," ",3],["base.rb","files.html\/railties\/lib\/rails_generator\/base_rb.html","files.html\/railties\/lib\/rails_generator\/base_rb.html","","",3],["commands.rb","files.html\/railties\/lib\/rails_generator\/commands_rb.html","files.html\/railties\/lib\/rails_generator\/commands_rb.html","","",3],["generated_attribute.rb","files.html\/railties\/lib\/rails_generator\/generated_attribute_rb.html","files.html\/railties\/lib\/rails_generator\/generated_attribute_rb.html","","",3],["lookup.rb","files.html\/railties\/lib\/rails_generator\/lookup_rb.html","files.html\/railties\/lib\/rails_generator\/lookup_rb.html","","",3],["manifest.rb","files.html\/railties\/lib\/rails_generator\/manifest_rb.html","files.html\/railties\/lib\/rails_generator\/manifest_rb.html","","",3],["options.rb","files.html\/railties\/lib\/rails_generator\/options_rb.html","files.html\/railties\/lib\/rails_generator\/options_rb.html","","",3],["scripts.rb","files.html\/railties\/lib\/rails_generator\/scripts_rb.html","files.html\/railties\/lib\/rails_generator\/scripts_rb.html","","",3],["secret_key_generator.rb","files.html\/railties\/lib\/rails_generator\/secret_key_generator_rb.html","files.html\/railties\/lib\/rails_generator\/secret_key_generator_rb.html","","",3],["simple_logger.rb","files.html\/railties\/lib\/rails_generator\/simple_logger_rb.html","files.html\/railties\/lib\/rails_generator\/simple_logger_rb.html","","",3],["spec.rb","files.html\/railties\/lib\/rails_generator\/spec_rb.html","files.html\/railties\/lib\/rails_generator\/spec_rb.html","","",3],["railties_path.rb","files.html\/railties\/lib\/railties_path_rb.html","files.html\/railties\/lib\/railties_path_rb.html","","",3],["ruby_version_check.rb","files.html\/railties\/lib\/ruby_version_check_rb.html","files.html\/railties\/lib\/ruby_version_check_rb.html","","",3],["rubyprof_ext.rb","files.html\/railties\/lib\/rubyprof_ext_rb.html","files.html\/railties\/lib\/rubyprof_ext_rb.html","","",3],["source_annotation_extractor.rb","files.html\/railties\/lib\/source_annotation_extractor_rb.html","files.html\/railties\/lib\/source_annotation_extractor_rb.html","","Implements the logic behind the rake tasks for annotations like rake notes rake notes:optimize and friends.",3],["test_help.rb","files.html\/railties\/lib\/test_help_rb.html","files.html\/railties\/lib\/test_help_rb.html","","Make double-sure the RAILS_ENV is set to test, so fixtures are loaded to the right database ",3],["webrick_server.rb","files.html\/railties\/lib\/webrick_server_rb.html","files.html\/railties\/lib\/webrick_server_rb.html","","Donated by Florian Gross ",3]]}}